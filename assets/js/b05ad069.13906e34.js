"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[3920],{3905:(e,t,r)=>{r.d(t,{Zo:()=>p,kt:()=>h});var n=r(7294);function i(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function a(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){i(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,i=function(e,t){if(null==e)return{};var r,n,i={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(i[r]=e[r]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(i[r]=e[r])}return i}var s=n.createContext({}),c=function(e){var t=n.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):a(a({},t),e)),r},p=function(e){var t=c(e.components);return n.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,i=e.mdxType,o=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),d=c(r),h=i,m=d["".concat(s,".").concat(h)]||d[h]||u[h]||o;return r?n.createElement(m,a(a({ref:t},p),{},{components:r})):n.createElement(m,a({ref:t},p))}));function h(e,t){var r=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var o=r.length,a=new Array(o);a[0]=d;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:i,a[1]=l;for(var c=2;c<o;c++)a[c]=r[c];return n.createElement.apply(null,a)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},6751:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>s,contentTitle:()=>a,default:()=>u,frontMatter:()=>o,metadata:()=>l,toc:()=>c});var n=r(7462),i=(r(7294),r(3905));const o={sidebar_position:2},a="Getting Started",l={unversionedId:"architecture/components/proxy/getting-started",id:"architecture/components/proxy/getting-started",title:"Getting Started",description:"The Nevermined Proxy (aka proxy) allows to interact with HTTP web services to which their access is protected and restristed to users holding a NFT subscription.",source:"@site/docs/architecture/components/proxy/getting-started.md",sourceDirName:"architecture/components/proxy",slug:"/architecture/components/proxy/getting-started",permalink:"/docs/architecture/components/proxy/getting-started",draft:!1,editUrl:"https://github.com/nevermined-io/docs/tree/main/docs/architecture/components/proxy/getting-started.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Nevermined Proxy",permalink:"/docs/architecture/components/proxy/"},next:{title:"Solution Architecture",permalink:"/docs/architecture/components/proxy/architecture"}},s={},c=[{value:"Pre-requisites",id:"pre-requisites",level:2},{value:"How to run the Proxy?",id:"how-to-run-the-proxy",level:2},{value:"Environment variables",id:"environment-variables",level:3},{value:"Running the NGINX Proxy via Docker",id:"running-the-nginx-proxy-via-docker",level:3}],p={toc:c};function u(e){let{components:t,...r}=e;return(0,i.kt)("wrapper",(0,n.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"getting-started"},"Getting Started"),(0,i.kt)("p",null,"The Nevermined Proxy (aka ",(0,i.kt)("inlineCode",{parentName:"p"},"proxy"),") allows to interact with HTTP web services to which their access is protected and restristed to users holding a NFT subscription."),(0,i.kt)("p",null,"The proxy allow the utilization of these web services when the user sending a HTTP request sends a JWT message that demonstrates that holds a valid NFT subscription for the specific web services is trying to get access."),(0,i.kt)("h2",{id:"pre-requisites"},"Pre-requisites"),(0,i.kt)("p",null,"The Nevermined Proxy is a solution that combines 2 different components providing that proxy functionality:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"An OAUTH Introspection service that validates JWT user messages. This oauth service is built using Typescript."),(0,i.kt)("li",{parentName:"ul"},"A NGINX instance configured to integrate the above oauth service as authorization mechanism")),(0,i.kt)("h2",{id:"how-to-run-the-proxy"},"How to run the Proxy?"),(0,i.kt)("h3",{id:"environment-variables"},"Environment variables"),(0,i.kt)("p",null,"The proxy uses the following environment variables:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"SERVER_HOST")," - The host used by the Oauth Server. By default and the recommended configuration is to use ",(0,i.kt)("inlineCode",{parentName:"li"},"127.0.0.1")," so only the proxy process (NGINX) can connect to the local OAuth introspection server."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"SERVER_PORT")," - The port used by the OAuth server. By default is ",(0,i.kt)("inlineCode",{parentName:"li"},"4000"),". This port in normal configurations will be ",(0,i.kt)("strong",{parentName:"li"},"internal")," so won't be exposed and only will be accesible by the proxy process."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"JWT_SECRET_PHRASE")," - Shared secret between a Node instance and the Proxy. This secret phrase will be used to encrypt JWT messages by the Node and decrypt by the Proxy.")),(0,i.kt)("h3",{id:"running-the-nginx-proxy-via-docker"},"Running the NGINX Proxy via Docker"),(0,i.kt)("p",null,"The OAuth Server accepts the following environment variables:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"SERVER_HOST")," - The host or address the OAuth server will be listen. By default ",(0,i.kt)("inlineCode",{parentName:"li"},"127.0.0.1")," but if you need to configure from out of the server/pod it can be ",(0,i.kt)("inlineCode",{parentName:"li"},"0.0.0.0")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"SERVER_PORT")," - Port the OAuth server will be listening. It is ",(0,i.kt)("inlineCode",{parentName:"li"},"4000")," by default"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"JWT_SECRET_PHRASE")," - Shared secret between a Node instance and the Proxy. This secret phrase will be used to encrypt JWT messages by the Node and decrypt by the Proxy")),(0,i.kt)("p",null,"The NGINX container accepts the following environment variables:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"INTROSPECTION_URL")," - The url to call to perform the OAuth introspection. It is the URL to the OAuth server. By default ",(0,i.kt)("inlineCode",{parentName:"li"},"http://127.0.0.1:4000/introspect"))),(0,i.kt)("p",null,"The project has 3 Docker containers:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"nevermined-io/proxy:latest")," - It bundles the NGINX and OAuth server in the same image"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"neverminedio/proxy:nginx-latest")," - NGINX "),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"neverminedio/proxy:oauth-latest")," - The OAuth server")),(0,i.kt)("p",null,"You can build it locally too and run it:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},'docker build . -t nginx-proxy\ndocker run -v $(pwd)/conf/certs:/ssl/certs -p 443:443 -p 3128:3128  -e "INTROSPECTION_URL=http://127.0.0.1:4000" nginx-proxy\n')),(0,i.kt)("p",null,"Or pull the pre-built images:"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://hub.docker.com/repository/docker/neverminedio/proxy/general"},"https://hub.docker.com/repository/docker/neverminedio/proxy/general")))}u.isMDXComponent=!0}}]);