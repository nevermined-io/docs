"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[584],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>m});var r=n(67294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var l=r.createContext({}),c=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},p=function(e){var t=c(e.components);return r.createElement(l.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,l=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),u=c(n),m=o,y=u["".concat(l,".").concat(m)]||u[m]||d[m]||a;return n?r.createElement(y,s(s({ref:t},p),{},{components:n})):r.createElement(y,s({ref:t},p))}));function m(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,s=new Array(a);s[0]=u;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i.mdxType="string"==typeof e?e:o,s[1]=i;for(var c=2;c<a;c++)s[c]=n[c];return r.createElement.apply(null,s)}return r.createElement.apply(null,n)}u.displayName="MDXCreateElement"},90735:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>s,default:()=>d,frontMatter:()=>a,metadata:()=>i,toc:()=>c});var r=n(87462),o=(n(67294),n(3905));const a={sidebar_position:5,description:"Payment Plans"},s="Payment Plans",i={unversionedId:"protocol/payment-plans",id:"protocol/payment-plans",title:"Payment Plans",description:"Payment Plans",source:"@site/docs/protocol/payment-plans.mdx",sourceDirName:"protocol",slug:"/protocol/payment-plans",permalink:"/docs/protocol/payment-plans",draft:!1,editUrl:"https://github.com/nevermined-io/docs/tree/main/docs/protocol/payment-plans.mdx",tags:[],version:"current",sidebarPosition:5,frontMatter:{sidebar_position:5,description:"Payment Plans"},sidebar:"tutorialSidebar",previous:{title:"Foundations",permalink:"/docs/protocol/foundations"},next:{title:"User Flows",permalink:"/docs/protocol/user-flows"}},l={},c=[],p={toc:c};function d(e){let{components:t,...n}=e;return(0,o.kt)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"payment-plans"},"Payment Plans"),(0,o.kt)("p",null,"Nevermined Payment Plans are a new concept that build on blockchain smart contract and NFT technology, and provide much greater utility and flexibility than current NFTs. Traditionally, NFT technology has been applied to represent a unique asset, in a 1-to-1 relationship. For example, a Bored Ape NFT has one JPEG for each token. While the 1-to-1 nature of NFT technology works well for things like static digital art, event tickets, etc., it doesn\u2019t work well when a use case requires access to multiple assets."),(0,o.kt)("p",null,"In the case of AI, a workflow might require access to dozens of assets (i.e. data, models and analysis services). If each dataset, model, or analysis service was represented by an NFT, this would correspond to dozens of on-chain transactions, performed via a wallet, to orchestrate the end-to-end process. The result is an expensive and slow process."),(0,o.kt)("p",null,"Instead, Payment Plans facilitate the creation of buckets of assets under one token in a 1-to-many relationship. In the case of AI, now one Payment Plan can represent multiple AI Agents, datasets, analysis services, models, etc., to be orchestrated in an AI service pipeline that produces an inference or output."),(0,o.kt)("p",null,"In addition, Nevermined has added the ability to include a time-based access parameter to the Payment Plans and its related assets. This opens the possibility of token gate access for 1 hour, 1 day, 1 month, 1 year, etc\u2026"))}d.isMDXComponent=!0}}]);