"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[4930],{3905:(t,e,a)=>{a.d(e,{Zo:()=>p,kt:()=>k});var n=a(67294);function l(t,e,a){return e in t?Object.defineProperty(t,e,{value:a,enumerable:!0,configurable:!0,writable:!0}):t[e]=a,t}function r(t,e){var a=Object.keys(t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(t);e&&(n=n.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),a.push.apply(a,n)}return a}function i(t){for(var e=1;e<arguments.length;e++){var a=null!=arguments[e]?arguments[e]:{};e%2?r(Object(a),!0).forEach((function(e){l(t,e,a[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(a)):r(Object(a)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(a,e))}))}return t}function d(t,e){if(null==t)return{};var a,n,l=function(t,e){if(null==t)return{};var a,n,l={},r=Object.keys(t);for(n=0;n<r.length;n++)a=r[n],e.indexOf(a)>=0||(l[a]=t[a]);return l}(t,e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);for(n=0;n<r.length;n++)a=r[n],e.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(t,a)&&(l[a]=t[a])}return l}var s=n.createContext({}),o=function(t){var e=n.useContext(s),a=e;return t&&(a="function"==typeof t?t(e):i(i({},e),t)),a},p=function(t){var e=o(t.components);return n.createElement(s.Provider,{value:e},t.children)},u={inlineCode:"code",wrapper:function(t){var e=t.children;return n.createElement(n.Fragment,{},e)}},m=n.forwardRef((function(t,e){var a=t.components,l=t.mdxType,r=t.originalType,s=t.parentName,p=d(t,["components","mdxType","originalType","parentName"]),m=o(a),k=l,N=m["".concat(s,".").concat(k)]||m[k]||u[k]||r;return a?n.createElement(N,i(i({ref:e},p),{},{components:a})):n.createElement(N,i({ref:e},p))}));function k(t,e){var a=arguments,l=e&&e.mdxType;if("string"==typeof t||l){var r=a.length,i=new Array(r);i[0]=m;var d={};for(var s in e)hasOwnProperty.call(e,s)&&(d[s]=e[s]);d.originalType=t,d.mdxType="string"==typeof t?t:l,i[1]=d;for(var o=2;o<r;o++)i[o]=a[o];return n.createElement.apply(null,i)}return n.createElement.apply(null,a)}m.displayName="MDXCreateElement"},77811:(t,e,a)=>{a.r(e),a.d(e,{assets:()=>s,contentTitle:()=>i,default:()=>u,frontMatter:()=>r,metadata:()=>d,toc:()=>o});var n=a(87462),l=(a(67294),a(3905));const r={sidebar_position:2},i="Solidity API",d={unversionedId:"architecture/contracts/solidity-api",id:"architecture/contracts/solidity-api",title:"Solidity API",description:"TestDisputeManager",source:"@site/docs/architecture/contracts/solidity-api.md",sourceDirName:"architecture/contracts",slug:"/architecture/contracts/solidity-api",permalink:"/docs/architecture/contracts/solidity-api",draft:!1,editUrl:"https://github.com/nevermined-io/docs/tree/main/docs/architecture/contracts/solidity-api.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Contracts ABIs",permalink:"/docs/architecture/contracts/ContractABIs"},next:{title:"Packaging",permalink:"/docs/architecture/contracts/Packages"}},s={},o=[{value:"TestDisputeManager",id:"testdisputemanager",level:2},{value:"accept",id:"accept",level:3},{value:"accepted",id:"accepted",level:3},{value:"setAccepted",id:"setaccepted",level:3},{value:"Common",id:"common",level:2},{value:"getCurrentBlockNumber",id:"getcurrentblocknumber",level:3},{value:"isContract",id:"iscontract",level:3},{value:"provenanceSignatureIsCorrect",id:"provenancesignatureiscorrect",level:3},{value:"calculateTotalAmount",id:"calculatetotalamount",level:3},{value:"addressToBytes32",id:"addresstobytes32",level:3},{value:"bytes32ToAddress",id:"bytes32toaddress",level:3},{value:"Dispenser",id:"dispenser",level:2},{value:"tokenRequests",id:"tokenrequests",level:3},{value:"totalMintAmount",id:"totalmintamount",level:3},{value:"maxAmount",id:"maxamount",level:3},{value:"maxMintAmount",id:"maxmintamount",level:3},{value:"minPeriod",id:"minperiod",level:3},{value:"scale",id:"scale",level:3},{value:"token",id:"token",level:3},{value:"RequestFrequencyExceeded",id:"requestfrequencyexceeded",level:3},{value:"RequestLimitExceeded",id:"requestlimitexceeded",level:3},{value:"isValidAddress",id:"isvalidaddress",level:3},{value:"initialize",id:"initialize",level:3},{value:"requestTokens",id:"requesttokens",level:3},{value:"setMinPeriod",id:"setminperiod",level:3},{value:"setMaxAmount",id:"setmaxamount",level:3},{value:"setMaxMintAmount",id:"setmaxmintamount",level:3},{value:"HashLists",id:"hashlists",level:2},{value:"lists",id:"lists",level:3},{value:"initialize",id:"initialize-1",level:3},{value:"hash",id:"hash",level:3},{value:"add",id:"add",level:3},{value:"add",id:"add-1",level:3},{value:"update",id:"update",level:3},{value:"index",id:"index",level:3},{value:"has",id:"has",level:3},{value:"has",id:"has-1",level:3},{value:"remove",id:"remove",level:3},{value:"get",id:"get",level:3},{value:"size",id:"size",level:3},{value:"all",id:"all",level:3},{value:"indexOf",id:"indexof",level:3},{value:"ownedBy",id:"ownedby",level:3},{value:"isIndexed",id:"isindexed",level:3},{value:"NeverminedToken",id:"neverminedtoken",level:2},{value:"initialize",id:"initialize-2",level:3},{value:"_beforeTokenTransfer",id:"_beforetokentransfer",level:3},{value:"mint",id:"mint",level:3},{value:"AgreementStoreLibrary",id:"agreementstorelibrary",level:2},{value:"Agreement",id:"agreement",level:3},{value:"AgreementList",id:"agreementlist",level:3},{value:"create",id:"create",level:3},{value:"Template",id:"template",level:2},{value:"getConditionTypes",id:"getconditiontypes",level:3},{value:"AgreementStoreManager",id:"agreementstoremanager",level:2},{value:"PROXY_ROLE",id:"proxy_role",level:3},{value:"grantProxyRole",id:"grantproxyrole",level:3},{value:"revokeProxyRole",id:"revokeproxyrole",level:3},{value:"agreementList",id:"agreementlist-1",level:3},{value:"conditionStoreManager",id:"conditionstoremanager",level:3},{value:"templateStoreManager",id:"templatestoremanager",level:3},{value:"didRegistry",id:"didregistry",level:3},{value:"initialize",id:"initialize-3",level:3},{value:"fullConditionId",id:"fullconditionid",level:3},{value:"agreementId",id:"agreementid",level:3},{value:"createAgreement",id:"createagreement",level:3},{value:"CreateAgreementArgs",id:"createagreementargs",level:3},{value:"createAgreementAndPay",id:"createagreementandpay",level:3},{value:"createAgreementAndFulfill",id:"createagreementandfulfill",level:3},{value:"getAgreementTemplate",id:"getagreementtemplate",level:3},{value:"getDIDRegistryAddress",id:"getdidregistryaddress",level:3},{value:"AccessCondition",id:"accesscondition",level:2},{value:"CONDITION_TYPE",id:"condition_type",level:3},{value:"DocumentPermission",id:"documentpermission",level:3},{value:"documentPermissions",id:"documentpermissions",level:3},{value:"agreementStoreManager",id:"agreementstoremanager-1",level:3},{value:"didRegistry",id:"didregistry-1",level:3},{value:"Fulfilled",id:"fulfilled",level:3},{value:"onlyDIDOwnerOrProvider",id:"onlydidownerorprovider",level:3},{value:"initialize",id:"initialize-4",level:3},{value:"reinitialize",id:"reinitialize",level:3},{value:"hashValues",id:"hashvalues",level:3},{value:"fulfill",id:"fulfill",level:3},{value:"grantPermission",id:"grantpermission",level:3},{value:"renouncePermission",id:"renouncepermission",level:3},{value:"checkPermissions",id:"checkpermissions",level:3},{value:"IDisputeManager",id:"idisputemanager",level:2},{value:"verifyProof",id:"verifyproof",level:3},{value:"AccessProofCondition",id:"accessproofcondition",level:2},{value:"CONDITION_TYPE",id:"condition_type-1",level:3},{value:"agreementStoreManager",id:"agreementstoremanager-2",level:3},{value:"disputeManager",id:"disputemanager",level:3},{value:"Fulfilled",id:"fulfilled-1",level:3},{value:"initialize",id:"initialize-5",level:3},{value:"changeDisputeManager",id:"changedisputemanager",level:3},{value:"hashValues",id:"hashvalues-1",level:3},{value:"fulfill",id:"fulfill-1",level:3},{value:"ComputeExecutionCondition",id:"computeexecutioncondition",level:2},{value:"CONDITION_TYPE",id:"condition_type-2",level:3},{value:"computeExecutionStatus",id:"computeexecutionstatus",level:3},{value:"agreementStoreManager",id:"agreementstoremanager-3",level:3},{value:"Fulfilled",id:"fulfilled-2",level:3},{value:"onlyDIDOwnerOrProvider",id:"onlydidownerorprovider-1",level:3},{value:"initialize",id:"initialize-6",level:3},{value:"hashValues",id:"hashvalues-2",level:3},{value:"fulfill",id:"fulfill-2",level:3},{value:"wasComputeTriggered",id:"wascomputetriggered",level:3},{value:"Condition",id:"condition",level:2},{value:"conditionStoreManager",id:"conditionstoremanager-1",level:3},{value:"generateId",id:"generateid",level:3},{value:"fulfill",id:"fulfill-3",level:3},{value:"abortByTimeOut",id:"abortbytimeout",level:3},{value:"ConditionStoreLibrary",id:"conditionstorelibrary",level:2},{value:"ConditionState",id:"conditionstate",level:3},{value:"Condition",id:"condition-1",level:3},{value:"ConditionList",id:"conditionlist",level:3},{value:"create",id:"create-1",level:3},{value:"updateState",id:"updatestate",level:3},{value:"updateKeyValue",id:"updatekeyvalue",level:3},{value:"ConditionStoreManager",id:"conditionstoremanager-2",level:2},{value:"PROXY_ROLE",id:"proxy_role-1",level:3},{value:"RoleType",id:"roletype",level:3},{value:"createRole",id:"createrole",level:3},{value:"conditionList",id:"conditionlist-1",level:3},{value:"epochList",id:"epochlist",level:3},{value:"nvmConfigAddress",id:"nvmconfigaddress",level:3},{value:"ConditionCreated",id:"conditioncreated",level:3},{value:"ConditionUpdated",id:"conditionupdated",level:3},{value:"onlyCreateRole",id:"onlycreaterole",level:3},{value:"onlyUpdateRole",id:"onlyupdaterole",level:3},{value:"onlyValidType",id:"onlyvalidtype",level:3},{value:"initialize",id:"initialize-7",level:3},{value:"getCreateRole",id:"getcreaterole",level:3},{value:"getNvmConfigAddress",id:"getnvmconfigaddress",level:3},{value:"setNvmConfigAddress",id:"setnvmconfigaddress",level:3},{value:"delegateCreateRole",id:"delegatecreaterole",level:3},{value:"delegateUpdateRole",id:"delegateupdaterole",level:3},{value:"grantProxyRole",id:"grantproxyrole-1",level:3},{value:"revokeProxyRole",id:"revokeproxyrole-1",level:3},{value:"createCondition",id:"createcondition",level:3},{value:"createCondition2",id:"createcondition2",level:3},{value:"createCondition",id:"createcondition-1",level:3},{value:"updateConditionState",id:"updateconditionstate",level:3},{value:"updateConditionMapping",id:"updateconditionmapping",level:3},{value:"updateConditionMappingProxy",id:"updateconditionmappingproxy",level:3},{value:"getCondition",id:"getcondition",level:3},{value:"getConditionState",id:"getconditionstate",level:3},{value:"getConditionTypeRef",id:"getconditiontyperef",level:3},{value:"getMappingValue",id:"getmappingvalue",level:3},{value:"isConditionTimeLocked",id:"isconditiontimelocked",level:3},{value:"isConditionTimedOut",id:"isconditiontimedout",level:3},{value:"HashLockCondition",id:"hashlockcondition",level:2},{value:"CONDITION_TYPE",id:"condition_type-3",level:3},{value:"initialize",id:"initialize-8",level:3},{value:"hashValues",id:"hashvalues-3",level:3},{value:"hashValues",id:"hashvalues-4",level:3},{value:"hashValues",id:"hashvalues-5",level:3},{value:"fulfill",id:"fulfill-4",level:3},{value:"fulfill",id:"fulfill-5",level:3},{value:"fulfill",id:"fulfill-6",level:3},{value:"_fulfill",id:"_fulfill",level:3},{value:"ICondition",id:"icondition",level:2},{value:"fulfillProxy",id:"fulfillproxy",level:3},{value:"ILockPayment",id:"ilockpayment",level:2},{value:"Fulfilled",id:"fulfilled-3",level:3},{value:"hashValues",id:"hashvalues-6",level:3},{value:"fulfill",id:"fulfill-7",level:3},{value:"LockPaymentCondition",id:"lockpaymentcondition",level:2},{value:"didRegistry",id:"didregistry-2",level:3},{value:"nvmConfig",id:"nvmconfig",level:3},{value:"CONDITION_TYPE",id:"condition_type-4",level:3},{value:"KEY_ASSET_RECEIVER",id:"key_asset_receiver",level:3},{value:"PROXY_ROLE",id:"proxy_role-2",level:3},{value:"ALLOWED_EXTERNAL_CONTRACT_ROLE",id:"allowed_external_contract_role",level:3},{value:"grantProxyRole",id:"grantproxyrole-2",level:3},{value:"revokeProxyRole",id:"revokeproxyrole-2",level:3},{value:"grantExternalContractRole",id:"grantexternalcontractrole",level:3},{value:"revokeExternalContractRole",id:"revokeexternalcontractrole",level:3},{value:"initialize",id:"initialize-9",level:3},{value:"reinitialize",id:"reinitialize-1",level:3},{value:"hashValues",id:"hashvalues-7",level:3},{value:"fulfill",id:"fulfill-8",level:3},{value:"fulfillExternal",id:"fulfillexternal",level:3},{value:"encodeParams",id:"encodeparams",level:3},{value:"fulfillInternal",id:"fulfillinternal",level:3},{value:"fulfillProxy",id:"fulfillproxy-1",level:3},{value:"_transferERC20Proxy",id:"_transfererc20proxy",level:3},{value:"_transferETH",id:"_transfereth",level:3},{value:"allowedExternalContract",id:"allowedexternalcontract",level:3},{value:"areMarketplaceFeesIncluded",id:"aremarketplacefeesincluded",level:3},{value:"DistributeNFTCollateralCondition",id:"distributenftcollateralcondition",level:2},{value:"CONDITION_TYPE",id:"condition_type-5",level:3},{value:"aaveCreditVault",id:"aavecreditvault",level:3},{value:"_lockConditionAddress",id:"_lockconditionaddress",level:3},{value:"Fulfilled",id:"fulfilled-4",level:3},{value:"initialize",id:"initialize-10",level:3},{value:"hashValues",id:"hashvalues-8",level:3},{value:"fulfill",id:"fulfill-9",level:3},{value:"INFTAccess",id:"inftaccess",level:2},{value:"Fulfilled",id:"fulfilled-5",level:3},{value:"hashValues",id:"hashvalues-9",level:3},{value:"fulfill",id:"fulfill-10",level:3},{value:"INFTHolder",id:"inftholder",level:2},{value:"Fulfilled",id:"fulfilled-6",level:3},{value:"hashValues",id:"hashvalues-10",level:3},{value:"fulfill",id:"fulfill-11",level:3},{value:"INFTLock",id:"inftlock",level:2},{value:"Fulfilled",id:"fulfilled-7",level:3},{value:"hashValues",id:"hashvalues-11",level:3},{value:"hashValuesMarked",id:"hashvaluesmarked",level:3},{value:"fulfill",id:"fulfill-12",level:3},{value:"fulfillMarked",id:"fulfillmarked",level:3},{value:"ITransferNFT",id:"itransfernft",level:2},{value:"Fulfilled",id:"fulfilled-8",level:3},{value:"hashValues",id:"hashvalues-12",level:3},{value:"fulfill",id:"fulfill-13",level:3},{value:"getNFTDefaultAddress",id:"getnftdefaultaddress",level:3},{value:"NFT721HolderCondition",id:"nft721holdercondition",level:2},{value:"CONDITION_TYPE",id:"condition_type-6",level:3},{value:"initialize",id:"initialize-11",level:3},{value:"hashValues",id:"hashvalues-13",level:3},{value:"fulfill",id:"fulfill-14",level:3},{value:"NFT721LockCondition",id:"nft721lockcondition",level:2},{value:"CONDITION_TYPE",id:"condition_type-7",level:3},{value:"initialize",id:"initialize-12",level:3},{value:"hashValues",id:"hashvalues-14",level:3},{value:"hashValuesMarked",id:"hashvaluesmarked-1",level:3},{value:"fulfillMarked",id:"fulfillmarked-1",level:3},{value:"fulfill",id:"fulfill-15",level:3},{value:"onERC721Received",id:"onerc721received",level:3},{value:"NFTAccessCondition",id:"nftaccesscondition",level:2},{value:"CONDITION_TYPE",id:"condition_type-8",level:3},{value:"DocumentPermission",id:"documentpermission-1",level:3},{value:"nftPermissions",id:"nftpermissions",level:3},{value:"didRegistry",id:"didregistry-3",level:3},{value:"onlyDIDOwnerOrProvider",id:"onlydidownerorprovider-2",level:3},{value:"initialize",id:"initialize-13",level:3},{value:"hashValues",id:"hashvalues-15",level:3},{value:"hashValues",id:"hashvalues-16",level:3},{value:"fulfill",id:"fulfill-16",level:3},{value:"fulfill",id:"fulfill-17",level:3},{value:"grantPermission",id:"grantpermission-1",level:3},{value:"checkPermissions",id:"checkpermissions-1",level:3},{value:"NFTHolderCondition",id:"nftholdercondition",level:2},{value:"erc1155",id:"erc1155",level:3},{value:"CONDITION_TYPE",id:"condition_type-9",level:3},{value:"initialize",id:"initialize-14",level:3},{value:"hashValues",id:"hashvalues-17",level:3},{value:"hashValues",id:"hashvalues-18",level:3},{value:"fulfill",id:"fulfill-18",level:3},{value:"fulfill",id:"fulfill-19",level:3},{value:"NFTLockCondition",id:"nftlockcondition",level:2},{value:"erc1155",id:"erc1155-1",level:3},{value:"CONDITION_TYPE",id:"condition_type-10",level:3},{value:"ERC1155_ACCEPTED",id:"erc1155_accepted",level:3},{value:"ERC1155_BATCH_ACCEPTED",id:"erc1155_batch_accepted",level:3},{value:"initialize",id:"initialize-15",level:3},{value:"hashValues",id:"hashvalues-19",level:3},{value:"hashValues",id:"hashvalues-20",level:3},{value:"hashValuesMarked",id:"hashvaluesmarked-2",level:3},{value:"fulfill",id:"fulfill-20",level:3},{value:"fulfill",id:"fulfill-21",level:3},{value:"fulfillMarked",id:"fulfillmarked-2",level:3},{value:"onERC1155Received",id:"onerc1155received",level:3},{value:"onERC1155BatchReceived",id:"onerc1155batchreceived",level:3},{value:"supportsInterface",id:"supportsinterface",level:3},{value:"TransferNFT721Condition",id:"transfernft721condition",level:2},{value:"CONDITION_TYPE",id:"condition_type-11",level:3},{value:"MARKET_ROLE",id:"market_role",level:3},{value:"erc721",id:"erc721",level:3},{value:"_lockConditionAddress",id:"_lockconditionaddress-1",level:3},{value:"PROXY_ROLE",id:"proxy_role-3",level:3},{value:"didRegistry",id:"didregistry-4",level:3},{value:"grantProxyRole",id:"grantproxyrole-3",level:3},{value:"revokeProxyRole",id:"revokeproxyrole-3",level:3},{value:"initialize",id:"initialize-16",level:3},{value:"getNFTDefaultAddress",id:"getnftdefaultaddress-1",level:3},{value:"hashValues",id:"hashvalues-21",level:3},{value:"encodeParams",id:"encodeparams-1",level:3},{value:"fulfill",id:"fulfill-22",level:3},{value:"fulfillProxy",id:"fulfillproxy-2",level:3},{value:"fulfillInternal",id:"fulfillinternal-1",level:3},{value:"fulfillForDelegate",id:"fulfillfordelegate",level:3},{value:"fulfillForDelegate",id:"fulfillfordelegate-1",level:3},{value:"TransferNFTCondition",id:"transfernftcondition",level:2},{value:"CONDITION_TYPE",id:"condition_type-12",level:3},{value:"MARKET_ROLE",id:"market_role-1",level:3},{value:"erc1155",id:"erc1155-2",level:3},{value:"didRegistry",id:"didregistry-5",level:3},{value:"PROXY_ROLE",id:"proxy_role-4",level:3},{value:"grantProxyRole",id:"grantproxyrole-4",level:3},{value:"revokeProxyRole",id:"revokeproxyrole-4",level:3},{value:"initialize",id:"initialize-17",level:3},{value:"grantMarketRole",id:"grantmarketrole",level:3},{value:"revokeMarketRole",id:"revokemarketrole",level:3},{value:"getNFTDefaultAddress",id:"getnftdefaultaddress-2",level:3},{value:"hashValues",id:"hashvalues-22",level:3},{value:"hashValues",id:"hashvalues-23",level:3},{value:"fulfill",id:"fulfill-23",level:3},{value:"encodeParams",id:"encodeparams-2",level:3},{value:"fulfillProxy",id:"fulfillproxy-3",level:3},{value:"fulfill",id:"fulfill-24",level:3},{value:"fulfillInternal",id:"fulfillinternal-2",level:3},{value:"fulfillForDelegate",id:"fulfillfordelegate-2",level:3},{value:"fulfillForDelegate",id:"fulfillfordelegate-3",level:3},{value:"SignCondition",id:"signcondition",level:2},{value:"CONDITION_TYPE",id:"condition_type-13",level:3},{value:"initialize",id:"initialize-18",level:3},{value:"hashValues",id:"hashvalues-24",level:3},{value:"fulfill",id:"fulfill-25",level:3},{value:"ThresholdCondition",id:"thresholdcondition",level:2},{value:"CONDITION_TYPE",id:"condition_type-14",level:3},{value:"initialize",id:"initialize-19",level:3},{value:"hashValues",id:"hashvalues-25",level:3},{value:"fulfill",id:"fulfill-26",level:3},{value:"canFulfill",id:"canfulfill",level:3},{value:"TransferDIDOwnershipCondition",id:"transferdidownershipcondition",level:2},{value:"CONDITION_TYPE",id:"condition_type-15",level:3},{value:"didRegistry",id:"didregistry-6",level:3},{value:"Fulfilled",id:"fulfilled-9",level:3},{value:"initialize",id:"initialize-20",level:3},{value:"hashValues",id:"hashvalues-26",level:3},{value:"fulfill",id:"fulfill-27",level:3},{value:"WhitelistingCondition",id:"whitelistingcondition",level:2},{value:"CONDITION_TYPE",id:"condition_type-16",level:3},{value:"initialize",id:"initialize-21",level:3},{value:"hashValues",id:"hashvalues-27",level:3},{value:"fulfill",id:"fulfill-28",level:3},{value:"AaveBorrowCondition",id:"aaveborrowcondition",level:2},{value:"aaveCreditVault",id:"aavecreditvault-1",level:3},{value:"CONDITION_TYPE",id:"condition_type-17",level:3},{value:"Fulfilled",id:"fulfilled-10",level:3},{value:"initialize",id:"initialize-22",level:3},{value:"hashValues",id:"hashvalues-28",level:3},{value:"fulfill",id:"fulfill-29",level:3},{value:"AaveCollateralDepositCondition",id:"aavecollateraldepositcondition",level:2},{value:"aaveCreditVault",id:"aavecreditvault-2",level:3},{value:"CONDITION_TYPE",id:"condition_type-18",level:3},{value:"Fulfilled",id:"fulfilled-11",level:3},{value:"initialize",id:"initialize-23",level:3},{value:"hashValues",id:"hashvalues-29",level:3},{value:"fulfill",id:"fulfill-30",level:3},{value:"AaveCollateralWithdrawCondition",id:"aavecollateralwithdrawcondition",level:2},{value:"aaveCreditVault",id:"aavecreditvault-3",level:3},{value:"CONDITION_TYPE",id:"condition_type-19",level:3},{value:"Fulfilled",id:"fulfilled-12",level:3},{value:"initialize",id:"initialize-24",level:3},{value:"hashValues",id:"hashvalues-30",level:3},{value:"fulfill",id:"fulfill-31",level:3},{value:"AaveCreditVault",id:"aavecreditvault-4",level:2},{value:"lendingPool",id:"lendingpool",level:3},{value:"dataProvider",id:"dataprovider",level:3},{value:"weth",id:"weth",level:3},{value:"addressProvider",id:"addressprovider",level:3},{value:"priceOracle",id:"priceoracle",level:3},{value:"borrowedAsset",id:"borrowedasset",level:3},{value:"borrowedAmount",id:"borrowedamount",level:3},{value:"nvmFee",id:"nvmfee",level:3},{value:"agreementFee",id:"agreementfee",level:3},{value:"FEE_BASE",id:"fee_base",level:3},{value:"treasuryAddress",id:"treasuryaddress",level:3},{value:"borrower",id:"borrower",level:3},{value:"lender",id:"lender",level:3},{value:"repayConditionId",id:"repayconditionid",level:3},{value:"nftId",id:"nftid",level:3},{value:"nftAddress",id:"nftaddress",level:3},{value:"BORROWER_ROLE",id:"borrower_role",level:3},{value:"LENDER_ROLE",id:"lender_role",level:3},{value:"CONDITION_ROLE",id:"condition_role",level:3},{value:"initialize",id:"initialize-25",level:3},{value:"isLender",id:"islender",level:3},{value:"isBorrower",id:"isborrower",level:3},{value:"deposit",id:"deposit",level:3},{value:"approveBorrower",id:"approveborrower",level:3},{value:"delegatedAmount",id:"delegatedamount",level:3},{value:"borrow",id:"borrow",level:3},{value:"repay",id:"repay",level:3},{value:"setRepayConditionId",id:"setrepayconditionid",level:3},{value:"getBorrowedAmount",id:"getborrowedamount",level:3},{value:"getAssetPrice",id:"getassetprice",level:3},{value:"getCreditAssetDebt",id:"getcreditassetdebt",level:3},{value:"getActualCreditDebt",id:"getactualcreditdebt",level:3},{value:"getTotalActualDebt",id:"gettotalactualdebt",level:3},{value:"withdrawCollateral",id:"withdrawcollateral",level:3},{value:"transferNFT",id:"transfernft",level:3},{value:"_transferERC20",id:"_transfererc20",level:3},{value:"onERC721Received",id:"onerc721received-1",level:3},{value:"AaveRepayCondition",id:"aaverepaycondition",level:2},{value:"aaveCreditVault",id:"aavecreditvault-5",level:3},{value:"CONDITION_TYPE",id:"condition_type-20",level:3},{value:"Fulfilled",id:"fulfilled-13",level:3},{value:"initialize",id:"initialize-26",level:3},{value:"hashValues",id:"hashvalues-31",level:3},{value:"fulfill",id:"fulfill-32",level:3},{value:"EscrowPaymentCondition",id:"escrowpaymentcondition",level:2},{value:"CONDITION_TYPE",id:"condition_type-21",level:3},{value:"USED_PAYMENT_ID",id:"used_payment_id",level:3},{value:"Fulfilled",id:"fulfilled-14",level:3},{value:"Received",id:"received",level:3},{value:"receive",id:"receive",level:3},{value:"initialize",id:"initialize-27",level:3},{value:"hashValuesMulti",id:"hashvaluesmulti",level:3},{value:"encodeParams",id:"encodeparams-3",level:3},{value:"hashValues",id:"hashvalues-32",level:3},{value:"hashValuesLockPayment",id:"hashvalueslockpayment",level:3},{value:"fulfillMulti",id:"fulfillmulti",level:3},{value:"Args",id:"args",level:3},{value:"fulfillKludge",id:"fulfillkludge",level:3},{value:"fulfill",id:"fulfill-33",level:3},{value:"_transferAndFulfillERC20",id:"_transferandfulfillerc20",level:3},{value:"_transferAndFulfillETH",id:"_transferandfulfilleth",level:3},{value:"INFTEscrow",id:"inftescrow",level:2},{value:"Fulfilled",id:"fulfilled-15",level:3},{value:"NFT721EscrowPaymentCondition",id:"nft721escrowpaymentcondition",level:2},{value:"CONDITION_TYPE",id:"condition_type-22",level:3},{value:"Received",id:"received-1",level:3},{value:"receive",id:"receive-1",level:3},{value:"initialize",id:"initialize-28",level:3},{value:"hashValues",id:"hashvalues-33",level:3},{value:"hashValuesLockPayment",id:"hashvalueslockpayment-1",level:3},{value:"fulfill",id:"fulfill-34",level:3},{value:"Args",id:"args-1",level:3},{value:"fulfillKludge",id:"fulfillkludge-1",level:3},{value:"_transferAndFulfillNFT",id:"_transferandfulfillnft",level:3},{value:"onERC721Received",id:"onerc721received-2",level:3},{value:"NFTEscrowPaymentCondition",id:"nftescrowpaymentcondition",level:2},{value:"CONDITION_TYPE",id:"condition_type-23",level:3},{value:"LOCK_CONDITION_TYPE",id:"lock_condition_type",level:3},{value:"Received",id:"received-2",level:3},{value:"receive",id:"receive-2",level:3},{value:"initialize",id:"initialize-29",level:3},{value:"hashValues",id:"hashvalues-34",level:3},{value:"hashValuesLockPayment",id:"hashvalueslockpayment-2",level:3},{value:"fulfill",id:"fulfill-35",level:3},{value:"Args",id:"args-2",level:3},{value:"fulfillKludge",id:"fulfillkludge-2",level:3},{value:"_transferAndFulfillNFT",id:"_transferandfulfillnft-1",level:3},{value:"ERC1155_ACCEPTED",id:"erc1155_accepted-1",level:3},{value:"ERC1155_BATCH_ACCEPTED",id:"erc1155_batch_accepted-1",level:3},{value:"onERC1155Received",id:"onerc1155received-1",level:3},{value:"onERC1155BatchReceived",id:"onerc1155batchreceived-1",level:3},{value:"supportsInterface",id:"supportsinterface-1",level:3},{value:"Reward",id:"reward",level:2},{value:"INVMConfig",id:"invmconfig",level:2},{value:"GOVERNOR_ROLE",id:"governor_role",level:3},{value:"NeverminedConfigChange",id:"neverminedconfigchange",level:3},{value:"initialize",id:"initialize-30",level:3},{value:"setMarketplaceFees",id:"setmarketplacefees",level:3},{value:"isGovernor",id:"isgovernor",level:3},{value:"getMarketplaceFee",id:"getmarketplacefee",level:3},{value:"getFeeReceiver",id:"getfeereceiver",level:3},{value:"NeverminedConfig",id:"neverminedconfig",level:2},{value:"marketplaceFee",id:"marketplacefee",level:3},{value:"feeReceiver",id:"feereceiver",level:3},{value:"initialize",id:"initialize-31",level:3},{value:"setMarketplaceFees",id:"setmarketplacefees-1",level:3},{value:"setGovernor",id:"setgovernor",level:3},{value:"isGovernor",id:"isgovernor-1",level:3},{value:"getMarketplaceFee",id:"getmarketplacefee-1",level:3},{value:"getFeeReceiver",id:"getfeereceiver-1",level:3},{value:"onlyGovernor",id:"onlygovernor",level:3},{value:"IERC20",id:"ierc20",level:2},{value:"totalSupply",id:"totalsupply",level:3},{value:"balanceOf",id:"balanceof",level:3},{value:"transfer",id:"transfer",level:3},{value:"allowance",id:"allowance",level:3},{value:"approve",id:"approve",level:3},{value:"transferFrom",id:"transferfrom",level:3},{value:"Transfer",id:"transfer-1",level:3},{value:"Approval",id:"approval",level:3},{value:"IPriceOracleGetter",id:"ipriceoraclegetter",level:2},{value:"getAssetPrice",id:"getassetprice-1",level:3},{value:"IProtocolDataProvider",id:"iprotocoldataprovider",level:2},{value:"TokenData",id:"tokendata",level:3},{value:"ADDRESSES_PROVIDER",id:"addresses_provider",level:3},{value:"getAllReservesTokens",id:"getallreservestokens",level:3},{value:"getAllATokens",id:"getallatokens",level:3},{value:"getReserveConfigurationData",id:"getreserveconfigurationdata",level:3},{value:"getReserveData",id:"getreservedata",level:3},{value:"getUserReserveData",id:"getuserreservedata",level:3},{value:"getReserveTokensAddresses",id:"getreservetokensaddresses",level:3},{value:"ILendingPoolAddressesProvider",id:"ilendingpooladdressesprovider",level:2},{value:"MarketIdSet",id:"marketidset",level:3},{value:"LendingPoolUpdated",id:"lendingpoolupdated",level:3},{value:"ConfigurationAdminUpdated",id:"configurationadminupdated",level:3},{value:"EmergencyAdminUpdated",id:"emergencyadminupdated",level:3},{value:"LendingPoolConfiguratorUpdated",id:"lendingpoolconfiguratorupdated",level:3},{value:"LendingPoolCollateralManagerUpdated",id:"lendingpoolcollateralmanagerupdated",level:3},{value:"PriceOracleUpdated",id:"priceoracleupdated",level:3},{value:"LendingRateOracleUpdated",id:"lendingrateoracleupdated",level:3},{value:"ProxyCreated",id:"proxycreated",level:3},{value:"AddressSet",id:"addressset",level:3},{value:"getMarketId",id:"getmarketid",level:3},{value:"setMarketId",id:"setmarketid",level:3},{value:"setAddress",id:"setaddress",level:3},{value:"setAddressAsProxy",id:"setaddressasproxy",level:3},{value:"getAddress",id:"getaddress",level:3},{value:"getLendingPool",id:"getlendingpool",level:3},{value:"setLendingPoolImpl",id:"setlendingpoolimpl",level:3},{value:"getLendingPoolConfigurator",id:"getlendingpoolconfigurator",level:3},{value:"setLendingPoolConfiguratorImpl",id:"setlendingpoolconfiguratorimpl",level:3},{value:"getLendingPoolCollateralManager",id:"getlendingpoolcollateralmanager",level:3},{value:"setLendingPoolCollateralManager",id:"setlendingpoolcollateralmanager",level:3},{value:"getPoolAdmin",id:"getpooladmin",level:3},{value:"setPoolAdmin",id:"setpooladmin",level:3},{value:"getEmergencyAdmin",id:"getemergencyadmin",level:3},{value:"setEmergencyAdmin",id:"setemergencyadmin",level:3},{value:"getPriceOracle",id:"getpriceoracle",level:3},{value:"setPriceOracle",id:"setpriceoracle",level:3},{value:"getLendingRateOracle",id:"getlendingrateoracle",level:3},{value:"setLendingRateOracle",id:"setlendingrateoracle",level:3},{value:"ILendingPool",id:"ilendingpool",level:2},{value:"Deposit",id:"deposit-1",level:3},{value:"Withdraw",id:"withdraw",level:3},{value:"Borrow",id:"borrow-1",level:3},{value:"Repay",id:"repay-1",level:3},{value:"Swap",id:"swap",level:3},{value:"ReserveUsedAsCollateralEnabled",id:"reserveusedascollateralenabled",level:3},{value:"ReserveUsedAsCollateralDisabled",id:"reserveusedascollateraldisabled",level:3},{value:"RebalanceStableBorrowRate",id:"rebalancestableborrowrate",level:3},{value:"FlashLoan",id:"flashloan",level:3},{value:"Paused",id:"paused",level:3},{value:"Unpaused",id:"unpaused",level:3},{value:"LiquidationCall",id:"liquidationcall",level:3},{value:"ReserveDataUpdated",id:"reservedataupdated",level:3},{value:"deposit",id:"deposit-2",level:3},{value:"withdraw",id:"withdraw-1",level:3},{value:"borrow",id:"borrow-2",level:3},{value:"repay",id:"repay-2",level:3},{value:"swapBorrowRateMode",id:"swapborrowratemode",level:3},{value:"rebalanceStableBorrowRate",id:"rebalancestableborrowrate-1",level:3},{value:"setUserUseReserveAsCollateral",id:"setuserusereserveascollateral",level:3},{value:"liquidationCall",id:"liquidationcall-1",level:3},{value:"flashLoan",id:"flashloan-1",level:3},{value:"getUserAccountData",id:"getuseraccountdata",level:3},{value:"initReserve",id:"initreserve",level:3},{value:"setReserveInterestRateStrategyAddress",id:"setreserveinterestratestrategyaddress",level:3},{value:"setConfiguration",id:"setconfiguration",level:3},{value:"getConfiguration",id:"getconfiguration",level:3},{value:"getUserConfiguration",id:"getuserconfiguration",level:3},{value:"getReserveNormalizedIncome",id:"getreservenormalizedincome",level:3},{value:"getReserveNormalizedVariableDebt",id:"getreservenormalizedvariabledebt",level:3},{value:"getReserveData",id:"getreservedata-1",level:3},{value:"finalizeTransfer",id:"finalizetransfer",level:3},{value:"getReservesList",id:"getreserveslist",level:3},{value:"getAddressesProvider",id:"getaddressesprovider",level:3},{value:"setPause",id:"setpause",level:3},{value:"paused",id:"paused-1",level:3},{value:"IStableDebtToken",id:"istabledebttoken",level:2},{value:"Mint",id:"mint-1",level:3},{value:"Burn",id:"burn",level:3},{value:"approveDelegation",id:"approvedelegation",level:3},{value:"borrowAllowance",id:"borrowallowance",level:3},{value:"mint",id:"mint-2",level:3},{value:"burn",id:"burn-1",level:3},{value:"getAverageStableRate",id:"getaveragestablerate",level:3},{value:"getUserStableRate",id:"getuserstablerate",level:3},{value:"getUserLastUpdated",id:"getuserlastupdated",level:3},{value:"getSupplyData",id:"getsupplydata",level:3},{value:"getTotalSupplyLastUpdated",id:"gettotalsupplylastupdated",level:3},{value:"getTotalSupplyAndAvgRate",id:"gettotalsupplyandavgrate",level:3},{value:"principalBalanceOf",id:"principalbalanceof",level:3},{value:"IDynamicPricing",id:"idynamicpricing",level:2},{value:"DynamicPricingState",id:"dynamicpricingstate",level:3},{value:"getPricingType",id:"getpricingtype",level:3},{value:"getPrice",id:"getprice",level:3},{value:"getTokenAddress",id:"gettokenaddress",level:3},{value:"getStatus",id:"getstatus",level:3},{value:"canBePurchased",id:"canbepurchased",level:3},{value:"withdraw",id:"withdraw-2",level:3},{value:"IList",id:"ilist",level:2},{value:"has",id:"has-2",level:3},{value:"has",id:"has-3",level:3},{value:"IRoyaltyScheme",id:"iroyaltyscheme",level:2},{value:"check",id:"check",level:3},{value:"ISecretStore",id:"isecretstore",level:2},{value:"checkPermissions",id:"checkpermissions-2",level:3},{value:"ISecretStorePermission",id:"isecretstorepermission",level:2},{value:"grantPermission",id:"grantpermission-2",level:3},{value:"renouncePermission",id:"renouncepermission-1",level:3},{value:"IWETHGateway",id:"iwethgateway",level:2},{value:"depositETH",id:"depositeth",level:3},{value:"withdrawETH",id:"withdraweth",level:3},{value:"repayETH",id:"repayeth",level:3},{value:"borrowETH",id:"borroweth",level:3},{value:"DataTypes",id:"datatypes",level:2},{value:"ReserveData",id:"reservedata",level:3},{value:"ReserveConfigurationMap",id:"reserveconfigurationmap",level:3},{value:"UserConfigurationMap",id:"userconfigurationmap",level:3},{value:"InterestRateMode",id:"interestratemode",level:3},{value:"SafeMath",id:"safemath",level:2},{value:"add",id:"add-2",level:3},{value:"sub",id:"sub",level:3},{value:"sub",id:"sub-1",level:3},{value:"mul",id:"mul",level:3},{value:"div",id:"div",level:3},{value:"div",id:"div-1",level:3},{value:"mod",id:"mod",level:3},{value:"mod",id:"mod-1",level:3},{value:"Address",id:"address",level:2},{value:"isContract",id:"iscontract-1",level:3},{value:"sendValue",id:"sendvalue",level:3},{value:"SafeERC20",id:"safeerc20",level:2},{value:"safeTransfer",id:"safetransfer",level:3},{value:"safeTransferFrom",id:"safetransferfrom",level:3},{value:"safeApprove",id:"safeapprove",level:3},{value:"callOptionalReturn",id:"calloptionalreturn",level:3},{value:"CloneFactory",id:"clonefactory",level:2},{value:"createClone",id:"createclone",level:3},{value:"isClone",id:"isclone",level:3},{value:"EpochLibrary",id:"epochlibrary",level:2},{value:"Epoch",id:"epoch",level:3},{value:"EpochList",id:"epochlist-1",level:3},{value:"create",id:"create-2",level:3},{value:"isTimedOut",id:"istimedout",level:3},{value:"isTimeLocked",id:"istimelocked",level:3},{value:"getEpochTimeOut",id:"getepochtimeout",level:3},{value:"getEpochTimeLock",id:"getepochtimelock",level:3},{value:"HashListLibrary",id:"hashlistlibrary",level:2},{value:"List",id:"list",level:3},{value:"onlyListOwner",id:"onlylistowner",level:3},{value:"add",id:"add-3",level:3},{value:"add",id:"add-4",level:3},{value:"update",id:"update-1",level:3},{value:"remove",id:"remove-1",level:3},{value:"get",id:"get-1",level:3},{value:"index",id:"index-1",level:3},{value:"setOwner",id:"setowner",level:3},{value:"indexOf",id:"indexof-1",level:3},{value:"isIndexed",id:"isindexed-1",level:3},{value:"all",id:"all-1",level:3},{value:"has",id:"has-4",level:3},{value:"size",id:"size-1",level:3},{value:"ownedBy",id:"ownedby-1",level:3},{value:"_index",id:"_index",level:3},{value:"AbstractAuction",id:"abstractauction",level:2},{value:"AUCTION_MANAGER_ROLE",id:"auction_manager_role",level:3},{value:"NVM_AGREEMENT_ROLE",id:"nvm_agreement_role",level:3},{value:"Auction",id:"auction",level:3},{value:"auctions",id:"auctions",level:3},{value:"auctionBids",id:"auctionbids",level:3},{value:"AuctionCreated",id:"auctioncreated",level:3},{value:"AuctionChangedState",id:"auctionchangedstate",level:3},{value:"AuctionBidReceived",id:"auctionbidreceived",level:3},{value:"AuctionWithdrawal",id:"auctionwithdrawal",level:3},{value:"receive",id:"receive-3",level:3},{value:"abortAuction",id:"abortauction",level:3},{value:"withdraw",id:"withdraw-3",level:3},{value:"getPricingType",id:"getpricingtype-1",level:3},{value:"getPrice",id:"getprice-1",level:3},{value:"getTokenAddress",id:"gettokenaddress-1",level:3},{value:"getStatus",id:"getstatus-1",level:3},{value:"canBePurchased",id:"canbepurchased-1",level:3},{value:"addNVMAgreementRole",id:"addnvmagreementrole",level:3},{value:"onlyCreator",id:"onlycreator",level:3},{value:"onlyCreatorOrAdmin",id:"onlycreatororadmin",level:3},{value:"onlyNotCreator",id:"onlynotcreator",level:3},{value:"onlyAfterStart",id:"onlyafterstart",level:3},{value:"onlyBeforeStarts",id:"onlybeforestarts",level:3},{value:"onlyBeforeEnd",id:"onlybeforeend",level:3},{value:"onlyNotAbortedOrFinished",id:"onlynotabortedorfinished",level:3},{value:"onlyAbortedOrFinished",id:"onlyabortedorfinished",level:3},{value:"onlyNotAborted",id:"onlynotaborted",level:3},{value:"onlyFinishedOrAborted",id:"onlyfinishedoraborted",level:3},{value:"DutchAuction",id:"dutchauction",level:2},{value:"initialize",id:"initialize-32",level:3},{value:"create",id:"create-3",level:3},{value:"placeNativeTokenBid",id:"placenativetokenbid",level:3},{value:"placeERC20Bid",id:"placeerc20bid",level:3},{value:"withdraw",id:"withdraw-4",level:3},{value:"getPricingType",id:"getpricingtype-2",level:3},{value:"EnglishAuction",id:"englishauction",level:2},{value:"initialize",id:"initialize-33",level:3},{value:"create",id:"create-4",level:3},{value:"placeNativeTokenBid",id:"placenativetokenbid-1",level:3},{value:"placeERC20Bid",id:"placeerc20bid-1",level:3},{value:"getPricingType",id:"getpricingtype-3",level:3},{value:"DIDFactory",id:"didfactory",level:2},{value:"didRegisterList",id:"didregisterlist",level:3},{value:"didPermissions",id:"didpermissions",level:3},{value:"manager",id:"manager",level:3},{value:"onlyDIDOwner",id:"onlydidowner",level:3},{value:"onlyManager",id:"onlymanager",level:3},{value:"onlyOwnerProviderOrDelegated",id:"onlyownerproviderordelegated",level:3},{value:"onlyValidAttributes",id:"onlyvalidattributes",level:3},{value:"nftIsInitialized",id:"nftisinitialized",level:3},{value:"nft721IsInitialized",id:"nft721isinitialized",level:3},{value:"DIDAttributeRegistered",id:"didattributeregistered",level:3},{value:"DIDProviderRemoved",id:"didproviderremoved",level:3},{value:"DIDProviderAdded",id:"didprovideradded",level:3},{value:"DIDOwnershipTransferred",id:"didownershiptransferred",level:3},{value:"DIDPermissionGranted",id:"didpermissiongranted",level:3},{value:"DIDPermissionRevoked",id:"didpermissionrevoked",level:3},{value:"DIDProvenanceDelegateRemoved",id:"didprovenancedelegateremoved",level:3},{value:"DIDProvenanceDelegateAdded",id:"didprovenancedelegateadded",level:3},{value:"setManager",id:"setmanager",level:3},{value:"registerAttribute",id:"registerattribute",level:3},{value:"registerDID",id:"registerdid",level:3},{value:"hashDID",id:"hashdid",level:3},{value:"areRoyaltiesValid",id:"areroyaltiesvalid",level:3},{value:"wasGeneratedBy",id:"wasgeneratedby",level:3},{value:"used",id:"used",level:3},{value:"wasDerivedFrom",id:"wasderivedfrom",level:3},{value:"wasAssociatedWith",id:"wasassociatedwith",level:3},{value:"actedOnBehalf",id:"actedonbehalf",level:3},{value:"addDIDProvider",id:"adddidprovider",level:3},{value:"removeDIDProvider",id:"removedidprovider",level:3},{value:"addDIDProvenanceDelegate",id:"adddidprovenancedelegate",level:3},{value:"removeDIDProvenanceDelegate",id:"removedidprovenancedelegate",level:3},{value:"transferDIDOwnership",id:"transferdidownership",level:3},{value:"transferDIDOwnershipManaged",id:"transferdidownershipmanaged",level:3},{value:"_transferDIDOwnership",id:"_transferdidownership",level:3},{value:"grantPermission",id:"grantpermission-3",level:3},{value:"revokePermission",id:"revokepermission",level:3},{value:"getPermission",id:"getpermission",level:3},{value:"isDIDProvider",id:"isdidprovider",level:3},{value:"isDIDProviderOrOwner",id:"isdidproviderorowner",level:3},{value:"getDIDRegister",id:"getdidregister",level:3},{value:"getDIDSupply",id:"getdidsupply",level:3},{value:"getBlockNumberUpdated",id:"getblocknumberupdated",level:3},{value:"getDIDOwner",id:"getdidowner",level:3},{value:"getDIDRoyaltyRecipient",id:"getdidroyaltyrecipient",level:3},{value:"getDIDRoyaltyScheme",id:"getdidroyaltyscheme",level:3},{value:"getDIDCreator",id:"getdidcreator",level:3},{value:"_grantPermission",id:"_grantpermission",level:3},{value:"_revokePermission",id:"_revokepermission",level:3},{value:"_getPermission",id:"_getpermission",level:3},{value:"getProvenanceEntry",id:"getprovenanceentry",level:3},{value:"isDIDOwner",id:"isdidowner",level:3},{value:"isOwnerProviderOrDelegate",id:"isownerproviderordelegate",level:3},{value:"isProvenanceDelegate",id:"isprovenancedelegate",level:3},{value:"getProvenanceOwner",id:"getprovenanceowner",level:3},{value:"DIDRegistry",id:"didregistry-7",level:2},{value:"erc1155",id:"erc1155-3",level:3},{value:"erc721",id:"erc721-1",level:3},{value:"royaltiesCheckers",id:"royaltiescheckers",level:3},{value:"initialize",id:"initialize-34",level:3},{value:"registerRoyaltiesChecker",id:"registerroyaltieschecker",level:3},{value:"DIDRoyaltiesAdded",id:"didroyaltiesadded",level:3},{value:"DIDRoyaltyRecipientChanged",id:"didroyaltyrecipientchanged",level:3},{value:"setDIDRoyalties",id:"setdidroyalties",level:3},{value:"setDIDRoyaltyRecipient",id:"setdidroyaltyrecipient",level:3},{value:"registerMintableDID",id:"registermintabledid",level:3},{value:"registerMintableDID721",id:"registermintabledid721",level:3},{value:"registerMintableDID",id:"registermintabledid-1",level:3},{value:"enableAndMintDidNft",id:"enableandmintdidnft",level:3},{value:"enableAndMintDidNft721",id:"enableandmintdidnft721",level:3},{value:"mint",id:"mint-3",level:3},{value:"mint",id:"mint-4",level:3},{value:"mint721",id:"mint721",level:3},{value:"mint721",id:"mint721-1",level:3},{value:"burn",id:"burn-2",level:3},{value:"burn721",id:"burn721",level:3},{value:"DIDRegistryLibrary",id:"didregistrylibrary",level:2},{value:"DIDRegister",id:"didregister",level:3},{value:"DIDRegisterList",id:"didregisterlist-1",level:3},{value:"update",id:"update-2",level:3},{value:"initializeNftConfig",id:"initializenftconfig",level:3},{value:"initializeNft721Config",id:"initializenft721config",level:3},{value:"areRoyaltiesValid",id:"areroyaltiesvalid-1",level:3},{value:"addProvider",id:"addprovider",level:3},{value:"removeProvider",id:"removeprovider",level:3},{value:"updateDIDOwner",id:"updatedidowner",level:3},{value:"isProvider",id:"isprovider",level:3},{value:"getProviderIndex",id:"getproviderindex",level:3},{value:"addDelegate",id:"adddelegate",level:3},{value:"removeDelegate",id:"removedelegate",level:3},{value:"isDelegate",id:"isdelegate",level:3},{value:"getDelegateIndex",id:"getdelegateindex",level:3},{value:"ProvenanceRegistry",id:"provenanceregistry",level:2},{value:"__ProvenanceRegistry_init",id:"__provenanceregistry_init",level:3},{value:"__ProvenanceRegistry_init_unchained",id:"__provenanceregistry_init_unchained",level:3},{value:"Provenance",id:"provenance",level:3},{value:"ProvenanceRegistryList",id:"provenanceregistrylist",level:3},{value:"provenanceRegistry",id:"provenanceregistry-1",level:3},{value:"ProvenanceMethod",id:"provenancemethod",level:3},{value:"ProvenanceAttributeRegistered",id:"provenanceattributeregistered",level:3},{value:"WasGeneratedBy",id:"wasgeneratedby-1",level:3},{value:"Used",id:"used-1",level:3},{value:"WasDerivedFrom",id:"wasderivedfrom-1",level:3},{value:"WasAssociatedWith",id:"wasassociatedwith-1",level:3},{value:"ActedOnBehalf",id:"actedonbehalf-1",level:3},{value:"createProvenanceEntry",id:"createprovenanceentry",level:3},{value:"_wasGeneratedBy",id:"_wasgeneratedby",level:3},{value:"_used",id:"_used",level:3},{value:"_wasDerivedFrom",id:"_wasderivedfrom",level:3},{value:"_wasAssociatedWith",id:"_wasassociatedwith",level:3},{value:"_actedOnBehalf",id:"_actedonbehalf",level:3},{value:"CurveRoyalties",id:"curveroyalties",level:2},{value:"registry",id:"registry",level:3},{value:"DENOMINATOR",id:"denominator",level:3},{value:"royalties",id:"royalties",level:3},{value:"initialize",id:"initialize-35",level:3},{value:"royaltyCurve",id:"royaltycurve",level:3},{value:"setRoyalty",id:"setroyalty",level:3},{value:"check",id:"check-1",level:3},{value:"RewardsDistributor",id:"rewardsdistributor",level:2},{value:"used",id:"used-2",level:3},{value:"receivers",id:"receivers",level:3},{value:"registry",id:"registry-1",level:3},{value:"conditionStoreManager",id:"conditionstoremanager-3",level:3},{value:"escrow",id:"escrow",level:3},{value:"initialize",id:"initialize-36",level:3},{value:"setReceivers",id:"setreceivers",level:3},{value:"claimReward",id:"claimreward",level:3},{value:"StandardRoyalties",id:"standardroyalties",level:2},{value:"registry",id:"registry-2",level:3},{value:"DENOMINATOR",id:"denominator-1",level:3},{value:"royalties",id:"royalties-1",level:3},{value:"initialize",id:"initialize-37",level:3},{value:"setRoyalty",id:"setroyalty-1",level:3},{value:"check",id:"check-2",level:3},{value:"AaveCreditTemplate",id:"aavecredittemplate",level:2},{value:"didRegistry",id:"didregistry-8",level:3},{value:"nftLockCondition",id:"nftlockcondition-1",level:3},{value:"depositCondition",id:"depositcondition",level:3},{value:"borrowCondition",id:"borrowcondition",level:3},{value:"repayCondition",id:"repaycondition",level:3},{value:"transferCondition",id:"transfercondition",level:3},{value:"withdrawCondition",id:"withdrawcondition",level:3},{value:"vaultAddress",id:"vaultaddress",level:3},{value:"nvmFee",id:"nvmfee-1",level:3},{value:"vaultLibrary",id:"vaultlibrary",level:3},{value:"VaultCreated",id:"vaultcreated",level:3},{value:"initialize",id:"initialize-38",level:3},{value:"createVaultAgreement",id:"createvaultagreement",level:3},{value:"createAgreement",id:"createagreement-1",level:3},{value:"deployVault",id:"deployvault",level:3},{value:"getVaultForAgreement",id:"getvaultforagreement",level:3},{value:"updateNVMFee",id:"updatenvmfee",level:3},{value:"changeCreditVaultLibrary",id:"changecreditvaultlibrary",level:3},{value:"AccessProofTemplate",id:"accessprooftemplate",level:2},{value:"didRegistry",id:"didregistry-9",level:3},{value:"accessCondition",id:"accesscondition-1",level:3},{value:"lockCondition",id:"lockcondition",level:3},{value:"escrowReward",id:"escrowreward",level:3},{value:"initialize",id:"initialize-39",level:3},{value:"AccessTemplate",id:"accesstemplate",level:2},{value:"didRegistry",id:"didregistry-10",level:3},{value:"accessCondition",id:"accesscondition-2",level:3},{value:"lockCondition",id:"lockcondition-1",level:3},{value:"escrowReward",id:"escrowreward-1",level:3},{value:"initialize",id:"initialize-40",level:3},{value:"AgreementTemplate",id:"agreementtemplate",level:2},{value:"conditionTypes",id:"conditiontypes",level:3},{value:"agreementStoreManager",id:"agreementstoremanager-4",level:3},{value:"createAgreement",id:"createagreement-2",level:3},{value:"createAgreementAndPay",id:"createagreementandpay-1",level:3},{value:"createAgreementAndFulfill",id:"createagreementandfulfill-1",level:3},{value:"getConditionTypes",id:"getconditiontypes-1",level:3},{value:"BaseEscrowTemplate",id:"baseescrowtemplate",level:2},{value:"agreementData",id:"agreementdata",level:3},{value:"AgreementCreated",id:"agreementcreated",level:3},{value:"AgreementDataModel",id:"agreementdatamodel",level:3},{value:"AgreementData",id:"agreementdata-1",level:3},{value:"createAgreement",id:"createagreement-3",level:3},{value:"createAgreementAndPayEscrow",id:"createagreementandpayescrow",level:3},{value:"createAgreementAndFulfill",id:"createagreementandfulfill-2",level:3},{value:"_makeIds",id:"_makeids",level:3},{value:"_initAgreement",id:"_initagreement",level:3},{value:"getAgreementData",id:"getagreementdata",level:3},{value:"DIDSalesTemplate",id:"didsalestemplate",level:2},{value:"didRegistry",id:"didregistry-11",level:3},{value:"lockPaymentCondition",id:"lockpaymentcondition-1",level:3},{value:"transferCondition",id:"transfercondition-1",level:3},{value:"rewardCondition",id:"rewardcondition",level:3},{value:"id",id:"id",level:3},{value:"initialize",id:"initialize-41",level:3},{value:"DynamicAccessTemplate",id:"dynamicaccesstemplate",level:2},{value:"didRegistry",id:"didregistry-12",level:3},{value:"templateConfig",id:"templateconfig",level:3},{value:"TemplateConditions",id:"templateconditions",level:3},{value:"initialize",id:"initialize-42",level:3},{value:"addTemplateCondition",id:"addtemplatecondition",level:3},{value:"removeLastTemplateCondition",id:"removelasttemplatecondition",level:3},{value:"EscrowComputeExecutionTemplate",id:"escrowcomputeexecutiontemplate",level:2},{value:"didRegistry",id:"didregistry-13",level:3},{value:"computeExecutionCondition",id:"computeexecutioncondition-1",level:3},{value:"lockPaymentCondition",id:"lockpaymentcondition-2",level:3},{value:"escrowPayment",id:"escrowpayment",level:3},{value:"initialize",id:"initialize-43",level:3},{value:"name",id:"name",level:3},{value:"NFT721AccessProofTemplate",id:"nft721accessprooftemplate",level:2},{value:"NFT721AccessSwapTemplate",id:"nft721accessswaptemplate",level:2},{value:"NFT721AccessTemplate",id:"nft721accesstemplate",level:2},{value:"NFT721SalesTemplate",id:"nft721salestemplate",level:2},{value:"NFT721SalesWithAccessTemplate",id:"nft721saleswithaccesstemplate",level:2},{value:"NFTAccessProofTemplate",id:"nftaccessprooftemplate",level:2},{value:"didRegistry",id:"didregistry-14",level:3},{value:"nftHolderCondition",id:"nftholdercondition-1",level:3},{value:"accessCondition",id:"accesscondition-3",level:3},{value:"initialize",id:"initialize-44",level:3},{value:"NFTAccessSwapTemplate",id:"nftaccessswaptemplate",level:2},{value:"didRegistry",id:"didregistry-15",level:3},{value:"lockPaymentCondition",id:"lockpaymentcondition-3",level:3},{value:"rewardCondition",id:"rewardcondition-1",level:3},{value:"accessCondition",id:"accesscondition-4",level:3},{value:"id",id:"id-1",level:3},{value:"initialize",id:"initialize-45",level:3},{value:"NFTAccessTemplate",id:"nftaccesstemplate",level:2},{value:"didRegistry",id:"didregistry-16",level:3},{value:"nftHolderCondition",id:"nftholdercondition-2",level:3},{value:"accessCondition",id:"accesscondition-5",level:3},{value:"initialize",id:"initialize-46",level:3},{value:"NFTSalesTemplate",id:"nftsalestemplate",level:2},{value:"didRegistry",id:"didregistry-17",level:3},{value:"lockPaymentCondition",id:"lockpaymentcondition-4",level:3},{value:"transferCondition",id:"transfercondition-2",level:3},{value:"rewardCondition",id:"rewardcondition-2",level:3},{value:"id",id:"id-2",level:3},{value:"initialize",id:"initialize-47",level:3},{value:"nftPrice",id:"nftprice",level:3},{value:"nftSale",id:"nftsale",level:3},{value:"checkParamsTransfer",id:"checkparamstransfer",level:3},{value:"checkParamsEscrow",id:"checkparamsescrow",level:3},{value:"createAgreementFulfill",id:"createagreementfulfill",level:3},{value:"NFTSalesWithAccessTemplate",id:"nftsaleswithaccesstemplate",level:2},{value:"didRegistry",id:"didregistry-18",level:3},{value:"lockPaymentCondition",id:"lockpaymentcondition-5",level:3},{value:"transferCondition",id:"transfercondition-3",level:3},{value:"rewardCondition",id:"rewardcondition-3",level:3},{value:"accessCondition",id:"accesscondition-6",level:3},{value:"initialize",id:"initialize-48",level:3},{value:"TemplateStoreLibrary",id:"templatestorelibrary",level:2},{value:"TemplateState",id:"templatestate",level:3},{value:"Template",id:"template-1",level:3},{value:"TemplateList",id:"templatelist",level:3},{value:"propose",id:"propose",level:3},{value:"approve",id:"approve-1",level:3},{value:"revoke",id:"revoke",level:3},{value:"TemplateStoreManager",id:"templatestoremanager-1",level:2},{value:"templateList",id:"templatelist-1",level:3},{value:"onlyOwnerOrTemplateOwner",id:"onlyownerortemplateowner",level:3},{value:"initialize",id:"initialize-49",level:3},{value:"proposeTemplate",id:"proposetemplate",level:3},{value:"approveTemplate",id:"approvetemplate",level:3},{value:"revokeTemplate",id:"revoketemplate",level:3},{value:"getTemplate",id:"gettemplate",level:3},{value:"getTemplateListSize",id:"gettemplatelistsize",level:3},{value:"isTemplateApproved",id:"istemplateapproved",level:3},{value:"AgreementStoreManagerChangeFunctionSignature",id:"agreementstoremanagerchangefunctionsignature",level:2},{value:"createAgreement",id:"createagreement-4",level:3},{value:"AgreementStoreManagerChangeInStorage",id:"agreementstoremanagerchangeinstorage",level:2},{value:"agreementCount",id:"agreementcount",level:3},{value:"AgreementStoreManagerChangeInStorageAndLogic",id:"agreementstoremanagerchangeinstorageandlogic",level:2},{value:"AgreementStoreManagerExtraFunctionality",id:"agreementstoremanagerextrafunctionality",level:2},{value:"dummyFunction",id:"dummyfunction",level:3},{value:"AgreementStoreManagerWithBug",id:"agreementstoremanagerwithbug",level:2},{value:"getDIDRegistryAddress",id:"getdidregistryaddress-1",level:3},{value:"ConditionStoreChangeFunctionSignature",id:"conditionstorechangefunctionsignature",level:2},{value:"createCondition",id:"createcondition-2",level:3},{value:"ConditionStoreChangeInStorage",id:"conditionstorechangeinstorage",level:2},{value:"conditionCount",id:"conditioncount",level:3},{value:"ConditionStoreChangeInStorageAndLogic",id:"conditionstorechangeinstorageandlogic",level:2},{value:"ConditionStoreExtraFunctionality",id:"conditionstoreextrafunctionality",level:2},{value:"dummyFunction",id:"dummyfunction-1",level:3},{value:"ConditionStoreWithBug",id:"conditionstorewithbug",level:2},{value:"getConditionState",id:"getconditionstate-1",level:3},{value:"DIDRegistryChangeFunctionSignature",id:"didregistrychangefunctionsignature",level:2},{value:"registerAttribute",id:"registerattribute-1",level:3},{value:"DIDRegistryChangeInStorage",id:"didregistrychangeinstorage",level:2},{value:"timeOfRegister",id:"timeofregister",level:3},{value:"DIDRegistryChangeInStorageAndLogic",id:"didregistrychangeinstorageandlogic",level:2},{value:"DIDRegistryExtraFunctionality",id:"didregistryextrafunctionality",level:2},{value:"getNumber",id:"getnumber",level:3},{value:"DIDRegistryWithBug",id:"didregistrywithbug",level:2},{value:"registerAttribute",id:"registerattribute-2",level:3},{value:"IPNFT",id:"ipnft",level:2},{value:"TokenURIChanged",id:"tokenurichanged",level:3},{value:"initialize",id:"initialize-50",level:3},{value:"setTokenURI",id:"settokenuri",level:3},{value:"mint",id:"mint-5",level:3},{value:"mintWithoutTokenURI",id:"mintwithouttokenuri",level:3},{value:"transfer",id:"transfer-2",level:3},{value:"NeverminedConfigChangeInStorage",id:"neverminedconfigchangeinstorage",level:2},{value:"newVariable",id:"newvariable",level:3},{value:"NeverminedConfigChangeFunctionSignature",id:"neverminedconfigchangefunctionsignature",level:2},{value:"setMarketplaceFees",id:"setmarketplacefees-2",level:3},{value:"NeverminedConfigChangeInStorageAndLogic",id:"neverminedconfigchangeinstorageandlogic",level:2},{value:"NeverminedConfigWithBug",id:"neverminedconfigwithbug",level:2},{value:"setMarketplaceFees",id:"setmarketplacefees-3",level:3},{value:"TemplateStoreChangeFunctionSignature",id:"templatestorechangefunctionsignature",level:2},{value:"proposeTemplate",id:"proposetemplate-1",level:3},{value:"TemplateStoreChangeInStorage",id:"templatestorechangeinstorage",level:2},{value:"templateCount",id:"templatecount",level:3},{value:"TemplateStoreChangeInStorageAndLogic",id:"templatestorechangeinstorageandlogic",level:2},{value:"TemplateStoreExtraFunctionality",id:"templatestoreextrafunctionality",level:2},{value:"dummyFunction",id:"dummyfunction-2",level:3},{value:"TemplateStoreWithBug",id:"templatestorewithbug",level:2},{value:"getTemplateListSize",id:"gettemplatelistsize-1",level:3},{value:"TestERC721",id:"testerc721",level:2},{value:"initialize",id:"initialize-51",level:3},{value:"mint",id:"mint-6",level:3},{value:"DIDRegistryLibraryProxy",id:"didregistrylibraryproxy",level:2},{value:"didRegister",id:"didregister-1",level:3},{value:"didRegisterList",id:"didregisterlist-2",level:3},{value:"areRoyaltiesValid",id:"areroyaltiesvalid-2",level:3},{value:"updateDIDOwner",id:"updatedidowner-1",level:3},{value:"update",id:"update-3",level:3},{value:"initializeNftConfig",id:"initializenftconfig-1",level:3},{value:"initializeNft721Config",id:"initializenft721config-1",level:3},{value:"getDIDInfo",id:"getdidinfo",level:3},{value:"EpochLibraryProxy",id:"epochlibraryproxy",level:2},{value:"epoch",id:"epoch-1",level:3},{value:"epochList",id:"epochlist-2",level:3},{value:"create",id:"create-5",level:3},{value:"HashListLibraryProxy",id:"hashlistlibraryproxy",level:2},{value:"testData",id:"testdata",level:3},{value:"initialize",id:"initialize-52",level:3},{value:"hash",id:"hash-1",level:3},{value:"add",id:"add-5",level:3},{value:"add",id:"add-6",level:3},{value:"update",id:"update-4",level:3},{value:"index",id:"index-2",level:3},{value:"has",id:"has-5",level:3},{value:"remove",id:"remove-2",level:3},{value:"get",id:"get-2",level:3},{value:"size",id:"size-2",level:3},{value:"all",id:"all-2",level:3},{value:"indexOf",id:"indexof-2",level:3},{value:"ownedBy",id:"ownedby-2",level:3},{value:"isIndexed",id:"isindexed-2",level:3},{value:"NFTBase",id:"nftbase",level:2},{value:"_proxyApprovals",id:"_proxyapprovals",level:3},{value:"MINTER_ROLE",id:"minter_role",level:3},{value:"RoyaltyInfo",id:"royaltyinfo",level:3},{value:"NFTMetadata",id:"nftmetadata",level:3},{value:"_royalties",id:"_royalties",level:3},{value:"_metadata",id:"_metadata",level:3},{value:"_expiration",id:"_expiration",level:3},{value:"ProxyApproval",id:"proxyapproval",level:3},{value:"setProxyApproval",id:"setproxyapproval",level:3},{value:"_setNFTMetadata",id:"_setnftmetadata",level:3},{value:"_setTokenRoyalty",id:"_settokenroyalty",level:3},{value:"royaltyInfo",id:"royaltyinfo-1",level:3},{value:"NFTUpgradeable",id:"nftupgradeable",level:2},{value:"initialize",id:"initialize-53",level:3},{value:"isApprovedForAll",id:"isapprovedforall",level:3},{value:"mint",id:"mint-7",level:3},{value:"burn",id:"burn-3",level:3},{value:"addMinter",id:"addminter",level:3},{value:"uri",id:"uri",level:3},{value:"setNFTMetadata",id:"setnftmetadata",level:3},{value:"setTokenRoyalty",id:"settokenroyalty",level:3},{value:"supportsInterface",id:"supportsinterface-2",level:3},{value:"NFT721SubscriptionUpgradeable",id:"nft721subscriptionupgradeable",level:2},{value:"mint",id:"mint-8",level:3},{value:"balanceOf",id:"balanceof-1",level:3},{value:"NFT721Upgradeable",id:"nft721upgradeable",level:2},{value:"initialize",id:"initialize-54",level:3},{value:"initialize",id:"initialize-55",level:3},{value:"isApprovedForAll",id:"isapprovedforall-1",level:3},{value:"addMinter",id:"addminter-1",level:3},{value:"mint",id:"mint-9",level:3},{value:"burn",id:"burn-4",level:3},{value:"tokenURI",id:"tokenuri",level:3},{value:"setNFTMetadata",id:"setnftmetadata-1",level:3},{value:"setTokenRoyalty",id:"settokenroyalty-1",level:3},{value:"supportsInterface",id:"supportsinterface-3",level:3},{value:"POAPUpgradeable",id:"poapupgradeable",level:2},{value:"_tokenIdCounter",id:"_tokenidcounter",level:3},{value:"_tokenEvent",id:"_tokenevent",level:3},{value:"initialize",id:"initialize-56",level:3},{value:"initialize",id:"initialize-57",level:3},{value:"mint",id:"mint-10",level:3},{value:"mint",id:"mint-11",level:3},{value:"tokenEvent",id:"tokenevent",level:3},{value:"_beforeTokenTransfer",id:"_beforetokentransfer-1",level:3},{value:"_burn",id:"_burn",level:3},{value:"tokenDetailsOfOwner",id:"tokendetailsofowner",level:3},{value:"tokenURI",id:"tokenuri-1",level:3},{value:"isApprovedForAll",id:"isapprovedforall-2",level:3},{value:"supportsInterface",id:"supportsinterface-4",level:3},{value:"PlonkVerifier",id:"plonkverifier",level:2},{value:"n",id:"n",level:3},{value:"nPublic",id:"npublic",level:3},{value:"nLagrange",id:"nlagrange",level:3},{value:"Qmx",id:"qmx",level:3},{value:"Qmy",id:"qmy",level:3},{value:"Qlx",id:"qlx",level:3},{value:"Qly",id:"qly",level:3},{value:"Qrx",id:"qrx",level:3},{value:"Qry",id:"qry",level:3},{value:"Qox",id:"qox",level:3},{value:"Qoy",id:"qoy",level:3},{value:"Qcx",id:"qcx",level:3},{value:"Qcy",id:"qcy",level:3},{value:"S1x",id:"s1x",level:3},{value:"S1y",id:"s1y",level:3},{value:"S2x",id:"s2x",level:3},{value:"S2y",id:"s2y",level:3},{value:"S3x",id:"s3x",level:3},{value:"S3y",id:"s3y",level:3},{value:"k1",id:"k1",level:3},{value:"k2",id:"k2",level:3},{value:"X2x1",id:"x2x1",level:3},{value:"X2x2",id:"x2x2",level:3},{value:"X2y1",id:"x2y1",level:3},{value:"X2y2",id:"x2y2",level:3},{value:"q",id:"q",level:3},{value:"qf",id:"qf",level:3},{value:"w1",id:"w1",level:3},{value:"G1x",id:"g1x",level:3},{value:"G1y",id:"g1y",level:3},{value:"G2x1",id:"g2x1",level:3},{value:"G2x2",id:"g2x2",level:3},{value:"G2y1",id:"g2y1",level:3},{value:"G2y2",id:"g2y2",level:3},{value:"pA",id:"pa",level:3},{value:"pB",id:"pb",level:3},{value:"pC",id:"pc",level:3},{value:"pZ",id:"pz",level:3},{value:"pT1",id:"pt1",level:3},{value:"pT2",id:"pt2",level:3},{value:"pT3",id:"pt3",level:3},{value:"pWxi",id:"pwxi",level:3},{value:"pWxiw",id:"pwxiw",level:3},{value:"pEval_a",id:"peval_a",level:3},{value:"pEval_b",id:"peval_b",level:3},{value:"pEval_c",id:"peval_c",level:3},{value:"pEval_s1",id:"peval_s1",level:3},{value:"pEval_s2",id:"peval_s2",level:3},{value:"pEval_zw",id:"peval_zw",level:3},{value:"pEval_r",id:"peval_r",level:3},{value:"pAlpha",id:"palpha",level:3},{value:"pBeta",id:"pbeta",level:3},{value:"pGamma",id:"pgamma",level:3},{value:"pXi",id:"pxi",level:3},{value:"pXin",id:"pxin",level:3},{value:"pBetaXi",id:"pbetaxi",level:3},{value:"pV1",id:"pv1",level:3},{value:"pV2",id:"pv2",level:3},{value:"pV3",id:"pv3",level:3},{value:"pV4",id:"pv4",level:3},{value:"pV5",id:"pv5",level:3},{value:"pV6",id:"pv6",level:3},{value:"pU",id:"pu",level:3},{value:"pPl",id:"ppl",level:3},{value:"pEval_t",id:"peval_t",level:3},{value:"pA1",id:"pa1",level:3},{value:"pB1",id:"pb1",level:3},{value:"pZh",id:"pzh",level:3},{value:"pZhInv",id:"pzhinv",level:3},{value:"pEval_l1",id:"peval_l1",level:3},{value:"pEval_l2",id:"peval_l2",level:3},{value:"pEval_l3",id:"peval_l3",level:3},{value:"pEval_l4",id:"peval_l4",level:3},{value:"pEval_l5",id:"peval_l5",level:3},{value:"pEval_l6",id:"peval_l6",level:3},{value:"pEval_l7",id:"peval_l7",level:3},{value:"lastMem",id:"lastmem",level:3},{value:"verifyProof",id:"verifyproof-1",level:3},{value:"Common",id:"common-1",level:2},{value:"getCurrentBlockNumber",id:"getcurrentblocknumber-1",level:3},{value:"isContract",id:"iscontract-2",level:3},{value:"provenanceSignatureIsCorrect",id:"provenancesignatureiscorrect-1",level:3},{value:"calculateTotalAmount",id:"calculatetotalamount-1",level:3},{value:"addressToBytes32",id:"addresstobytes32-1",level:3},{value:"bytes32ToAddress",id:"bytes32toaddress-1",level:3},{value:"Dispenser",id:"dispenser-1",level:2},{value:"tokenRequests",id:"tokenrequests-1",level:3},{value:"totalMintAmount",id:"totalmintamount-1",level:3},{value:"maxAmount",id:"maxamount-1",level:3},{value:"maxMintAmount",id:"maxmintamount-1",level:3},{value:"minPeriod",id:"minperiod-1",level:3},{value:"scale",id:"scale-1",level:3},{value:"token",id:"token-1",level:3},{value:"RequestFrequencyExceeded",id:"requestfrequencyexceeded-1",level:3},{value:"RequestLimitExceeded",id:"requestlimitexceeded-1",level:3},{value:"isValidAddress",id:"isvalidaddress-1",level:3},{value:"initialize",id:"initialize-58",level:3},{value:"requestTokens",id:"requesttokens-1",level:3},{value:"setMinPeriod",id:"setminperiod-1",level:3},{value:"setMaxAmount",id:"setmaxamount-1",level:3},{value:"setMaxMintAmount",id:"setmaxmintamount-1",level:3},{value:"HashLists",id:"hashlists-1",level:2},{value:"lists",id:"lists-1",level:3},{value:"initialize",id:"initialize-59",level:3},{value:"hash",id:"hash-2",level:3},{value:"add",id:"add-7",level:3},{value:"add",id:"add-8",level:3},{value:"update",id:"update-5",level:3},{value:"index",id:"index-3",level:3},{value:"has",id:"has-6",level:3},{value:"has",id:"has-7",level:3},{value:"remove",id:"remove-3",level:3},{value:"get",id:"get-3",level:3},{value:"size",id:"size-3",level:3},{value:"all",id:"all-3",level:3},{value:"indexOf",id:"indexof-3",level:3},{value:"ownedBy",id:"ownedby-3",level:3},{value:"isIndexed",id:"isindexed-3",level:3},{value:"NeverminedToken",id:"neverminedtoken-1",level:2},{value:"initialize",id:"initialize-60",level:3},{value:"_beforeTokenTransfer",id:"_beforetokentransfer-2",level:3},{value:"mint",id:"mint-12",level:3},{value:"AgreementStoreLibrary",id:"agreementstorelibrary-1",level:2},{value:"Agreement",id:"agreement-1",level:3},{value:"AgreementList",id:"agreementlist-2",level:3},{value:"create",id:"create-6",level:3},{value:"Template",id:"template-2",level:2},{value:"getConditionTypes",id:"getconditiontypes-2",level:3},{value:"AgreementStoreManager",id:"agreementstoremanager-5",level:2},{value:"PROXY_ROLE",id:"proxy_role-5",level:3},{value:"grantProxyRole",id:"grantproxyrole-5",level:3},{value:"revokeProxyRole",id:"revokeproxyrole-5",level:3},{value:"agreementList",id:"agreementlist-3",level:3},{value:"conditionStoreManager",id:"conditionstoremanager-4",level:3},{value:"templateStoreManager",id:"templatestoremanager-2",level:3},{value:"didRegistry",id:"didregistry-19",level:3},{value:"initialize",id:"initialize-61",level:3},{value:"fullConditionId",id:"fullconditionid-1",level:3},{value:"agreementId",id:"agreementid-1",level:3},{value:"createAgreement",id:"createagreement-5",level:3},{value:"CreateAgreementArgs",id:"createagreementargs-1",level:3},{value:"createAgreementAndPay",id:"createagreementandpay-2",level:3},{value:"createAgreementAndFulfill",id:"createagreementandfulfill-3",level:3},{value:"getAgreementTemplate",id:"getagreementtemplate-1",level:3},{value:"getDIDRegistryAddress",id:"getdidregistryaddress-2",level:3},{value:"AccessCondition",id:"accesscondition-7",level:2},{value:"CONDITION_TYPE",id:"condition_type-24",level:3},{value:"DocumentPermission",id:"documentpermission-2",level:3},{value:"documentPermissions",id:"documentpermissions-1",level:3},{value:"agreementStoreManager",id:"agreementstoremanager-6",level:3},{value:"didRegistry",id:"didregistry-20",level:3},{value:"Fulfilled",id:"fulfilled-16",level:3},{value:"onlyDIDOwnerOrProvider",id:"onlydidownerorprovider-3",level:3},{value:"initialize",id:"initialize-62",level:3},{value:"reinitialize",id:"reinitialize-2",level:3},{value:"hashValues",id:"hashvalues-35",level:3},{value:"fulfill",id:"fulfill-36",level:3},{value:"grantPermission",id:"grantpermission-4",level:3},{value:"renouncePermission",id:"renouncepermission-2",level:3},{value:"checkPermissions",id:"checkpermissions-3",level:3},{value:"IDisputeManager",id:"idisputemanager-1",level:2},{value:"verifyProof",id:"verifyproof-2",level:3},{value:"AccessProofCondition",id:"accessproofcondition-1",level:2},{value:"CONDITION_TYPE",id:"condition_type-25",level:3},{value:"agreementStoreManager",id:"agreementstoremanager-7",level:3},{value:"disputeManager",id:"disputemanager-1",level:3},{value:"Fulfilled",id:"fulfilled-17",level:3},{value:"initialize",id:"initialize-63",level:3},{value:"changeDisputeManager",id:"changedisputemanager-1",level:3},{value:"hashValues",id:"hashvalues-36",level:3},{value:"fulfill",id:"fulfill-37",level:3},{value:"ComputeExecutionCondition",id:"computeexecutioncondition-2",level:2},{value:"CONDITION_TYPE",id:"condition_type-26",level:3},{value:"computeExecutionStatus",id:"computeexecutionstatus-1",level:3},{value:"agreementStoreManager",id:"agreementstoremanager-8",level:3},{value:"Fulfilled",id:"fulfilled-18",level:3},{value:"onlyDIDOwnerOrProvider",id:"onlydidownerorprovider-4",level:3},{value:"initialize",id:"initialize-64",level:3},{value:"hashValues",id:"hashvalues-37",level:3},{value:"fulfill",id:"fulfill-38",level:3},{value:"wasComputeTriggered",id:"wascomputetriggered-1",level:3},{value:"Condition",id:"condition-2",level:2},{value:"conditionStoreManager",id:"conditionstoremanager-5",level:3},{value:"generateId",id:"generateid-1",level:3},{value:"fulfill",id:"fulfill-39",level:3},{value:"abortByTimeOut",id:"abortbytimeout-1",level:3},{value:"ConditionStoreLibrary",id:"conditionstorelibrary-1",level:2},{value:"ConditionState",id:"conditionstate-1",level:3},{value:"Condition",id:"condition-3",level:3},{value:"ConditionList",id:"conditionlist-2",level:3},{value:"create",id:"create-7",level:3},{value:"updateState",id:"updatestate-1",level:3},{value:"updateKeyValue",id:"updatekeyvalue-1",level:3},{value:"ConditionStoreManager",id:"conditionstoremanager-6",level:2},{value:"PROXY_ROLE",id:"proxy_role-6",level:3},{value:"RoleType",id:"roletype-1",level:3},{value:"createRole",id:"createrole-1",level:3},{value:"conditionList",id:"conditionlist-3",level:3},{value:"epochList",id:"epochlist-3",level:3},{value:"nvmConfigAddress",id:"nvmconfigaddress-1",level:3},{value:"ConditionCreated",id:"conditioncreated-1",level:3},{value:"ConditionUpdated",id:"conditionupdated-1",level:3},{value:"onlyCreateRole",id:"onlycreaterole-1",level:3},{value:"onlyUpdateRole",id:"onlyupdaterole-1",level:3},{value:"onlyValidType",id:"onlyvalidtype-1",level:3},{value:"initialize",id:"initialize-65",level:3},{value:"getCreateRole",id:"getcreaterole-1",level:3},{value:"getNvmConfigAddress",id:"getnvmconfigaddress-1",level:3},{value:"setNvmConfigAddress",id:"setnvmconfigaddress-1",level:3},{value:"delegateCreateRole",id:"delegatecreaterole-1",level:3},{value:"delegateUpdateRole",id:"delegateupdaterole-1",level:3},{value:"grantProxyRole",id:"grantproxyrole-6",level:3},{value:"revokeProxyRole",id:"revokeproxyrole-6",level:3},{value:"createCondition",id:"createcondition-3",level:3},{value:"createCondition2",id:"createcondition2-1",level:3},{value:"createCondition",id:"createcondition-4",level:3},{value:"updateConditionState",id:"updateconditionstate-1",level:3},{value:"updateConditionMapping",id:"updateconditionmapping-1",level:3},{value:"updateConditionMappingProxy",id:"updateconditionmappingproxy-1",level:3},{value:"getCondition",id:"getcondition-1",level:3},{value:"getConditionState",id:"getconditionstate-2",level:3},{value:"getConditionTypeRef",id:"getconditiontyperef-1",level:3},{value:"getMappingValue",id:"getmappingvalue-1",level:3},{value:"isConditionTimeLocked",id:"isconditiontimelocked-1",level:3},{value:"isConditionTimedOut",id:"isconditiontimedout-1",level:3},{value:"HashLockCondition",id:"hashlockcondition-1",level:2},{value:"CONDITION_TYPE",id:"condition_type-27",level:3},{value:"initialize",id:"initialize-66",level:3},{value:"hashValues",id:"hashvalues-38",level:3},{value:"hashValues",id:"hashvalues-39",level:3},{value:"hashValues",id:"hashvalues-40",level:3},{value:"fulfill",id:"fulfill-40",level:3},{value:"fulfill",id:"fulfill-41",level:3},{value:"fulfill",id:"fulfill-42",level:3},{value:"_fulfill",id:"_fulfill-1",level:3},{value:"ICondition",id:"icondition-1",level:2},{value:"fulfillProxy",id:"fulfillproxy-4",level:3},{value:"ILockPayment",id:"ilockpayment-1",level:2},{value:"Fulfilled",id:"fulfilled-19",level:3},{value:"hashValues",id:"hashvalues-41",level:3},{value:"fulfill",id:"fulfill-43",level:3},{value:"LockPaymentCondition",id:"lockpaymentcondition-6",level:2},{value:"didRegistry",id:"didregistry-21",level:3},{value:"nvmConfig",id:"nvmconfig-1",level:3},{value:"CONDITION_TYPE",id:"condition_type-28",level:3},{value:"KEY_ASSET_RECEIVER",id:"key_asset_receiver-1",level:3},{value:"PROXY_ROLE",id:"proxy_role-7",level:3},{value:"ALLOWED_EXTERNAL_CONTRACT_ROLE",id:"allowed_external_contract_role-1",level:3},{value:"grantProxyRole",id:"grantproxyrole-7",level:3},{value:"revokeProxyRole",id:"revokeproxyrole-7",level:3},{value:"grantExternalContractRole",id:"grantexternalcontractrole-1",level:3},{value:"revokeExternalContractRole",id:"revokeexternalcontractrole-1",level:3},{value:"initialize",id:"initialize-67",level:3},{value:"reinitialize",id:"reinitialize-3",level:3},{value:"hashValues",id:"hashvalues-42",level:3},{value:"fulfill",id:"fulfill-44",level:3},{value:"fulfillExternal",id:"fulfillexternal-1",level:3},{value:"encodeParams",id:"encodeparams-4",level:3},{value:"fulfillInternal",id:"fulfillinternal-3",level:3},{value:"fulfillProxy",id:"fulfillproxy-5",level:3},{value:"_transferERC20Proxy",id:"_transfererc20proxy-1",level:3},{value:"_transferETH",id:"_transfereth-1",level:3},{value:"allowedExternalContract",id:"allowedexternalcontract-1",level:3},{value:"areMarketplaceFeesIncluded",id:"aremarketplacefeesincluded-1",level:3},{value:"DistributeNFTCollateralCondition",id:"distributenftcollateralcondition-1",level:2},{value:"CONDITION_TYPE",id:"condition_type-29",level:3},{value:"aaveCreditVault",id:"aavecreditvault-6",level:3},{value:"_lockConditionAddress",id:"_lockconditionaddress-2",level:3},{value:"Fulfilled",id:"fulfilled-20",level:3},{value:"initialize",id:"initialize-68",level:3},{value:"hashValues",id:"hashvalues-43",level:3},{value:"fulfill",id:"fulfill-45",level:3},{value:"INFTAccess",id:"inftaccess-1",level:2},{value:"Fulfilled",id:"fulfilled-21",level:3},{value:"hashValues",id:"hashvalues-44",level:3},{value:"fulfill",id:"fulfill-46",level:3},{value:"INFTHolder",id:"inftholder-1",level:2},{value:"Fulfilled",id:"fulfilled-22",level:3},{value:"hashValues",id:"hashvalues-45",level:3},{value:"fulfill",id:"fulfill-47",level:3},{value:"INFTLock",id:"inftlock-1",level:2},{value:"Fulfilled",id:"fulfilled-23",level:3},{value:"hashValues",id:"hashvalues-46",level:3},{value:"hashValuesMarked",id:"hashvaluesmarked-3",level:3},{value:"fulfill",id:"fulfill-48",level:3},{value:"fulfillMarked",id:"fulfillmarked-3",level:3},{value:"ITransferNFT",id:"itransfernft-1",level:2},{value:"Fulfilled",id:"fulfilled-24",level:3},{value:"hashValues",id:"hashvalues-47",level:3},{value:"fulfill",id:"fulfill-49",level:3},{value:"getNFTDefaultAddress",id:"getnftdefaultaddress-3",level:3},{value:"NFT721HolderCondition",id:"nft721holdercondition-1",level:2},{value:"CONDITION_TYPE",id:"condition_type-30",level:3},{value:"initialize",id:"initialize-69",level:3},{value:"hashValues",id:"hashvalues-48",level:3},{value:"fulfill",id:"fulfill-50",level:3},{value:"NFT721LockCondition",id:"nft721lockcondition-1",level:2},{value:"CONDITION_TYPE",id:"condition_type-31",level:3},{value:"initialize",id:"initialize-70",level:3},{value:"hashValues",id:"hashvalues-49",level:3},{value:"hashValuesMarked",id:"hashvaluesmarked-4",level:3},{value:"fulfillMarked",id:"fulfillmarked-4",level:3},{value:"fulfill",id:"fulfill-51",level:3},{value:"onERC721Received",id:"onerc721received-3",level:3},{value:"NFTAccessCondition",id:"nftaccesscondition-1",level:2},{value:"CONDITION_TYPE",id:"condition_type-32",level:3},{value:"DocumentPermission",id:"documentpermission-3",level:3},{value:"nftPermissions",id:"nftpermissions-1",level:3},{value:"didRegistry",id:"didregistry-22",level:3},{value:"onlyDIDOwnerOrProvider",id:"onlydidownerorprovider-5",level:3},{value:"initialize",id:"initialize-71",level:3},{value:"hashValues",id:"hashvalues-50",level:3},{value:"hashValues",id:"hashvalues-51",level:3},{value:"fulfill",id:"fulfill-52",level:3},{value:"fulfill",id:"fulfill-53",level:3},{value:"grantPermission",id:"grantpermission-5",level:3},{value:"checkPermissions",id:"checkpermissions-4",level:3},{value:"NFTHolderCondition",id:"nftholdercondition-3",level:2},{value:"erc1155",id:"erc1155-4",level:3},{value:"CONDITION_TYPE",id:"condition_type-33",level:3},{value:"initialize",id:"initialize-72",level:3},{value:"hashValues",id:"hashvalues-52",level:3},{value:"hashValues",id:"hashvalues-53",level:3},{value:"fulfill",id:"fulfill-54",level:3},{value:"fulfill",id:"fulfill-55",level:3},{value:"NFTLockCondition",id:"nftlockcondition-2",level:2},{value:"erc1155",id:"erc1155-5",level:3},{value:"CONDITION_TYPE",id:"condition_type-34",level:3},{value:"ERC1155_ACCEPTED",id:"erc1155_accepted-2",level:3},{value:"ERC1155_BATCH_ACCEPTED",id:"erc1155_batch_accepted-2",level:3},{value:"initialize",id:"initialize-73",level:3},{value:"hashValues",id:"hashvalues-54",level:3},{value:"hashValues",id:"hashvalues-55",level:3},{value:"hashValuesMarked",id:"hashvaluesmarked-5",level:3},{value:"fulfill",id:"fulfill-56",level:3},{value:"fulfill",id:"fulfill-57",level:3},{value:"fulfillMarked",id:"fulfillmarked-5",level:3},{value:"onERC1155Received",id:"onerc1155received-2",level:3},{value:"onERC1155BatchReceived",id:"onerc1155batchreceived-2",level:3},{value:"supportsInterface",id:"supportsinterface-5",level:3},{value:"TransferNFT721Condition",id:"transfernft721condition-1",level:2},{value:"CONDITION_TYPE",id:"condition_type-35",level:3},{value:"MARKET_ROLE",id:"market_role-2",level:3},{value:"erc721",id:"erc721-2",level:3},{value:"_lockConditionAddress",id:"_lockconditionaddress-3",level:3},{value:"PROXY_ROLE",id:"proxy_role-8",level:3},{value:"didRegistry",id:"didregistry-23",level:3},{value:"grantProxyRole",id:"grantproxyrole-8",level:3},{value:"revokeProxyRole",id:"revokeproxyrole-8",level:3},{value:"initialize",id:"initialize-74",level:3},{value:"getNFTDefaultAddress",id:"getnftdefaultaddress-4",level:3},{value:"hashValues",id:"hashvalues-56",level:3},{value:"encodeParams",id:"encodeparams-5",level:3},{value:"fulfill",id:"fulfill-58",level:3},{value:"fulfillProxy",id:"fulfillproxy-6",level:3},{value:"fulfillInternal",id:"fulfillinternal-4",level:3},{value:"fulfillForDelegate",id:"fulfillfordelegate-4",level:3},{value:"fulfillForDelegate",id:"fulfillfordelegate-5",level:3},{value:"TransferNFTCondition",id:"transfernftcondition-1",level:2},{value:"CONDITION_TYPE",id:"condition_type-36",level:3},{value:"MARKET_ROLE",id:"market_role-3",level:3},{value:"erc1155",id:"erc1155-6",level:3},{value:"didRegistry",id:"didregistry-24",level:3},{value:"PROXY_ROLE",id:"proxy_role-9",level:3},{value:"grantProxyRole",id:"grantproxyrole-9",level:3},{value:"revokeProxyRole",id:"revokeproxyrole-9",level:3},{value:"initialize",id:"initialize-75",level:3},{value:"grantMarketRole",id:"grantmarketrole-1",level:3},{value:"revokeMarketRole",id:"revokemarketrole-1",level:3},{value:"getNFTDefaultAddress",id:"getnftdefaultaddress-5",level:3},{value:"hashValues",id:"hashvalues-57",level:3},{value:"hashValues",id:"hashvalues-58",level:3},{value:"fulfill",id:"fulfill-59",level:3},{value:"encodeParams",id:"encodeparams-6",level:3},{value:"fulfillProxy",id:"fulfillproxy-7",level:3},{value:"fulfill",id:"fulfill-60",level:3},{value:"fulfillInternal",id:"fulfillinternal-5",level:3},{value:"fulfillForDelegate",id:"fulfillfordelegate-6",level:3},{value:"fulfillForDelegate",id:"fulfillfordelegate-7",level:3},{value:"SignCondition",id:"signcondition-1",level:2},{value:"CONDITION_TYPE",id:"condition_type-37",level:3},{value:"initialize",id:"initialize-76",level:3},{value:"hashValues",id:"hashvalues-59",level:3},{value:"fulfill",id:"fulfill-61",level:3},{value:"ThresholdCondition",id:"thresholdcondition-1",level:2},{value:"CONDITION_TYPE",id:"condition_type-38",level:3},{value:"initialize",id:"initialize-77",level:3},{value:"hashValues",id:"hashvalues-60",level:3},{value:"fulfill",id:"fulfill-62",level:3},{value:"canFulfill",id:"canfulfill-1",level:3},{value:"TransferDIDOwnershipCondition",id:"transferdidownershipcondition-1",level:2},{value:"CONDITION_TYPE",id:"condition_type-39",level:3},{value:"didRegistry",id:"didregistry-25",level:3},{value:"Fulfilled",id:"fulfilled-25",level:3},{value:"initialize",id:"initialize-78",level:3},{value:"hashValues",id:"hashvalues-61",level:3},{value:"fulfill",id:"fulfill-63",level:3},{value:"WhitelistingCondition",id:"whitelistingcondition-1",level:2},{value:"CONDITION_TYPE",id:"condition_type-40",level:3},{value:"initialize",id:"initialize-79",level:3},{value:"hashValues",id:"hashvalues-62",level:3},{value:"fulfill",id:"fulfill-64",level:3},{value:"AaveBorrowCondition",id:"aaveborrowcondition-1",level:2},{value:"aaveCreditVault",id:"aavecreditvault-7",level:3},{value:"CONDITION_TYPE",id:"condition_type-41",level:3},{value:"Fulfilled",id:"fulfilled-26",level:3},{value:"initialize",id:"initialize-80",level:3},{value:"hashValues",id:"hashvalues-63",level:3},{value:"fulfill",id:"fulfill-65",level:3},{value:"AaveCollateralDepositCondition",id:"aavecollateraldepositcondition-1",level:2},{value:"aaveCreditVault",id:"aavecreditvault-8",level:3},{value:"CONDITION_TYPE",id:"condition_type-42",level:3},{value:"Fulfilled",id:"fulfilled-27",level:3},{value:"initialize",id:"initialize-81",level:3},{value:"hashValues",id:"hashvalues-64",level:3},{value:"fulfill",id:"fulfill-66",level:3},{value:"AaveCollateralWithdrawCondition",id:"aavecollateralwithdrawcondition-1",level:2},{value:"aaveCreditVault",id:"aavecreditvault-9",level:3},{value:"CONDITION_TYPE",id:"condition_type-43",level:3},{value:"Fulfilled",id:"fulfilled-28",level:3},{value:"initialize",id:"initialize-82",level:3},{value:"hashValues",id:"hashvalues-65",level:3},{value:"fulfill",id:"fulfill-67",level:3},{value:"AaveCreditVault",id:"aavecreditvault-10",level:2},{value:"lendingPool",id:"lendingpool-1",level:3},{value:"dataProvider",id:"dataprovider-1",level:3},{value:"weth",id:"weth-1",level:3},{value:"addressProvider",id:"addressprovider-1",level:3},{value:"priceOracle",id:"priceoracle-1",level:3},{value:"borrowedAsset",id:"borrowedasset-1",level:3},{value:"borrowedAmount",id:"borrowedamount-1",level:3},{value:"nvmFee",id:"nvmfee-2",level:3},{value:"agreementFee",id:"agreementfee-1",level:3},{value:"FEE_BASE",id:"fee_base-1",level:3},{value:"treasuryAddress",id:"treasuryaddress-1",level:3},{value:"borrower",id:"borrower-1",level:3},{value:"lender",id:"lender-1",level:3},{value:"repayConditionId",id:"repayconditionid-1",level:3},{value:"nftId",id:"nftid-1",level:3},{value:"nftAddress",id:"nftaddress-1",level:3},{value:"BORROWER_ROLE",id:"borrower_role-1",level:3},{value:"LENDER_ROLE",id:"lender_role-1",level:3},{value:"CONDITION_ROLE",id:"condition_role-1",level:3},{value:"initialize",id:"initialize-83",level:3},{value:"isLender",id:"islender-1",level:3},{value:"isBorrower",id:"isborrower-1",level:3},{value:"deposit",id:"deposit-3",level:3},{value:"approveBorrower",id:"approveborrower-1",level:3},{value:"delegatedAmount",id:"delegatedamount-1",level:3},{value:"borrow",id:"borrow-3",level:3},{value:"repay",id:"repay-3",level:3},{value:"setRepayConditionId",id:"setrepayconditionid-1",level:3},{value:"getBorrowedAmount",id:"getborrowedamount-1",level:3},{value:"getAssetPrice",id:"getassetprice-2",level:3},{value:"getCreditAssetDebt",id:"getcreditassetdebt-1",level:3},{value:"getActualCreditDebt",id:"getactualcreditdebt-1",level:3},{value:"getTotalActualDebt",id:"gettotalactualdebt-1",level:3},{value:"withdrawCollateral",id:"withdrawcollateral-1",level:3},{value:"transferNFT",id:"transfernft-1",level:3},{value:"_transferERC20",id:"_transfererc20-1",level:3},{value:"onERC721Received",id:"onerc721received-4",level:3},{value:"AaveRepayCondition",id:"aaverepaycondition-1",level:2},{value:"aaveCreditVault",id:"aavecreditvault-11",level:3},{value:"CONDITION_TYPE",id:"condition_type-44",level:3},{value:"Fulfilled",id:"fulfilled-29",level:3},{value:"initialize",id:"initialize-84",level:3},{value:"hashValues",id:"hashvalues-66",level:3},{value:"fulfill",id:"fulfill-68",level:3},{value:"EscrowPaymentCondition",id:"escrowpaymentcondition-1",level:2},{value:"CONDITION_TYPE",id:"condition_type-45",level:3},{value:"USED_PAYMENT_ID",id:"used_payment_id-1",level:3},{value:"Fulfilled",id:"fulfilled-30",level:3},{value:"Received",id:"received-3",level:3},{value:"receive",id:"receive-4",level:3},{value:"initialize",id:"initialize-85",level:3},{value:"hashValuesMulti",id:"hashvaluesmulti-1",level:3},{value:"encodeParams",id:"encodeparams-7",level:3},{value:"hashValues",id:"hashvalues-67",level:3},{value:"hashValuesLockPayment",id:"hashvalueslockpayment-3",level:3},{value:"fulfillMulti",id:"fulfillmulti-1",level:3},{value:"Args",id:"args-3",level:3},{value:"fulfillKludge",id:"fulfillkludge-3",level:3},{value:"fulfill",id:"fulfill-69",level:3},{value:"_transferAndFulfillERC20",id:"_transferandfulfillerc20-1",level:3},{value:"_transferAndFulfillETH",id:"_transferandfulfilleth-1",level:3},{value:"INFTEscrow",id:"inftescrow-1",level:2},{value:"Fulfilled",id:"fulfilled-31",level:3},{value:"NFT721EscrowPaymentCondition",id:"nft721escrowpaymentcondition-1",level:2},{value:"CONDITION_TYPE",id:"condition_type-46",level:3},{value:"Received",id:"received-4",level:3},{value:"receive",id:"receive-5",level:3},{value:"initialize",id:"initialize-86",level:3},{value:"hashValues",id:"hashvalues-68",level:3},{value:"hashValuesLockPayment",id:"hashvalueslockpayment-4",level:3},{value:"fulfill",id:"fulfill-70",level:3},{value:"Args",id:"args-4",level:3},{value:"fulfillKludge",id:"fulfillkludge-4",level:3},{value:"_transferAndFulfillNFT",id:"_transferandfulfillnft-2",level:3},{value:"onERC721Received",id:"onerc721received-5",level:3},{value:"NFTEscrowPaymentCondition",id:"nftescrowpaymentcondition-1",level:2},{value:"CONDITION_TYPE",id:"condition_type-47",level:3},{value:"LOCK_CONDITION_TYPE",id:"lock_condition_type-1",level:3},{value:"Received",id:"received-5",level:3},{value:"receive",id:"receive-6",level:3},{value:"initialize",id:"initialize-87",level:3},{value:"hashValues",id:"hashvalues-69",level:3},{value:"hashValuesLockPayment",id:"hashvalueslockpayment-5",level:3},{value:"fulfill",id:"fulfill-71",level:3},{value:"Args",id:"args-5",level:3},{value:"fulfillKludge",id:"fulfillkludge-5",level:3},{value:"_transferAndFulfillNFT",id:"_transferandfulfillnft-3",level:3},{value:"ERC1155_ACCEPTED",id:"erc1155_accepted-3",level:3},{value:"ERC1155_BATCH_ACCEPTED",id:"erc1155_batch_accepted-3",level:3},{value:"onERC1155Received",id:"onerc1155received-3",level:3},{value:"onERC1155BatchReceived",id:"onerc1155batchreceived-3",level:3},{value:"supportsInterface",id:"supportsinterface-6",level:3},{value:"Reward",id:"reward-1",level:2},{value:"INVMConfig",id:"invmconfig-1",level:2},{value:"GOVERNOR_ROLE",id:"governor_role-1",level:3},{value:"NeverminedConfigChange",id:"neverminedconfigchange-1",level:3},{value:"initialize",id:"initialize-88",level:3},{value:"setMarketplaceFees",id:"setmarketplacefees-4",level:3},{value:"isGovernor",id:"isgovernor-2",level:3},{value:"getMarketplaceFee",id:"getmarketplacefee-2",level:3},{value:"getFeeReceiver",id:"getfeereceiver-2",level:3},{value:"NeverminedConfig",id:"neverminedconfig-1",level:2},{value:"marketplaceFee",id:"marketplacefee-1",level:3},{value:"feeReceiver",id:"feereceiver-1",level:3},{value:"initialize",id:"initialize-89",level:3},{value:"setMarketplaceFees",id:"setmarketplacefees-5",level:3},{value:"setGovernor",id:"setgovernor-1",level:3},{value:"isGovernor",id:"isgovernor-3",level:3},{value:"getMarketplaceFee",id:"getmarketplacefee-3",level:3},{value:"getFeeReceiver",id:"getfeereceiver-3",level:3},{value:"onlyGovernor",id:"onlygovernor-1",level:3},{value:"IERC20",id:"ierc20-1",level:2},{value:"totalSupply",id:"totalsupply-1",level:3},{value:"balanceOf",id:"balanceof-2",level:3},{value:"transfer",id:"transfer-3",level:3},{value:"allowance",id:"allowance-1",level:3},{value:"approve",id:"approve-2",level:3},{value:"transferFrom",id:"transferfrom-1",level:3},{value:"Transfer",id:"transfer-4",level:3},{value:"Approval",id:"approval-1",level:3},{value:"IPriceOracleGetter",id:"ipriceoraclegetter-1",level:2},{value:"getAssetPrice",id:"getassetprice-3",level:3},{value:"IProtocolDataProvider",id:"iprotocoldataprovider-1",level:2},{value:"TokenData",id:"tokendata-1",level:3},{value:"ADDRESSES_PROVIDER",id:"addresses_provider-1",level:3},{value:"getAllReservesTokens",id:"getallreservestokens-1",level:3},{value:"getAllATokens",id:"getallatokens-1",level:3},{value:"getReserveConfigurationData",id:"getreserveconfigurationdata-1",level:3},{value:"getReserveData",id:"getreservedata-2",level:3},{value:"getUserReserveData",id:"getuserreservedata-1",level:3},{value:"getReserveTokensAddresses",id:"getreservetokensaddresses-1",level:3},{value:"ILendingPoolAddressesProvider",id:"ilendingpooladdressesprovider-1",level:2},{value:"MarketIdSet",id:"marketidset-1",level:3},{value:"LendingPoolUpdated",id:"lendingpoolupdated-1",level:3},{value:"ConfigurationAdminUpdated",id:"configurationadminupdated-1",level:3},{value:"EmergencyAdminUpdated",id:"emergencyadminupdated-1",level:3},{value:"LendingPoolConfiguratorUpdated",id:"lendingpoolconfiguratorupdated-1",level:3},{value:"LendingPoolCollateralManagerUpdated",id:"lendingpoolcollateralmanagerupdated-1",level:3},{value:"PriceOracleUpdated",id:"priceoracleupdated-1",level:3},{value:"LendingRateOracleUpdated",id:"lendingrateoracleupdated-1",level:3},{value:"ProxyCreated",id:"proxycreated-1",level:3},{value:"AddressSet",id:"addressset-1",level:3},{value:"getMarketId",id:"getmarketid-1",level:3},{value:"setMarketId",id:"setmarketid-1",level:3},{value:"setAddress",id:"setaddress-1",level:3},{value:"setAddressAsProxy",id:"setaddressasproxy-1",level:3},{value:"getAddress",id:"getaddress-1",level:3},{value:"getLendingPool",id:"getlendingpool-1",level:3},{value:"setLendingPoolImpl",id:"setlendingpoolimpl-1",level:3},{value:"getLendingPoolConfigurator",id:"getlendingpoolconfigurator-1",level:3},{value:"setLendingPoolConfiguratorImpl",id:"setlendingpoolconfiguratorimpl-1",level:3},{value:"getLendingPoolCollateralManager",id:"getlendingpoolcollateralmanager-1",level:3},{value:"setLendingPoolCollateralManager",id:"setlendingpoolcollateralmanager-1",level:3},{value:"getPoolAdmin",id:"getpooladmin-1",level:3},{value:"setPoolAdmin",id:"setpooladmin-1",level:3},{value:"getEmergencyAdmin",id:"getemergencyadmin-1",level:3},{value:"setEmergencyAdmin",id:"setemergencyadmin-1",level:3},{value:"getPriceOracle",id:"getpriceoracle-1",level:3},{value:"setPriceOracle",id:"setpriceoracle-1",level:3},{value:"getLendingRateOracle",id:"getlendingrateoracle-1",level:3},{value:"setLendingRateOracle",id:"setlendingrateoracle-1",level:3},{value:"ILendingPool",id:"ilendingpool-1",level:2},{value:"Deposit",id:"deposit-4",level:3},{value:"Withdraw",id:"withdraw-5",level:3},{value:"Borrow",id:"borrow-4",level:3},{value:"Repay",id:"repay-4",level:3},{value:"Swap",id:"swap-1",level:3},{value:"ReserveUsedAsCollateralEnabled",id:"reserveusedascollateralenabled-1",level:3},{value:"ReserveUsedAsCollateralDisabled",id:"reserveusedascollateraldisabled-1",level:3},{value:"RebalanceStableBorrowRate",id:"rebalancestableborrowrate-2",level:3},{value:"FlashLoan",id:"flashloan-2",level:3},{value:"Paused",id:"paused-2",level:3},{value:"Unpaused",id:"unpaused-1",level:3},{value:"LiquidationCall",id:"liquidationcall-2",level:3},{value:"ReserveDataUpdated",id:"reservedataupdated-1",level:3},{value:"deposit",id:"deposit-5",level:3},{value:"withdraw",id:"withdraw-6",level:3},{value:"borrow",id:"borrow-5",level:3},{value:"repay",id:"repay-5",level:3},{value:"swapBorrowRateMode",id:"swapborrowratemode-1",level:3},{value:"rebalanceStableBorrowRate",id:"rebalancestableborrowrate-3",level:3},{value:"setUserUseReserveAsCollateral",id:"setuserusereserveascollateral-1",level:3},{value:"liquidationCall",id:"liquidationcall-3",level:3},{value:"flashLoan",id:"flashloan-3",level:3},{value:"getUserAccountData",id:"getuseraccountdata-1",level:3},{value:"initReserve",id:"initreserve-1",level:3},{value:"setReserveInterestRateStrategyAddress",id:"setreserveinterestratestrategyaddress-1",level:3},{value:"setConfiguration",id:"setconfiguration-1",level:3},{value:"getConfiguration",id:"getconfiguration-1",level:3},{value:"getUserConfiguration",id:"getuserconfiguration-1",level:3},{value:"getReserveNormalizedIncome",id:"getreservenormalizedincome-1",level:3},{value:"getReserveNormalizedVariableDebt",id:"getreservenormalizedvariabledebt-1",level:3},{value:"getReserveData",id:"getreservedata-3",level:3},{value:"finalizeTransfer",id:"finalizetransfer-1",level:3},{value:"getReservesList",id:"getreserveslist-1",level:3},{value:"getAddressesProvider",id:"getaddressesprovider-1",level:3},{value:"setPause",id:"setpause-1",level:3},{value:"paused",id:"paused-3",level:3},{value:"IStableDebtToken",id:"istabledebttoken-1",level:2},{value:"Mint",id:"mint-13",level:3},{value:"Burn",id:"burn-5",level:3},{value:"approveDelegation",id:"approvedelegation-1",level:3},{value:"borrowAllowance",id:"borrowallowance-1",level:3},{value:"mint",id:"mint-14",level:3},{value:"burn",id:"burn-6",level:3},{value:"getAverageStableRate",id:"getaveragestablerate-1",level:3},{value:"getUserStableRate",id:"getuserstablerate-1",level:3},{value:"getUserLastUpdated",id:"getuserlastupdated-1",level:3},{value:"getSupplyData",id:"getsupplydata-1",level:3},{value:"getTotalSupplyLastUpdated",id:"gettotalsupplylastupdated-1",level:3},{value:"getTotalSupplyAndAvgRate",id:"gettotalsupplyandavgrate-1",level:3},{value:"principalBalanceOf",id:"principalbalanceof-1",level:3},{value:"IDynamicPricing",id:"idynamicpricing-1",level:2},{value:"DynamicPricingState",id:"dynamicpricingstate-1",level:3},{value:"getPricingType",id:"getpricingtype-4",level:3},{value:"getPrice",id:"getprice-2",level:3},{value:"getTokenAddress",id:"gettokenaddress-2",level:3},{value:"getStatus",id:"getstatus-2",level:3},{value:"canBePurchased",id:"canbepurchased-2",level:3},{value:"withdraw",id:"withdraw-7",level:3},{value:"IList",id:"ilist-1",level:2},{value:"has",id:"has-8",level:3},{value:"has",id:"has-9",level:3},{value:"IRoyaltyScheme",id:"iroyaltyscheme-1",level:2},{value:"check",id:"check-3",level:3},{value:"ISecretStore",id:"isecretstore-1",level:2},{value:"checkPermissions",id:"checkpermissions-5",level:3},{value:"ISecretStorePermission",id:"isecretstorepermission-1",level:2},{value:"grantPermission",id:"grantpermission-6",level:3},{value:"renouncePermission",id:"renouncepermission-3",level:3},{value:"IWETHGateway",id:"iwethgateway-1",level:2},{value:"depositETH",id:"depositeth-1",level:3},{value:"withdrawETH",id:"withdraweth-1",level:3},{value:"repayETH",id:"repayeth-1",level:3},{value:"borrowETH",id:"borroweth-1",level:3},{value:"DataTypes",id:"datatypes-1",level:2},{value:"ReserveData",id:"reservedata-1",level:3},{value:"ReserveConfigurationMap",id:"reserveconfigurationmap-1",level:3},{value:"UserConfigurationMap",id:"userconfigurationmap-1",level:3},{value:"InterestRateMode",id:"interestratemode-1",level:3},{value:"SafeMath",id:"safemath-1",level:2},{value:"add",id:"add-9",level:3},{value:"sub",id:"sub-2",level:3},{value:"sub",id:"sub-3",level:3},{value:"mul",id:"mul-1",level:3},{value:"div",id:"div-2",level:3},{value:"div",id:"div-3",level:3},{value:"mod",id:"mod-2",level:3},{value:"mod",id:"mod-3",level:3},{value:"Address",id:"address-1",level:2},{value:"isContract",id:"iscontract-3",level:3},{value:"sendValue",id:"sendvalue-1",level:3},{value:"SafeERC20",id:"safeerc20-1",level:2},{value:"safeTransfer",id:"safetransfer-1",level:3},{value:"safeTransferFrom",id:"safetransferfrom-1",level:3},{value:"safeApprove",id:"safeapprove-1",level:3},{value:"callOptionalReturn",id:"calloptionalreturn-1",level:3},{value:"CloneFactory",id:"clonefactory-1",level:2},{value:"createClone",id:"createclone-1",level:3},{value:"isClone",id:"isclone-1",level:3},{value:"EpochLibrary",id:"epochlibrary-1",level:2},{value:"Epoch",id:"epoch-2",level:3},{value:"EpochList",id:"epochlist-4",level:3},{value:"create",id:"create-8",level:3},{value:"isTimedOut",id:"istimedout-1",level:3},{value:"isTimeLocked",id:"istimelocked-1",level:3},{value:"getEpochTimeOut",id:"getepochtimeout-1",level:3},{value:"getEpochTimeLock",id:"getepochtimelock-1",level:3},{value:"HashListLibrary",id:"hashlistlibrary-1",level:2},{value:"List",id:"list-1",level:3},{value:"onlyListOwner",id:"onlylistowner-1",level:3},{value:"add",id:"add-10",level:3},{value:"add",id:"add-11",level:3},{value:"update",id:"update-6",level:3},{value:"remove",id:"remove-4",level:3},{value:"get",id:"get-4",level:3},{value:"index",id:"index-4",level:3},{value:"setOwner",id:"setowner-1",level:3},{value:"indexOf",id:"indexof-4",level:3},{value:"isIndexed",id:"isindexed-4",level:3},{value:"all",id:"all-4",level:3},{value:"has",id:"has-10",level:3},{value:"size",id:"size-4",level:3},{value:"ownedBy",id:"ownedby-4",level:3},{value:"_index",id:"_index-1",level:3},{value:"AbstractAuction",id:"abstractauction-1",level:2},{value:"AUCTION_MANAGER_ROLE",id:"auction_manager_role-1",level:3},{value:"NVM_AGREEMENT_ROLE",id:"nvm_agreement_role-1",level:3},{value:"Auction",id:"auction-1",level:3},{value:"auctions",id:"auctions-1",level:3},{value:"auctionBids",id:"auctionbids-1",level:3},{value:"AuctionCreated",id:"auctioncreated-1",level:3},{value:"AuctionChangedState",id:"auctionchangedstate-1",level:3},{value:"AuctionBidReceived",id:"auctionbidreceived-1",level:3},{value:"AuctionWithdrawal",id:"auctionwithdrawal-1",level:3},{value:"receive",id:"receive-7",level:3},{value:"abortAuction",id:"abortauction-1",level:3},{value:"withdraw",id:"withdraw-8",level:3},{value:"getPricingType",id:"getpricingtype-5",level:3},{value:"getPrice",id:"getprice-3",level:3},{value:"getTokenAddress",id:"gettokenaddress-3",level:3},{value:"getStatus",id:"getstatus-3",level:3},{value:"canBePurchased",id:"canbepurchased-3",level:3},{value:"addNVMAgreementRole",id:"addnvmagreementrole-1",level:3},{value:"onlyCreator",id:"onlycreator-1",level:3},{value:"onlyCreatorOrAdmin",id:"onlycreatororadmin-1",level:3},{value:"onlyNotCreator",id:"onlynotcreator-1",level:3},{value:"onlyAfterStart",id:"onlyafterstart-1",level:3},{value:"onlyBeforeStarts",id:"onlybeforestarts-1",level:3},{value:"onlyBeforeEnd",id:"onlybeforeend-1",level:3},{value:"onlyNotAbortedOrFinished",id:"onlynotabortedorfinished-1",level:3},{value:"onlyAbortedOrFinished",id:"onlyabortedorfinished-1",level:3},{value:"onlyNotAborted",id:"onlynotaborted-1",level:3},{value:"onlyFinishedOrAborted",id:"onlyfinishedoraborted-1",level:3},{value:"DutchAuction",id:"dutchauction-1",level:2},{value:"initialize",id:"initialize-90",level:3},{value:"create",id:"create-9",level:3},{value:"placeNativeTokenBid",id:"placenativetokenbid-2",level:3},{value:"placeERC20Bid",id:"placeerc20bid-2",level:3},{value:"withdraw",id:"withdraw-9",level:3},{value:"getPricingType",id:"getpricingtype-6",level:3},{value:"EnglishAuction",id:"englishauction-1",level:2},{value:"initialize",id:"initialize-91",level:3},{value:"create",id:"create-10",level:3},{value:"placeNativeTokenBid",id:"placenativetokenbid-3",level:3},{value:"placeERC20Bid",id:"placeerc20bid-3",level:3},{value:"getPricingType",id:"getpricingtype-7",level:3},{value:"DIDFactory",id:"didfactory-1",level:2},{value:"didRegisterList",id:"didregisterlist-3",level:3},{value:"didPermissions",id:"didpermissions-1",level:3},{value:"manager",id:"manager-1",level:3},{value:"onlyDIDOwner",id:"onlydidowner-1",level:3},{value:"onlyManager",id:"onlymanager-1",level:3},{value:"onlyOwnerProviderOrDelegated",id:"onlyownerproviderordelegated-1",level:3},{value:"onlyValidAttributes",id:"onlyvalidattributes-1",level:3},{value:"nftIsInitialized",id:"nftisinitialized-1",level:3},{value:"nft721IsInitialized",id:"nft721isinitialized-1",level:3},{value:"DIDAttributeRegistered",id:"didattributeregistered-1",level:3},{value:"DIDProviderRemoved",id:"didproviderremoved-1",level:3},{value:"DIDProviderAdded",id:"didprovideradded-1",level:3},{value:"DIDOwnershipTransferred",id:"didownershiptransferred-1",level:3},{value:"DIDPermissionGranted",id:"didpermissiongranted-1",level:3},{value:"DIDPermissionRevoked",id:"didpermissionrevoked-1",level:3},{value:"DIDProvenanceDelegateRemoved",id:"didprovenancedelegateremoved-1",level:3},{value:"DIDProvenanceDelegateAdded",id:"didprovenancedelegateadded-1",level:3},{value:"setManager",id:"setmanager-1",level:3},{value:"registerAttribute",id:"registerattribute-3",level:3},{value:"registerDID",id:"registerdid-1",level:3},{value:"hashDID",id:"hashdid-1",level:3},{value:"areRoyaltiesValid",id:"areroyaltiesvalid-3",level:3},{value:"wasGeneratedBy",id:"wasgeneratedby-2",level:3},{value:"used",id:"used-3",level:3},{value:"wasDerivedFrom",id:"wasderivedfrom-2",level:3},{value:"wasAssociatedWith",id:"wasassociatedwith-2",level:3},{value:"actedOnBehalf",id:"actedonbehalf-2",level:3},{value:"addDIDProvider",id:"adddidprovider-1",level:3},{value:"removeDIDProvider",id:"removedidprovider-1",level:3},{value:"addDIDProvenanceDelegate",id:"adddidprovenancedelegate-1",level:3},{value:"removeDIDProvenanceDelegate",id:"removedidprovenancedelegate-1",level:3},{value:"transferDIDOwnership",id:"transferdidownership-1",level:3},{value:"transferDIDOwnershipManaged",id:"transferdidownershipmanaged-1",level:3},{value:"_transferDIDOwnership",id:"_transferdidownership-1",level:3},{value:"grantPermission",id:"grantpermission-7",level:3},{value:"revokePermission",id:"revokepermission-1",level:3},{value:"getPermission",id:"getpermission-1",level:3},{value:"isDIDProvider",id:"isdidprovider-1",level:3},{value:"isDIDProviderOrOwner",id:"isdidproviderorowner-1",level:3},{value:"getDIDRegister",id:"getdidregister-1",level:3},{value:"getDIDSupply",id:"getdidsupply-1",level:3},{value:"getBlockNumberUpdated",id:"getblocknumberupdated-1",level:3},{value:"getDIDOwner",id:"getdidowner-1",level:3},{value:"getDIDRoyaltyRecipient",id:"getdidroyaltyrecipient-1",level:3},{value:"getDIDRoyaltyScheme",id:"getdidroyaltyscheme-1",level:3},{value:"getDIDCreator",id:"getdidcreator-1",level:3},{value:"_grantPermission",id:"_grantpermission-1",level:3},{value:"_revokePermission",id:"_revokepermission-1",level:3},{value:"_getPermission",id:"_getpermission-1",level:3},{value:"getProvenanceEntry",id:"getprovenanceentry-1",level:3},{value:"isDIDOwner",id:"isdidowner-1",level:3},{value:"isOwnerProviderOrDelegate",id:"isownerproviderordelegate-1",level:3},{value:"isProvenanceDelegate",id:"isprovenancedelegate-1",level:3},{value:"getProvenanceOwner",id:"getprovenanceowner-1",level:3},{value:"DIDRegistry",id:"didregistry-26",level:2},{value:"erc1155",id:"erc1155-7",level:3},{value:"erc721",id:"erc721-3",level:3},{value:"royaltiesCheckers",id:"royaltiescheckers-1",level:3},{value:"initialize",id:"initialize-92",level:3},{value:"registerRoyaltiesChecker",id:"registerroyaltieschecker-1",level:3},{value:"DIDRoyaltiesAdded",id:"didroyaltiesadded-1",level:3},{value:"DIDRoyaltyRecipientChanged",id:"didroyaltyrecipientchanged-1",level:3},{value:"setDIDRoyalties",id:"setdidroyalties-1",level:3},{value:"setDIDRoyaltyRecipient",id:"setdidroyaltyrecipient-1",level:3},{value:"registerMintableDID",id:"registermintabledid-2",level:3},{value:"registerMintableDID721",id:"registermintabledid721-1",level:3},{value:"registerMintableDID",id:"registermintabledid-3",level:3},{value:"enableAndMintDidNft",id:"enableandmintdidnft-1",level:3},{value:"enableAndMintDidNft721",id:"enableandmintdidnft721-1",level:3},{value:"mint",id:"mint-15",level:3},{value:"mint",id:"mint-16",level:3},{value:"mint721",id:"mint721-2",level:3},{value:"mint721",id:"mint721-3",level:3},{value:"burn",id:"burn-7",level:3},{value:"burn721",id:"burn721-1",level:3},{value:"DIDRegistryLibrary",id:"didregistrylibrary-1",level:2},{value:"DIDRegister",id:"didregister-2",level:3},{value:"DIDRegisterList",id:"didregisterlist-4",level:3},{value:"update",id:"update-7",level:3},{value:"initializeNftConfig",id:"initializenftconfig-2",level:3},{value:"initializeNft721Config",id:"initializenft721config-2",level:3},{value:"areRoyaltiesValid",id:"areroyaltiesvalid-4",level:3},{value:"addProvider",id:"addprovider-1",level:3},{value:"removeProvider",id:"removeprovider-1",level:3},{value:"updateDIDOwner",id:"updatedidowner-2",level:3},{value:"isProvider",id:"isprovider-1",level:3},{value:"getProviderIndex",id:"getproviderindex-1",level:3},{value:"addDelegate",id:"adddelegate-1",level:3},{value:"removeDelegate",id:"removedelegate-1",level:3},{value:"isDelegate",id:"isdelegate-1",level:3},{value:"getDelegateIndex",id:"getdelegateindex-1",level:3},{value:"ProvenanceRegistry",id:"provenanceregistry-2",level:2},{value:"__ProvenanceRegistry_init",id:"__provenanceregistry_init-1",level:3},{value:"__ProvenanceRegistry_init_unchained",id:"__provenanceregistry_init_unchained-1",level:3},{value:"Provenance",id:"provenance-1",level:3},{value:"ProvenanceRegistryList",id:"provenanceregistrylist-1",level:3},{value:"provenanceRegistry",id:"provenanceregistry-3",level:3},{value:"ProvenanceMethod",id:"provenancemethod-1",level:3},{value:"ProvenanceAttributeRegistered",id:"provenanceattributeregistered-1",level:3},{value:"WasGeneratedBy",id:"wasgeneratedby-3",level:3},{value:"Used",id:"used-4",level:3},{value:"WasDerivedFrom",id:"wasderivedfrom-3",level:3},{value:"WasAssociatedWith",id:"wasassociatedwith-3",level:3},{value:"ActedOnBehalf",id:"actedonbehalf-3",level:3},{value:"createProvenanceEntry",id:"createprovenanceentry-1",level:3},{value:"_wasGeneratedBy",id:"_wasgeneratedby-1",level:3},{value:"_used",id:"_used-1",level:3},{value:"_wasDerivedFrom",id:"_wasderivedfrom-1",level:3},{value:"_wasAssociatedWith",id:"_wasassociatedwith-1",level:3},{value:"_actedOnBehalf",id:"_actedonbehalf-1",level:3},{value:"CurveRoyalties",id:"curveroyalties-1",level:2},{value:"registry",id:"registry-3",level:3},{value:"DENOMINATOR",id:"denominator-2",level:3},{value:"royalties",id:"royalties-2",level:3},{value:"initialize",id:"initialize-93",level:3},{value:"royaltyCurve",id:"royaltycurve-1",level:3},{value:"setRoyalty",id:"setroyalty-2",level:3},{value:"check",id:"check-4",level:3},{value:"RewardsDistributor",id:"rewardsdistributor-1",level:2},{value:"used",id:"used-5",level:3},{value:"receivers",id:"receivers-1",level:3},{value:"registry",id:"registry-4",level:3},{value:"conditionStoreManager",id:"conditionstoremanager-7",level:3},{value:"escrow",id:"escrow-1",level:3},{value:"initialize",id:"initialize-94",level:3},{value:"setReceivers",id:"setreceivers-1",level:3},{value:"claimReward",id:"claimreward-1",level:3},{value:"StandardRoyalties",id:"standardroyalties-1",level:2},{value:"registry",id:"registry-5",level:3},{value:"DENOMINATOR",id:"denominator-3",level:3},{value:"royalties",id:"royalties-3",level:3},{value:"initialize",id:"initialize-95",level:3},{value:"setRoyalty",id:"setroyalty-3",level:3},{value:"check",id:"check-5",level:3},{value:"AaveCreditTemplate",id:"aavecredittemplate-1",level:2},{value:"didRegistry",id:"didregistry-27",level:3},{value:"nftLockCondition",id:"nftlockcondition-3",level:3},{value:"depositCondition",id:"depositcondition-1",level:3},{value:"borrowCondition",id:"borrowcondition-1",level:3},{value:"repayCondition",id:"repaycondition-1",level:3},{value:"transferCondition",id:"transfercondition-4",level:3},{value:"withdrawCondition",id:"withdrawcondition-1",level:3},{value:"vaultAddress",id:"vaultaddress-1",level:3},{value:"nvmFee",id:"nvmfee-3",level:3},{value:"vaultLibrary",id:"vaultlibrary-1",level:3},{value:"VaultCreated",id:"vaultcreated-1",level:3},{value:"initialize",id:"initialize-96",level:3},{value:"createVaultAgreement",id:"createvaultagreement-1",level:3},{value:"createAgreement",id:"createagreement-6",level:3},{value:"deployVault",id:"deployvault-1",level:3},{value:"getVaultForAgreement",id:"getvaultforagreement-1",level:3},{value:"updateNVMFee",id:"updatenvmfee-1",level:3},{value:"changeCreditVaultLibrary",id:"changecreditvaultlibrary-1",level:3},{value:"AccessProofTemplate",id:"accessprooftemplate-1",level:2},{value:"didRegistry",id:"didregistry-28",level:3},{value:"accessCondition",id:"accesscondition-8",level:3},{value:"lockCondition",id:"lockcondition-2",level:3},{value:"escrowReward",id:"escrowreward-2",level:3},{value:"initialize",id:"initialize-97",level:3},{value:"AccessTemplate",id:"accesstemplate-1",level:2},{value:"didRegistry",id:"didregistry-29",level:3},{value:"accessCondition",id:"accesscondition-9",level:3},{value:"lockCondition",id:"lockcondition-3",level:3},{value:"escrowReward",id:"escrowreward-3",level:3},{value:"initialize",id:"initialize-98",level:3},{value:"AgreementTemplate",id:"agreementtemplate-1",level:2},{value:"conditionTypes",id:"conditiontypes-1",level:3},{value:"agreementStoreManager",id:"agreementstoremanager-9",level:3},{value:"createAgreement",id:"createagreement-7",level:3},{value:"createAgreementAndPay",id:"createagreementandpay-3",level:3},{value:"createAgreementAndFulfill",id:"createagreementandfulfill-4",level:3},{value:"getConditionTypes",id:"getconditiontypes-3",level:3},{value:"BaseEscrowTemplate",id:"baseescrowtemplate-1",level:2},{value:"agreementData",id:"agreementdata-2",level:3},{value:"AgreementCreated",id:"agreementcreated-1",level:3},{value:"AgreementDataModel",id:"agreementdatamodel-1",level:3},{value:"AgreementData",id:"agreementdata-3",level:3},{value:"createAgreement",id:"createagreement-8",level:3},{value:"createAgreementAndPayEscrow",id:"createagreementandpayescrow-1",level:3},{value:"createAgreementAndFulfill",id:"createagreementandfulfill-5",level:3},{value:"_makeIds",id:"_makeids-1",level:3},{value:"_initAgreement",id:"_initagreement-1",level:3},{value:"getAgreementData",id:"getagreementdata-1",level:3},{value:"DIDSalesTemplate",id:"didsalestemplate-1",level:2},{value:"didRegistry",id:"didregistry-30",level:3},{value:"lockPaymentCondition",id:"lockpaymentcondition-7",level:3},{value:"transferCondition",id:"transfercondition-5",level:3},{value:"rewardCondition",id:"rewardcondition-4",level:3},{value:"id",id:"id-3",level:3},{value:"initialize",id:"initialize-99",level:3},{value:"DynamicAccessTemplate",id:"dynamicaccesstemplate-1",level:2},{value:"didRegistry",id:"didregistry-31",level:3},{value:"templateConfig",id:"templateconfig-1",level:3},{value:"TemplateConditions",id:"templateconditions-1",level:3},{value:"initialize",id:"initialize-100",level:3},{value:"addTemplateCondition",id:"addtemplatecondition-1",level:3},{value:"removeLastTemplateCondition",id:"removelasttemplatecondition-1",level:3},{value:"EscrowComputeExecutionTemplate",id:"escrowcomputeexecutiontemplate-1",level:2},{value:"didRegistry",id:"didregistry-32",level:3},{value:"computeExecutionCondition",id:"computeexecutioncondition-3",level:3},{value:"lockPaymentCondition",id:"lockpaymentcondition-8",level:3},{value:"escrowPayment",id:"escrowpayment-1",level:3},{value:"initialize",id:"initialize-101",level:3},{value:"name",id:"name-1",level:3},{value:"NFT721AccessProofTemplate",id:"nft721accessprooftemplate-1",level:2},{value:"NFT721AccessSwapTemplate",id:"nft721accessswaptemplate-1",level:2},{value:"NFT721AccessTemplate",id:"nft721accesstemplate-1",level:2},{value:"NFT721SalesTemplate",id:"nft721salestemplate-1",level:2},{value:"NFT721SalesWithAccessTemplate",id:"nft721saleswithaccesstemplate-1",level:2},{value:"NFTAccessProofTemplate",id:"nftaccessprooftemplate-1",level:2},{value:"didRegistry",id:"didregistry-33",level:3},{value:"nftHolderCondition",id:"nftholdercondition-4",level:3},{value:"accessCondition",id:"accesscondition-10",level:3},{value:"initialize",id:"initialize-102",level:3},{value:"NFTAccessSwapTemplate",id:"nftaccessswaptemplate-1",level:2},{value:"didRegistry",id:"didregistry-34",level:3},{value:"lockPaymentCondition",id:"lockpaymentcondition-9",level:3},{value:"rewardCondition",id:"rewardcondition-5",level:3},{value:"accessCondition",id:"accesscondition-11",level:3},{value:"id",id:"id-4",level:3},{value:"initialize",id:"initialize-103",level:3},{value:"NFTAccessTemplate",id:"nftaccesstemplate-1",level:2},{value:"didRegistry",id:"didregistry-35",level:3},{value:"nftHolderCondition",id:"nftholdercondition-5",level:3},{value:"accessCondition",id:"accesscondition-12",level:3},{value:"initialize",id:"initialize-104",level:3},{value:"NFTSalesTemplate",id:"nftsalestemplate-1",level:2},{value:"didRegistry",id:"didregistry-36",level:3},{value:"lockPaymentCondition",id:"lockpaymentcondition-10",level:3},{value:"transferCondition",id:"transfercondition-6",level:3},{value:"rewardCondition",id:"rewardcondition-6",level:3},{value:"id",id:"id-5",level:3},{value:"initialize",id:"initialize-105",level:3},{value:"nftPrice",id:"nftprice-1",level:3},{value:"nftSale",id:"nftsale-1",level:3},{value:"checkParamsTransfer",id:"checkparamstransfer-1",level:3},{value:"checkParamsEscrow",id:"checkparamsescrow-1",level:3},{value:"createAgreementFulfill",id:"createagreementfulfill-1",level:3},{value:"NFTSalesWithAccessTemplate",id:"nftsaleswithaccesstemplate-1",level:2},{value:"didRegistry",id:"didregistry-37",level:3},{value:"lockPaymentCondition",id:"lockpaymentcondition-11",level:3},{value:"transferCondition",id:"transfercondition-7",level:3},{value:"rewardCondition",id:"rewardcondition-7",level:3},{value:"accessCondition",id:"accesscondition-13",level:3},{value:"initialize",id:"initialize-106",level:3},{value:"TemplateStoreLibrary",id:"templatestorelibrary-1",level:2},{value:"TemplateState",id:"templatestate-1",level:3},{value:"Template",id:"template-3",level:3},{value:"TemplateList",id:"templatelist-2",level:3},{value:"propose",id:"propose-1",level:3},{value:"approve",id:"approve-3",level:3},{value:"revoke",id:"revoke-1",level:3},{value:"TemplateStoreManager",id:"templatestoremanager-3",level:2},{value:"templateList",id:"templatelist-3",level:3},{value:"onlyOwnerOrTemplateOwner",id:"onlyownerortemplateowner-1",level:3},{value:"initialize",id:"initialize-107",level:3},{value:"proposeTemplate",id:"proposetemplate-2",level:3},{value:"approveTemplate",id:"approvetemplate-1",level:3},{value:"revokeTemplate",id:"revoketemplate-1",level:3},{value:"getTemplate",id:"gettemplate-1",level:3},{value:"getTemplateListSize",id:"gettemplatelistsize-2",level:3},{value:"isTemplateApproved",id:"istemplateapproved-1",level:3},{value:"AgreementStoreManagerChangeFunctionSignature",id:"agreementstoremanagerchangefunctionsignature-1",level:2},{value:"createAgreement",id:"createagreement-9",level:3},{value:"AgreementStoreManagerChangeInStorage",id:"agreementstoremanagerchangeinstorage-1",level:2},{value:"agreementCount",id:"agreementcount-1",level:3},{value:"AgreementStoreManagerChangeInStorageAndLogic",id:"agreementstoremanagerchangeinstorageandlogic-1",level:2},{value:"AgreementStoreManagerExtraFunctionality",id:"agreementstoremanagerextrafunctionality-1",level:2},{value:"dummyFunction",id:"dummyfunction-3",level:3},{value:"AgreementStoreManagerWithBug",id:"agreementstoremanagerwithbug-1",level:2},{value:"getDIDRegistryAddress",id:"getdidregistryaddress-3",level:3},{value:"ConditionStoreChangeFunctionSignature",id:"conditionstorechangefunctionsignature-1",level:2},{value:"createCondition",id:"createcondition-5",level:3},{value:"ConditionStoreChangeInStorage",id:"conditionstorechangeinstorage-1",level:2},{value:"conditionCount",id:"conditioncount-1",level:3},{value:"ConditionStoreChangeInStorageAndLogic",id:"conditionstorechangeinstorageandlogic-1",level:2},{value:"ConditionStoreExtraFunctionality",id:"conditionstoreextrafunctionality-1",level:2},{value:"dummyFunction",id:"dummyfunction-4",level:3},{value:"ConditionStoreWithBug",id:"conditionstorewithbug-1",level:2},{value:"getConditionState",id:"getconditionstate-3",level:3},{value:"DIDRegistryChangeFunctionSignature",id:"didregistrychangefunctionsignature-1",level:2},{value:"registerAttribute",id:"registerattribute-4",level:3},{value:"DIDRegistryChangeInStorage",id:"didregistrychangeinstorage-1",level:2},{value:"timeOfRegister",id:"timeofregister-1",level:3},{value:"DIDRegistryChangeInStorageAndLogic",id:"didregistrychangeinstorageandlogic-1",level:2},{value:"DIDRegistryExtraFunctionality",id:"didregistryextrafunctionality-1",level:2},{value:"getNumber",id:"getnumber-1",level:3},{value:"DIDRegistryWithBug",id:"didregistrywithbug-1",level:2},{value:"registerAttribute",id:"registerattribute-5",level:3},{value:"IPNFT",id:"ipnft-1",level:2},{value:"TokenURIChanged",id:"tokenurichanged-1",level:3},{value:"initialize",id:"initialize-108",level:3},{value:"setTokenURI",id:"settokenuri-1",level:3},{value:"mint",id:"mint-17",level:3},{value:"mintWithoutTokenURI",id:"mintwithouttokenuri-1",level:3},{value:"transfer",id:"transfer-5",level:3},{value:"NeverminedConfigChangeInStorage",id:"neverminedconfigchangeinstorage-1",level:2},{value:"newVariable",id:"newvariable-1",level:3},{value:"NeverminedConfigChangeFunctionSignature",id:"neverminedconfigchangefunctionsignature-1",level:2},{value:"setMarketplaceFees",id:"setmarketplacefees-6",level:3},{value:"NeverminedConfigChangeInStorageAndLogic",id:"neverminedconfigchangeinstorageandlogic-1",level:2},{value:"NeverminedConfigWithBug",id:"neverminedconfigwithbug-1",level:2},{value:"setMarketplaceFees",id:"setmarketplacefees-7",level:3},{value:"TemplateStoreChangeFunctionSignature",id:"templatestorechangefunctionsignature-1",level:2},{value:"proposeTemplate",id:"proposetemplate-3",level:3},{value:"TemplateStoreChangeInStorage",id:"templatestorechangeinstorage-1",level:2},{value:"templateCount",id:"templatecount-1",level:3},{value:"TemplateStoreChangeInStorageAndLogic",id:"templatestorechangeinstorageandlogic-1",level:2},{value:"TemplateStoreExtraFunctionality",id:"templatestoreextrafunctionality-1",level:2},{value:"dummyFunction",id:"dummyfunction-5",level:3},{value:"TemplateStoreWithBug",id:"templatestorewithbug-1",level:2},{value:"getTemplateListSize",id:"gettemplatelistsize-3",level:3},{value:"TestERC721",id:"testerc721-1",level:2},{value:"initialize",id:"initialize-109",level:3},{value:"mint",id:"mint-18",level:3},{value:"DIDRegistryLibraryProxy",id:"didregistrylibraryproxy-1",level:2},{value:"didRegister",id:"didregister-3",level:3},{value:"didRegisterList",id:"didregisterlist-5",level:3},{value:"areRoyaltiesValid",id:"areroyaltiesvalid-5",level:3},{value:"updateDIDOwner",id:"updatedidowner-3",level:3},{value:"update",id:"update-8",level:3},{value:"initializeNftConfig",id:"initializenftconfig-3",level:3},{value:"initializeNft721Config",id:"initializenft721config-3",level:3},{value:"getDIDInfo",id:"getdidinfo-1",level:3},{value:"EpochLibraryProxy",id:"epochlibraryproxy-1",level:2},{value:"epoch",id:"epoch-3",level:3},{value:"epochList",id:"epochlist-5",level:3},{value:"create",id:"create-11",level:3},{value:"HashListLibraryProxy",id:"hashlistlibraryproxy-1",level:2},{value:"testData",id:"testdata-1",level:3},{value:"initialize",id:"initialize-110",level:3},{value:"hash",id:"hash-3",level:3},{value:"add",id:"add-12",level:3},{value:"add",id:"add-13",level:3},{value:"update",id:"update-9",level:3},{value:"index",id:"index-5",level:3},{value:"has",id:"has-11",level:3},{value:"remove",id:"remove-5",level:3},{value:"get",id:"get-5",level:3},{value:"size",id:"size-5",level:3},{value:"all",id:"all-5",level:3},{value:"indexOf",id:"indexof-5",level:3},{value:"ownedBy",id:"ownedby-5",level:3},{value:"isIndexed",id:"isindexed-5",level:3},{value:"NFTBase",id:"nftbase-1",level:2},{value:"_proxyApprovals",id:"_proxyapprovals-1",level:3},{value:"MINTER_ROLE",id:"minter_role-1",level:3},{value:"RoyaltyInfo",id:"royaltyinfo-2",level:3},{value:"NFTMetadata",id:"nftmetadata-1",level:3},{value:"_royalties",id:"_royalties-1",level:3},{value:"_metadata",id:"_metadata-1",level:3},{value:"_expiration",id:"_expiration-1",level:3},{value:"ProxyApproval",id:"proxyapproval-1",level:3},{value:"setProxyApproval",id:"setproxyapproval-1",level:3},{value:"_setNFTMetadata",id:"_setnftmetadata-1",level:3},{value:"_setTokenRoyalty",id:"_settokenroyalty-1",level:3},{value:"royaltyInfo",id:"royaltyinfo-3",level:3},{value:"NFTUpgradeable",id:"nftupgradeable-1",level:2},{value:"initialize",id:"initialize-111",level:3},{value:"isApprovedForAll",id:"isapprovedforall-3",level:3},{value:"mint",id:"mint-19",level:3},{value:"burn",id:"burn-8",level:3},{value:"addMinter",id:"addminter-2",level:3},{value:"uri",id:"uri-1",level:3},{value:"setNFTMetadata",id:"setnftmetadata-2",level:3},{value:"setTokenRoyalty",id:"settokenroyalty-2",level:3},{value:"supportsInterface",id:"supportsinterface-7",level:3},{value:"NFT721SubscriptionUpgradeable",id:"nft721subscriptionupgradeable-1",level:2},{value:"mint",id:"mint-20",level:3},{value:"balanceOf",id:"balanceof-3",level:3},{value:"NFT721Upgradeable",id:"nft721upgradeable-1",level:2},{value:"initializeWithName",id:"initializewithname",level:3},{value:"initialize",id:"initialize-112",level:3},{value:"isApprovedForAll",id:"isapprovedforall-4",level:3},{value:"addMinter",id:"addminter-3",level:3},{value:"mint",id:"mint-21",level:3},{value:"burn",id:"burn-9",level:3},{value:"tokenURI",id:"tokenuri-2",level:3},{value:"setNFTMetadata",id:"setnftmetadata-3",level:3},{value:"setTokenRoyalty",id:"settokenroyalty-3",level:3},{value:"supportsInterface",id:"supportsinterface-8",level:3},{value:"POAPUpgradeable",id:"poapupgradeable-1",level:2},{value:"_tokenIdCounter",id:"_tokenidcounter-1",level:3},{value:"_tokenEvent",id:"_tokenevent-1",level:3},{value:"initialize",id:"initialize-113",level:3},{value:"initializeWithName",id:"initializewithname-1",level:3},{value:"mint",id:"mint-22",level:3},{value:"mint",id:"mint-23",level:3},{value:"tokenEvent",id:"tokenevent-1",level:3},{value:"_beforeTokenTransfer",id:"_beforetokentransfer-3",level:3},{value:"_burn",id:"_burn-1",level:3},{value:"tokenDetailsOfOwner",id:"tokendetailsofowner-1",level:3},{value:"tokenURI",id:"tokenuri-3",level:3},{value:"isApprovedForAll",id:"isapprovedforall-5",level:3},{value:"supportsInterface",id:"supportsinterface-9",level:3},{value:"TestDisputeManager",id:"testdisputemanager-1",level:2},{value:"accept",id:"accept-1",level:3},{value:"accepted",id:"accepted-1",level:3},{value:"setAccepted",id:"setaccepted-1",level:3},{value:"PlonkVerifier",id:"plonkverifier-1",level:2},{value:"n",id:"n-1",level:3},{value:"nPublic",id:"npublic-1",level:3},{value:"nLagrange",id:"nlagrange-1",level:3},{value:"Qmx",id:"qmx-1",level:3},{value:"Qmy",id:"qmy-1",level:3},{value:"Qlx",id:"qlx-1",level:3},{value:"Qly",id:"qly-1",level:3},{value:"Qrx",id:"qrx-1",level:3},{value:"Qry",id:"qry-1",level:3},{value:"Qox",id:"qox-1",level:3},{value:"Qoy",id:"qoy-1",level:3},{value:"Qcx",id:"qcx-1",level:3},{value:"Qcy",id:"qcy-1",level:3},{value:"S1x",id:"s1x-1",level:3},{value:"S1y",id:"s1y-1",level:3},{value:"S2x",id:"s2x-1",level:3},{value:"S2y",id:"s2y-1",level:3},{value:"S3x",id:"s3x-1",level:3},{value:"S3y",id:"s3y-1",level:3},{value:"k1",id:"k1-1",level:3},{value:"k2",id:"k2-1",level:3},{value:"X2x1",id:"x2x1-1",level:3},{value:"X2x2",id:"x2x2-1",level:3},{value:"X2y1",id:"x2y1-1",level:3},{value:"X2y2",id:"x2y2-1",level:3},{value:"q",id:"q-1",level:3},{value:"qf",id:"qf-1",level:3},{value:"w1",id:"w1-1",level:3},{value:"G1x",id:"g1x-1",level:3},{value:"G1y",id:"g1y-1",level:3},{value:"G2x1",id:"g2x1-1",level:3},{value:"G2x2",id:"g2x2-1",level:3},{value:"G2y1",id:"g2y1-1",level:3},{value:"G2y2",id:"g2y2-1",level:3},{value:"pA",id:"pa-1",level:3},{value:"pB",id:"pb-1",level:3},{value:"pC",id:"pc-1",level:3},{value:"pZ",id:"pz-1",level:3},{value:"pT1",id:"pt1-1",level:3},{value:"pT2",id:"pt2-1",level:3},{value:"pT3",id:"pt3-1",level:3},{value:"pWxi",id:"pwxi-1",level:3},{value:"pWxiw",id:"pwxiw-1",level:3},{value:"pEval_a",id:"peval_a-1",level:3},{value:"pEval_b",id:"peval_b-1",level:3},{value:"pEval_c",id:"peval_c-1",level:3},{value:"pEval_s1",id:"peval_s1-1",level:3},{value:"pEval_s2",id:"peval_s2-1",level:3},{value:"pEval_zw",id:"peval_zw-1",level:3},{value:"pEval_r",id:"peval_r-1",level:3},{value:"pAlpha",id:"palpha-1",level:3},{value:"pBeta",id:"pbeta-1",level:3},{value:"pGamma",id:"pgamma-1",level:3},{value:"pXi",id:"pxi-1",level:3},{value:"pXin",id:"pxin-1",level:3},{value:"pBetaXi",id:"pbetaxi-1",level:3},{value:"pV1",id:"pv1-1",level:3},{value:"pV2",id:"pv2-1",level:3},{value:"pV3",id:"pv3-1",level:3},{value:"pV4",id:"pv4-1",level:3},{value:"pV5",id:"pv5-1",level:3},{value:"pV6",id:"pv6-1",level:3},{value:"pU",id:"pu-1",level:3},{value:"pPl",id:"ppl-1",level:3},{value:"pEval_t",id:"peval_t-1",level:3},{value:"pA1",id:"pa1-1",level:3},{value:"pB1",id:"pb1-1",level:3},{value:"pZh",id:"pzh-1",level:3},{value:"pZhInv",id:"pzhinv-1",level:3},{value:"pEval_l1",id:"peval_l1-1",level:3},{value:"pEval_l2",id:"peval_l2-1",level:3},{value:"pEval_l3",id:"peval_l3-1",level:3},{value:"pEval_l4",id:"peval_l4-1",level:3},{value:"pEval_l5",id:"peval_l5-1",level:3},{value:"pEval_l6",id:"peval_l6-1",level:3},{value:"pEval_l7",id:"peval_l7-1",level:3},{value:"lastMem",id:"lastmem-1",level:3},{value:"verifyProof",id:"verifyproof-3",level:3}],p={toc:o};function u(t){let{components:e,...a}=t;return(0,l.kt)("wrapper",(0,n.Z)({},p,a,{components:e,mdxType:"MDXLayout"}),(0,l.kt)("h1",{id:"solidity-api"},"Solidity API"),(0,l.kt)("h2",{id:"testdisputemanager"},"TestDisputeManager"),(0,l.kt)("h3",{id:"accept"},"accept"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"mapping(bytes32 => bool) accept\n")),(0,l.kt)("h3",{id:"accepted"},"accepted"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function accepted(address provider, address buyer, bytes32 orig, bytes32 crypted) public view returns (bool)\n")),(0,l.kt)("h3",{id:"setaccepted"},"setAccepted"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function setAccepted(bytes32 orig, bytes32 crypted, address provider, address buyer) public\n")),(0,l.kt)("h2",{id:"common"},"Common"),(0,l.kt)("h3",{id:"getcurrentblocknumber"},"getCurrentBlockNumber"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function getCurrentBlockNumber() external view returns (uint256)\n")),(0,l.kt)("p",null,"getCurrentBlockNumber get block number"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[0]"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"the current block number")))),(0,l.kt)("h3",{id:"iscontract"},"isContract"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function isContract(address addr) public view returns (bool)\n")),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"isContract detect whether the address is\nis a contract address or externally owned account")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[0]"),(0,l.kt)("td",{parentName:"tr",align:null},"bool"),(0,l.kt)("td",{parentName:"tr",align:null},"true if it is a contract address")))),(0,l.kt)("h3",{id:"provenancesignatureiscorrect"},"provenanceSignatureIsCorrect"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function provenanceSignatureIsCorrect(address _agentId, bytes32 _hash, bytes _signature) public pure returns (bool)\n")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_agentId"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"The address of the agent")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_hash"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32 message, the hash is the signed message. What is recovered is the signer address.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_signature"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes"),(0,l.kt)("td",{parentName:"tr",align:null},"Signatures provided by the agent")))),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[0]"),(0,l.kt)("td",{parentName:"tr",align:null},"bool"),(0,l.kt)("td",{parentName:"tr",align:null},"true if the signature correspond to the agent address")))),(0,l.kt)("h3",{id:"calculatetotalamount"},"calculateTotalAmount"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function calculateTotalAmount(uint256[] _amounts) public pure returns (uint256)\n")),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"Sum the total amount given an uint array")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[0]"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"the total amount")))),(0,l.kt)("h3",{id:"addresstobytes32"},"addressToBytes32"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function addressToBytes32(address _addr) public pure returns (bytes32)\n")),(0,l.kt)("h3",{id:"bytes32toaddress"},"bytes32ToAddress"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function bytes32ToAddress(bytes32 _b32) public pure returns (address)\n")),(0,l.kt)("h2",{id:"dispenser"},"Dispenser"),(0,l.kt)("h3",{id:"tokenrequests"},"tokenRequests"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"mapping(address => uint256) tokenRequests\n")),(0,l.kt)("h3",{id:"totalmintamount"},"totalMintAmount"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"uint256 totalMintAmount\n")),(0,l.kt)("h3",{id:"maxamount"},"maxAmount"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"uint256 maxAmount\n")),(0,l.kt)("h3",{id:"maxmintamount"},"maxMintAmount"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"uint256 maxMintAmount\n")),(0,l.kt)("h3",{id:"minperiod"},"minPeriod"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"uint256 minPeriod\n")),(0,l.kt)("h3",{id:"scale"},"scale"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"uint256 scale\n")),(0,l.kt)("h3",{id:"token"},"token"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"contract NeverminedToken token\n")),(0,l.kt)("h3",{id:"requestfrequencyexceeded"},"RequestFrequencyExceeded"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"event RequestFrequencyExceeded(address requester, uint256 minPeriod)\n")),(0,l.kt)("h3",{id:"requestlimitexceeded"},"RequestLimitExceeded"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"event RequestLimitExceeded(address requester, uint256 amount, uint256 maxAmount)\n")),(0,l.kt)("h3",{id:"isvalidaddress"},"isValidAddress"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"modifier isValidAddress(address _address)\n")),(0,l.kt)("h3",{id:"initialize"},"initialize"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function initialize(address _tokenAddress, address _owner) external\n")),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"Dispenser Initializer")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_tokenAddress"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"The deployed contract address of an ERC20")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_owner"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"The owner of the Dispenser Runs only on initial contract creation.")))),(0,l.kt)("h3",{id:"requesttokens"},"requestTokens"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function requestTokens(uint256 amount) external returns (bool tokensTransferred)\n")),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"user can request some tokens for testing")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"amount"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"the amount of tokens to be requested")))),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"tokensTransferred"),(0,l.kt)("td",{parentName:"tr",align:null},"bool"),(0,l.kt)("td",{parentName:"tr",align:null},"Boolean indication of tokens are requested")))),(0,l.kt)("h3",{id:"setminperiod"},"setMinPeriod"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function setMinPeriod(uint256 period) external\n")),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"the Owner can set the min period for token requests")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"period"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"the min amount of time before next request")))),(0,l.kt)("h3",{id:"setmaxamount"},"setMaxAmount"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function setMaxAmount(uint256 amount) external\n")),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"the Owner can set the max amount for token requests")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"amount"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"the max amount of tokens that can be requested")))),(0,l.kt)("h3",{id:"setmaxmintamount"},"setMaxMintAmount"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function setMaxMintAmount(uint256 amount) external\n")),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"the Owner can set the max amount for token requests")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"amount"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"the max amount of tokens that can be requested")))),(0,l.kt)("h2",{id:"hashlists"},"HashLists"),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"Hash lists contract is a sample list contract in which uses\nHashListLibrary.sol in order to store, retrieve, remove, and\nupdate bytes32 values in hash lists.\nThis is a reference implementation for IList interface. It is\nused for whitelisting condition. Any entity can have its own\nimplementation of the interface in which could be used for the\nsame condition.")),(0,l.kt)("h3",{id:"lists"},"lists"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"mapping(bytes32 => struct HashListLibrary.List) lists\n")),(0,l.kt)("h3",{id:"initialize-1"},"initialize"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function initialize(address _owner) public\n")),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"HashLists Initializer")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_owner"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"The owner of the hash list Runs only upon contract creation.")))),(0,l.kt)("h3",{id:"hash"},"hash"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function hash(address account) public pure returns (bytes32)\n")),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"hash ethereum accounts")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"account"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"Ethereum address")))),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[0]"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32 hash of the account")))),(0,l.kt)("h3",{id:"add"},"add"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function add(bytes32[] values) external returns (bool)\n")),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"put an array of elements without indexing\nthis meant to save gas in case of large arrays")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"values"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32[]"),(0,l.kt)("td",{parentName:"tr",align:null},"is an array of elements value")))),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[0]"),(0,l.kt)("td",{parentName:"tr",align:null},"bool"),(0,l.kt)("td",{parentName:"tr",align:null},"true if values are added successfully")))),(0,l.kt)("h3",{id:"add-1"},"add"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function add(bytes32 value) external returns (bool)\n")),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"add indexes an element then adds it to a list")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"value"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"is a bytes32 value")))),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[0]"),(0,l.kt)("td",{parentName:"tr",align:null},"bool"),(0,l.kt)("td",{parentName:"tr",align:null},"true if value is added successfully")))),(0,l.kt)("h3",{id:"update"},"update"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function update(bytes32 oldValue, bytes32 newValue) external returns (bool)\n")),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"update the value with a new value and maintain indices")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"oldValue"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"is an element value in a list")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"newValue"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"new value")))),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[0]"),(0,l.kt)("td",{parentName:"tr",align:null},"bool"),(0,l.kt)("td",{parentName:"tr",align:null},"true if value is updated successfully")))),(0,l.kt)("h3",{id:"index"},"index"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function index(uint256 from, uint256 to) external returns (bool)\n")),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"index is used to map each element value to its index on the list")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"from"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"index is where to 'from' indexing in the list")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"to"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"index is where to stop indexing")))),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[0]"),(0,l.kt)("td",{parentName:"tr",align:null},"bool"),(0,l.kt)("td",{parentName:"tr",align:null},"true if the sub list is indexed")))),(0,l.kt)("h3",{id:"has"},"has"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function has(bytes32 id, bytes32 value) external view returns (bool)\n")),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"has checks whether a value is exist")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"id"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"the list identifier (the hash of list owner's address)")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"value"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"is element value in list")))),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[0]"),(0,l.kt)("td",{parentName:"tr",align:null},"bool"),(0,l.kt)("td",{parentName:"tr",align:null},"true if the value exists")))),(0,l.kt)("h3",{id:"has-1"},"has"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function has(bytes32 value) external view returns (bool)\n")),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"has checks whether a value is exist")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"value"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"is element value in list")))),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[0]"),(0,l.kt)("td",{parentName:"tr",align:null},"bool"),(0,l.kt)("td",{parentName:"tr",align:null},"true if the value exists")))),(0,l.kt)("h3",{id:"remove"},"remove"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function remove(bytes32 value) external returns (bool)\n")),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"remove value from a list, updates indices, and list size")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"value"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"is an element value in a list")))),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[0]"),(0,l.kt)("td",{parentName:"tr",align:null},"bool"),(0,l.kt)("td",{parentName:"tr",align:null},"true if value is removed successfully")))),(0,l.kt)("h3",{id:"get"},"get"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function get(bytes32 id, uint256 _index) external view returns (bytes32)\n")),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"has value by index")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"id"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"the list identifier (the hash of list owner's address)")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_index"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"is where is value is stored in the list")))),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[0]"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"the value if exists")))),(0,l.kt)("h3",{id:"size"},"size"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function size(bytes32 id) external view returns (uint256)\n")),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"size gets the list size")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"id"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"the list identifier (the hash of list owner's address)")))),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[0]"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"total length of the list")))),(0,l.kt)("h3",{id:"all"},"all"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function all(bytes32 id) external view returns (bytes32[])\n")),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"all returns all list elements")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"id"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"the list identifier (the hash of list owner's address)")))),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[0]"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32[]"),(0,l.kt)("td",{parentName:"tr",align:null},"all list elements")))),(0,l.kt)("h3",{id:"indexof"},"indexOf"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function indexOf(bytes32 id, bytes32 value) external view returns (uint256)\n")),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"indexOf gets the index of a value in a list")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"id"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"the list identifier (the hash of list owner's address)")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"value"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"is element value in list")))),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[0]"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"value index in list")))),(0,l.kt)("h3",{id:"ownedby"},"ownedBy"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function ownedBy(bytes32 id) external view returns (address)\n")),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"ownedBy gets the list owner")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"id"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"the list identifier (the hash of list owner's address)")))),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[0]"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"list owner")))),(0,l.kt)("h3",{id:"isindexed"},"isIndexed"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function isIndexed(bytes32 id) external view returns (bool)\n")),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"isIndexed checks if the list is indexed")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"id"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"the list identifier (the hash of list owner's address)")))),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[0]"),(0,l.kt)("td",{parentName:"tr",align:null},"bool"),(0,l.kt)("td",{parentName:"tr",align:null},"true if the list is indexed")))),(0,l.kt)("h2",{id:"neverminedtoken"},"NeverminedToken"),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"Implementation of a Test Token.\nTest Token is an ERC20 token only for testing purposes")),(0,l.kt)("h3",{id:"initialize-2"},"initialize"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function initialize(address _owner, address payable _initialMinter) public\n")),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"NeverminedToken Initializer\nRuns only on initial contract creation.")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_owner"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"refers to the owner of the contract")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_initialMinter"),(0,l.kt)("td",{parentName:"tr",align:null},"address payable"),(0,l.kt)("td",{parentName:"tr",align:null},"is the first token minter added")))),(0,l.kt)("h3",{id:"_beforetokentransfer"},"_beforeTokenTransfer"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function _beforeTokenTransfer(address from, address to, uint256 amount) internal\n")),(0,l.kt)("p",null,"_See {ERC20-_beforeTokenTransfer}."),(0,l.kt)("p",null,"Requirements:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"minted tokens must not cause the total supply to go over the cap._")),(0,l.kt)("h3",{id:"mint"},"mint"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function mint(address account, uint256 amount) external returns (bool)\n")),(0,l.kt)("p",null,"_Creates ",(0,l.kt)("inlineCode",{parentName:"p"},"amount")," tokens and assigns them to ",(0,l.kt)("inlineCode",{parentName:"p"},"account"),", increasing\nthe total supply."),(0,l.kt)("p",null,"Emits a {Transfer} event with ",(0,l.kt)("inlineCode",{parentName:"p"},"from")," set to the zero address."),(0,l.kt)("p",null,"Requirements:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"to")," cannot be the zero address._")),(0,l.kt)("h2",{id:"agreementstorelibrary"},"AgreementStoreLibrary"),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"Implementation of the Agreement Store Library.\nThe agreement store library holds the business logic\nin which manages the life cycle of SEA agreement, each\nagreement is linked to the DID of an asset, template, and\ncondition IDs.")),(0,l.kt)("h3",{id:"agreement"},"Agreement"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"struct Agreement {\n  bytes32 did;\n  address templateId;\n  bytes32[] conditionIds;\n  address lastUpdatedBy;\n  uint256 blockNumberUpdated;\n}\n")),(0,l.kt)("h3",{id:"agreementlist"},"AgreementList"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"struct AgreementList {\n  mapping(bytes32 &#x3D;&gt; struct AgreementStoreLibrary.Agreement) agreements;\n  mapping(bytes32 &#x3D;&gt; bytes32[]) didToAgreementIds;\n  mapping(address &#x3D;&gt; bytes32[]) templateIdToAgreementIds;\n  bytes32[] agreementIds;\n}\n")),(0,l.kt)("h3",{id:"create"},"create"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function create(struct AgreementStoreLibrary.AgreementList _self, bytes32 _id, bytes32, address _templateId, bytes32[]) internal\n")),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"create new agreement\nchecks whether the agreement Id exists, creates new agreement\ninstance, including the template, conditions and DID.")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_self"),(0,l.kt)("td",{parentName:"tr",align:null},"struct AgreementStoreLibrary.AgreementList"),(0,l.kt)("td",{parentName:"tr",align:null},"is AgreementList storage pointer")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_id"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"agreement identifier")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null}),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null})),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_templateId"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"template identifier")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null}),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32[]"),(0,l.kt)("td",{parentName:"tr",align:null})))),(0,l.kt)("h2",{id:"template"},"Template"),(0,l.kt)("h3",{id:"getconditiontypes"},"getConditionTypes"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function getConditionTypes() external view returns (address[])\n")),(0,l.kt)("h2",{id:"agreementstoremanager"},"AgreementStoreManager"),(0,l.kt)("p",null,"_Implementation of the Agreement Store."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"}," The agreement store generates conditions for an agreement template.\n Agreement templates must to be approved in the Template Store\n Each agreement is linked to the DID of an asset._\n")),(0,l.kt)("h3",{id:"proxy_role"},"PROXY_ROLE"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"bytes32 PROXY_ROLE\n")),(0,l.kt)("h3",{id:"grantproxyrole"},"grantProxyRole"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function grantProxyRole(address _address) public\n")),(0,l.kt)("h3",{id:"revokeproxyrole"},"revokeProxyRole"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function revokeProxyRole(address _address) public\n")),(0,l.kt)("h3",{id:"agreementlist-1"},"agreementList"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"struct AgreementStoreLibrary.AgreementList agreementList\n")),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"state storage for the agreements")),(0,l.kt)("h3",{id:"conditionstoremanager"},"conditionStoreManager"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"contract ConditionStoreManager conditionStoreManager\n")),(0,l.kt)("h3",{id:"templatestoremanager"},"templateStoreManager"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"contract TemplateStoreManager templateStoreManager\n")),(0,l.kt)("h3",{id:"didregistry"},"didRegistry"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"contract DIDRegistry didRegistry\n")),(0,l.kt)("h3",{id:"initialize-3"},"initialize"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function initialize(address _owner, address _conditionStoreManagerAddress, address _templateStoreManagerAddress, address _didRegistryAddress) public\n")),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"initialize AgreementStoreManager Initializer\nInitializes Ownable. Only on contract creation.")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_owner"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"refers to the owner of the contract")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_conditionStoreManagerAddress"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"is the address of the connected condition store")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_templateStoreManagerAddress"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"is the address of the connected template store")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_didRegistryAddress"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"is the address of the connected DID Registry")))),(0,l.kt)("h3",{id:"fullconditionid"},"fullConditionId"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function fullConditionId(bytes32 _agreementId, address _condType, bytes32 _valueHash) public pure returns (bytes32)\n")),(0,l.kt)("h3",{id:"agreementid"},"agreementId"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function agreementId(bytes32 _agreementId, address _creator) public pure returns (bytes32)\n")),(0,l.kt)("h3",{id:"createagreement"},"createAgreement"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function createAgreement(bytes32 _id, bytes32 _did, address[] _conditionTypes, bytes32[] _conditionIds, uint256[] _timeLocks, uint256[] _timeOuts) public\n")),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},'Create a new agreement.\nThe agreement will create conditions of conditionType with conditionId.\nOnly "approved" templates can access this function.')),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_id"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"is the ID of the new agreement. Must be unique.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_did"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"is the bytes32 DID of the asset. The DID must be registered beforehand.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_conditionTypes"),(0,l.kt)("td",{parentName:"tr",align:null},"address[]"),(0,l.kt)("td",{parentName:"tr",align:null},"is a list of addresses that point to Condition contracts.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_conditionIds"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32[]"),(0,l.kt)("td",{parentName:"tr",align:null},"is a list of bytes32 content-addressed Condition IDs")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_timeLocks"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256[]"),(0,l.kt)("td",{parentName:"tr",align:null},"is a list of uint time lock values associated to each Condition")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_timeOuts"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256[]"),(0,l.kt)("td",{parentName:"tr",align:null},"is a list of uint time out values associated to each Condition")))),(0,l.kt)("h3",{id:"createagreementargs"},"CreateAgreementArgs"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"struct CreateAgreementArgs {\n  bytes32 _id;\n  bytes32 _did;\n  address[] _conditionTypes;\n  bytes32[] _conditionIds;\n  uint256[] _timeLocks;\n  uint256[] _timeOuts;\n  address _creator;\n  uint256 _idx;\n  address payable _rewardAddress;\n  address _tokenAddress;\n  uint256[] _amounts;\n  address[] _receivers;\n}\n")),(0,l.kt)("h3",{id:"createagreementandpay"},"createAgreementAndPay"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function createAgreementAndPay(struct AgreementStoreManager.CreateAgreementArgs args) public payable\n")),(0,l.kt)("h3",{id:"createagreementandfulfill"},"createAgreementAndFulfill"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function createAgreementAndFulfill(bytes32 _id, bytes32 _did, address[] _conditionTypes, bytes32[] _conditionIds, uint256[] _timeLocks, uint256[] _timeOuts, address[] _account, uint256[] _idx, bytes[] params) public payable\n")),(0,l.kt)("h3",{id:"getagreementtemplate"},"getAgreementTemplate"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function getAgreementTemplate(bytes32 _id) external view returns (address)\n")),(0,l.kt)("h3",{id:"getdidregistryaddress"},"getDIDRegistryAddress"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function getDIDRegistryAddress() public view virtual returns (address)\n")),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"getDIDRegistryAddress utility function\nused by other contracts or any EOA.")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[0]"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"the DIDRegistry address")))),(0,l.kt)("h2",{id:"accesscondition"},"AccessCondition"),(0,l.kt)("p",null,"_Implementation of the Access Condition"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"}," Access Secret Store Condition is special condition\n where a client or Parity secret store can encrypt/decrypt documents \n based on the on-chain granted permissions. For a given DID \n document, and agreement ID, the owner/provider of the DID \n will fulfill the condition. Consequently secret store \n will check whether the permission is granted for the consumer\n in order to encrypt/decrypt the document._\n")),(0,l.kt)("h3",{id:"condition_type"},"CONDITION_TYPE"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"bytes32 CONDITION_TYPE\n")),(0,l.kt)("h3",{id:"documentpermission"},"DocumentPermission"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"struct DocumentPermission {\n  bytes32 agreementIdDeprecated;\n  mapping(address &#x3D;&gt; bool) permission;\n}\n")),(0,l.kt)("h3",{id:"documentpermissions"},"documentPermissions"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"mapping(bytes32 => struct AccessCondition.DocumentPermission) documentPermissions\n")),(0,l.kt)("h3",{id:"agreementstoremanager-1"},"agreementStoreManager"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"contract AgreementStoreManager agreementStoreManager\n")),(0,l.kt)("h3",{id:"didregistry-1"},"didRegistry"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"contract DIDRegistry didRegistry\n")),(0,l.kt)("h3",{id:"fulfilled"},"Fulfilled"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"event Fulfilled(bytes32 _agreementId, bytes32 _documentId, address _grantee, bytes32 _conditionId)\n")),(0,l.kt)("h3",{id:"onlydidownerorprovider"},"onlyDIDOwnerOrProvider"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"modifier onlyDIDOwnerOrProvider(bytes32 _documentId)\n")),(0,l.kt)("h3",{id:"initialize-4"},"initialize"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function initialize(address _owner, address _conditionStoreManagerAddress, address _agreementStoreManagerAddress) external\n")),(0,l.kt)("p",null,"initialize init the\ncontract with the following parameters"),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"this function is called only once during the contract\ninitialization.")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_owner"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"contract's owner account address")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_conditionStoreManagerAddress"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"condition store manager address")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_agreementStoreManagerAddress"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"agreement store manager address")))),(0,l.kt)("h3",{id:"reinitialize"},"reinitialize"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function reinitialize() external\n")),(0,l.kt)("p",null,"Should be called when the contract has been upgraded."),(0,l.kt)("h3",{id:"hashvalues"},"hashValues"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function hashValues(bytes32 _documentId, address _grantee) public pure returns (bytes32)\n")),(0,l.kt)("p",null,"hashValues generates the hash of condition inputs\nwith the following parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_documentId"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"refers to the DID in which secret store will issue the decryption keys")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_grantee"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"is the address of the granted user or the DID provider")))),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[0]"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32 hash of all these values")))),(0,l.kt)("h3",{id:"fulfill"},"fulfill"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function fulfill(bytes32 _agreementId, bytes32 _documentId, address _grantee) public returns (enum ConditionStoreLibrary.ConditionState)\n")),(0,l.kt)("p",null,"fulfill access secret store condition"),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"only DID owner or DID provider can call this\nmethod. Fulfill method sets the permissions\nfor the granted consumer's address to true then\nfulfill the condition")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_agreementId"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"agreement identifier")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_documentId"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"refers to the DID in which secret store will issue the decryption keys")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_grantee"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"is the address of the granted user or the DID provider")))),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[0]"),(0,l.kt)("td",{parentName:"tr",align:null},"enum ConditionStoreLibrary.ConditionState"),(0,l.kt)("td",{parentName:"tr",align:null},"condition state (Fulfilled/Aborted)")))),(0,l.kt)("h3",{id:"grantpermission"},"grantPermission"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function grantPermission(address _grantee, bytes32 _documentId) public\n")),(0,l.kt)("p",null,"grantPermission is called only by DID owner or provider"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_grantee"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"is the address of the granted user or the DID provider")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_documentId"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"refers to the DID in which secret store will issue the decryption keys")))),(0,l.kt)("h3",{id:"renouncepermission"},"renouncePermission"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function renouncePermission(address _grantee, bytes32 _documentId) public\n")),(0,l.kt)("p",null,"renouncePermission is called only by DID owner or provider"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_grantee"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"is the address of the granted user or the DID provider")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_documentId"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"refers to the DID in which secret store will issue the decryption keys")))),(0,l.kt)("h3",{id:"checkpermissions"},"checkPermissions"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function checkPermissions(address _grantee, bytes32 _documentId) external view returns (bool permissionGranted)\n")),(0,l.kt)("p",null,"checkPermissions is called by Parity secret store"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_grantee"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"is the address of the granted user or the DID provider")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_documentId"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"refers to the DID in which secret store will issue the decryption keys")))),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"permissionGranted"),(0,l.kt)("td",{parentName:"tr",align:null},"bool"),(0,l.kt)("td",{parentName:"tr",align:null},"true if the access was granted")))),(0,l.kt)("h2",{id:"idisputemanager"},"IDisputeManager"),(0,l.kt)("h3",{id:"verifyproof"},"verifyProof"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function verifyProof(bytes proof, uint256[] pubSignals) external view returns (bool)\n")),(0,l.kt)("h2",{id:"accessproofcondition"},"AccessProofCondition"),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"Implementation of the Access Condition with transfer proof.\nThe idea is that the hash of the decryption key is known before hand, and the key matching this hash\nis passed from data provider to the buyer using this smart contract. Using ZK proof the key is kept\nhidden from outsiders. For the protocol to work, both the provider and buyer need to have public keys\nin the babyjub curve. To initiate the deal, buyer will pass the key hash and the public keys of participants.\nThe provider needs to pass the cipher text encrypted using MIMC (symmetric encryption). The secret key for MIMC\nis computed using ECDH (requires one public key and one secret key for the curve). The hash function that is\nused is Poseidon.")),(0,l.kt)("h3",{id:"condition_type-1"},"CONDITION_TYPE"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"bytes32 CONDITION_TYPE\n")),(0,l.kt)("h3",{id:"agreementstoremanager-2"},"agreementStoreManager"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"contract AgreementStoreManager agreementStoreManager\n")),(0,l.kt)("h3",{id:"disputemanager"},"disputeManager"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"contract IDisputeManager disputeManager\n")),(0,l.kt)("h3",{id:"fulfilled-1"},"Fulfilled"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"event Fulfilled(bytes32 _agreementId, uint256 _origHash, uint256[2] _buyer, uint256[2] _provider, uint256[2] _cipher, bytes _proof, bytes32 _conditionId)\n")),(0,l.kt)("h3",{id:"initialize-5"},"initialize"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function initialize(address _owner, address _conditionStoreManagerAddress, address _agreementStoreManagerAddress, address _disputeManagerAddress) external\n")),(0,l.kt)("p",null,"initialize init the\ncontract with the following parameters"),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"this function is called only once during the contract\ninitialization.")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_owner"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"contract's owner account address")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_conditionStoreManagerAddress"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"condition store manager address")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_agreementStoreManagerAddress"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"agreement store manager address")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_disputeManagerAddress"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"dispute manager address")))),(0,l.kt)("h3",{id:"changedisputemanager"},"changeDisputeManager"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function changeDisputeManager(address _disputeManagerAddress) external\n")),(0,l.kt)("h3",{id:"hashvalues-1"},"hashValues"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function hashValues(uint256 _origHash, uint256[2] _buyer, uint256[2] _provider) public pure returns (bytes32)\n")),(0,l.kt)("p",null,"hashValues generates the hash of condition inputs\nwith the following parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_origHash"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"is the hash of the key")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_buyer"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256","[2]"),(0,l.kt)("td",{parentName:"tr",align:null},"buyer public key")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_provider"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256","[2]"),(0,l.kt)("td",{parentName:"tr",align:null},"provider public key")))),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[0]"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32 hash of all these values")))),(0,l.kt)("h3",{id:"fulfill-1"},"fulfill"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function fulfill(bytes32 _agreementId, uint256 _origHash, uint256[2] _buyer, uint256[2] _provider, uint256[2] _cipher, bytes _proof) public returns (enum ConditionStoreLibrary.ConditionState)\n")),(0,l.kt)("p",null,"fulfill key transfer"),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"The key with hash _origHash is transferred to the _buyer from _provider.")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_agreementId"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"associated agreement")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_origHash"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"is the hash of data to access")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_buyer"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256","[2]"),(0,l.kt)("td",{parentName:"tr",align:null},"buyer public key")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_provider"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256","[2]"),(0,l.kt)("td",{parentName:"tr",align:null},"provider public key")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_cipher"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256","[2]"),(0,l.kt)("td",{parentName:"tr",align:null},"encrypted version of the key")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_proof"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes"),(0,l.kt)("td",{parentName:"tr",align:null},"SNARK proof that the cipher text can be decrypted by buyer to give the key with hash _origHash")))),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[0]"),(0,l.kt)("td",{parentName:"tr",align:null},"enum ConditionStoreLibrary.ConditionState"),(0,l.kt)("td",{parentName:"tr",align:null},"condition state (Fulfilled/Aborted)")))),(0,l.kt)("h2",{id:"computeexecutioncondition"},"ComputeExecutionCondition"),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"Implementation of the Compute Execution Condition\nThis condition is meant to be a signal in which triggers\nthe execution of a compute service. The compute service is fully described\nin the associated DID document. The provider of the compute service will\nsend this signal to its workers by fulfilling the condition where\nthey are listening to the fulfilled event.")),(0,l.kt)("h3",{id:"condition_type-2"},"CONDITION_TYPE"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"bytes32 CONDITION_TYPE\n")),(0,l.kt)("h3",{id:"computeexecutionstatus"},"computeExecutionStatus"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"mapping(bytes32 => mapping(address => bool)) computeExecutionStatus\n")),(0,l.kt)("h3",{id:"agreementstoremanager-3"},"agreementStoreManager"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"contract AgreementStoreManager agreementStoreManager\n")),(0,l.kt)("h3",{id:"fulfilled-2"},"Fulfilled"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"event Fulfilled(bytes32 _agreementId, bytes32 _did, address _computeConsumer, bytes32 _conditionId)\n")),(0,l.kt)("h3",{id:"onlydidownerorprovider-1"},"onlyDIDOwnerOrProvider"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"modifier onlyDIDOwnerOrProvider(bytes32 _did)\n")),(0,l.kt)("h3",{id:"initialize-6"},"initialize"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function initialize(address _owner, address _conditionStoreManagerAddress, address _agreementStoreManagerAddress) external\n")),(0,l.kt)("p",null,"initialize init the\ncontract with the following parameters"),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"this function is called only once during the contract\ninitialization.")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_owner"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"contract's owner account address")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_conditionStoreManagerAddress"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"condition store manager address")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_agreementStoreManagerAddress"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"agreement store manager address")))),(0,l.kt)("h3",{id:"hashvalues-2"},"hashValues"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function hashValues(bytes32 _did, address _computeConsumer) public pure returns (bytes32)\n")),(0,l.kt)("p",null,"hashValues generates the hash of condition inputs\nwith the following parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_did"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"Decentralized Identifier (unique compute/asset resolver) describes the compute service")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_computeConsumer"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"is the consumer's address")))),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[0]"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32 hash of all these values")))),(0,l.kt)("h3",{id:"fulfill-2"},"fulfill"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function fulfill(bytes32 _agreementId, bytes32 _did, address _computeConsumer) public returns (enum ConditionStoreLibrary.ConditionState)\n")),(0,l.kt)("p",null,"fulfill compute execution condition"),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"only the compute provider can fulfill this condition. By fulfilling this\ncondition the compute provider will trigger the execution of\nthe offered job/compute. The compute service is described in a DID document.")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_agreementId"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"agreement identifier")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_did"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"Decentralized Identifier (unique compute/asset resolver) describes the compute service")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_computeConsumer"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"is the consumer's address")))),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[0]"),(0,l.kt)("td",{parentName:"tr",align:null},"enum ConditionStoreLibrary.ConditionState"),(0,l.kt)("td",{parentName:"tr",align:null},"condition state (Fulfilled/Aborted)")))),(0,l.kt)("h3",{id:"wascomputetriggered"},"wasComputeTriggered"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function wasComputeTriggered(bytes32 _did, address _computeConsumer) public view returns (bool)\n")),(0,l.kt)("p",null,"wasComputeTriggered checks whether the compute is triggered or not."),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_did"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"Decentralized Identifier (unique compute/asset resolver) describes the compute service")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_computeConsumer"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"is the compute consumer's address")))),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[0]"),(0,l.kt)("td",{parentName:"tr",align:null},"bool"),(0,l.kt)("td",{parentName:"tr",align:null},"true if the compute is triggered")))),(0,l.kt)("h2",{id:"condition"},"Condition"),(0,l.kt)("p",null,"_Implementation of the Condition"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"}," Each condition has a validation function that returns either FULFILLED, \n ABORTED or UNFULFILLED. When a condition is successfully solved, we call \n it FULFILLED. If a condition cannot be FULFILLED anymore due to a timeout \n or other types of counter-proofs, the condition is ABORTED. UNFULFILLED \n values imply that a condition has not been provably FULFILLED or ABORTED. \n All initialized conditions start out as UNFULFILLED._\n")),(0,l.kt)("h3",{id:"conditionstoremanager-1"},"conditionStoreManager"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"contract ConditionStoreManager conditionStoreManager\n")),(0,l.kt)("h3",{id:"generateid"},"generateId"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function generateId(bytes32 _agreementId, bytes32 _valueHash) public view returns (bytes32)\n")),(0,l.kt)("p",null,"generateId condition Id from the following\nparameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_agreementId"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"SEA agreement ID")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_valueHash"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"hash of all the condition input values")))),(0,l.kt)("h3",{id:"fulfill-3"},"fulfill"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function fulfill(bytes32 _id, enum ConditionStoreLibrary.ConditionState _newState) internal returns (enum ConditionStoreLibrary.ConditionState)\n")),(0,l.kt)("p",null,"fulfill set the condition state to Fulfill | Abort"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_id"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"condition identifier")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_newState"),(0,l.kt)("td",{parentName:"tr",align:null},"enum ConditionStoreLibrary.ConditionState"),(0,l.kt)("td",{parentName:"tr",align:null},"new condition state (Fulfill/Abort)")))),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[0]"),(0,l.kt)("td",{parentName:"tr",align:null},"enum ConditionStoreLibrary.ConditionState"),(0,l.kt)("td",{parentName:"tr",align:null},"the updated condition state")))),(0,l.kt)("h3",{id:"abortbytimeout"},"abortByTimeOut"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function abortByTimeOut(bytes32 _id) external returns (enum ConditionStoreLibrary.ConditionState)\n")),(0,l.kt)("p",null,"abortByTimeOut set condition state to Aborted\nif the condition is timed out"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_id"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"condition identifier")))),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[0]"),(0,l.kt)("td",{parentName:"tr",align:null},"enum ConditionStoreLibrary.ConditionState"),(0,l.kt)("td",{parentName:"tr",align:null},"the updated condition state")))),(0,l.kt)("h2",{id:"conditionstorelibrary"},"ConditionStoreLibrary"),(0,l.kt)("p",null,"_Implementation of the Condition Store Library."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"}," Condition is a key component in the service execution agreement. \n This library holds the logic for creating and updating condition \n Any Condition has only four state transitions starts with Uninitialized,\n Unfulfilled, Fulfilled, and Aborted. Condition state transition goes only \n forward from Unintialized -> Unfulfilled -> {Fulfilled || Aborted}_\n")),(0,l.kt)("h3",{id:"conditionstate"},"ConditionState"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"enum ConditionState {\n  Uninitialized,\n  Unfulfilled,\n  Fulfilled,\n  Aborted\n}\n")),(0,l.kt)("h3",{id:"condition-1"},"Condition"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"struct Condition {\n  address typeRef;\n  enum ConditionStoreLibrary.ConditionState state;\n  address createdBy;\n  address lastUpdatedBy;\n  uint256 blockNumberUpdated;\n}\n")),(0,l.kt)("h3",{id:"conditionlist"},"ConditionList"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"struct ConditionList {\n  mapping(bytes32 &#x3D;&gt; struct ConditionStoreLibrary.Condition) conditions;\n  mapping(bytes32 &#x3D;&gt; mapping(bytes32 &#x3D;&gt; bytes32)) map;\n  bytes32[] conditionIds;\n}\n")),(0,l.kt)("h3",{id:"create-1"},"create"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function create(struct ConditionStoreLibrary.ConditionList _self, bytes32 _id, address _typeRef) internal\n")),(0,l.kt)("p",null,"create new condition"),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"check whether the condition exists, assigns\ncondition type, condition state, last updated by,\nand update at (which is the current block number)")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_self"),(0,l.kt)("td",{parentName:"tr",align:null},"struct ConditionStoreLibrary.ConditionList"),(0,l.kt)("td",{parentName:"tr",align:null},"is the ConditionList storage pointer")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_id"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"valid condition identifier")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_typeRef"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"condition contract address")))),(0,l.kt)("h3",{id:"updatestate"},"updateState"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function updateState(struct ConditionStoreLibrary.ConditionList _self, bytes32 _id, enum ConditionStoreLibrary.ConditionState _newState) internal\n")),(0,l.kt)("p",null,"updateState update the condition state"),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"check whether the condition state transition is right,\nassign the new state, update last updated by and\nupdated at.")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_self"),(0,l.kt)("td",{parentName:"tr",align:null},"struct ConditionStoreLibrary.ConditionList"),(0,l.kt)("td",{parentName:"tr",align:null},"is the ConditionList storage pointer")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_id"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"condition identifier")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_newState"),(0,l.kt)("td",{parentName:"tr",align:null},"enum ConditionStoreLibrary.ConditionState"),(0,l.kt)("td",{parentName:"tr",align:null},"the new state of the condition")))),(0,l.kt)("h3",{id:"updatekeyvalue"},"updateKeyValue"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function updateKeyValue(struct ConditionStoreLibrary.ConditionList _self, bytes32 _id, bytes32 _key, bytes32 _value) internal\n")),(0,l.kt)("h2",{id:"conditionstoremanager-2"},"ConditionStoreManager"),(0,l.kt)("p",null,"_Implementation of the Condition Store Manager."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"}," Condition store manager is responsible for enforcing the \n the business logic behind creating/updating the condition state\n based on the assigned role to each party. Only specific type of\n contracts are allowed to call this contract, therefore there are \n two types of roles, create role that in which is able to create conditions.\n The second role is the update role, which is can update the condition state.\n Also, it support delegating the roles to other contract(s)/account(s)._\n")),(0,l.kt)("h3",{id:"proxy_role-1"},"PROXY_ROLE"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"bytes32 PROXY_ROLE\n")),(0,l.kt)("h3",{id:"roletype"},"RoleType"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"enum RoleType {\n  Create,\n  Update\n}\n")),(0,l.kt)("h3",{id:"createrole"},"createRole"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"address createRole\n")),(0,l.kt)("h3",{id:"conditionlist-1"},"conditionList"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"struct ConditionStoreLibrary.ConditionList conditionList\n")),(0,l.kt)("h3",{id:"epochlist"},"epochList"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"struct EpochLibrary.EpochList epochList\n")),(0,l.kt)("h3",{id:"nvmconfigaddress"},"nvmConfigAddress"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"address nvmConfigAddress\n")),(0,l.kt)("h3",{id:"conditioncreated"},"ConditionCreated"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"event ConditionCreated(bytes32 _id, address _typeRef, address _who)\n")),(0,l.kt)("h3",{id:"conditionupdated"},"ConditionUpdated"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"event ConditionUpdated(bytes32 _id, address _typeRef, enum ConditionStoreLibrary.ConditionState _state, address _who)\n")),(0,l.kt)("h3",{id:"onlycreaterole"},"onlyCreateRole"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"modifier onlyCreateRole()\n")),(0,l.kt)("h3",{id:"onlyupdaterole"},"onlyUpdateRole"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"modifier onlyUpdateRole(bytes32 _id)\n")),(0,l.kt)("h3",{id:"onlyvalidtype"},"onlyValidType"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"modifier onlyValidType(address typeRef)\n")),(0,l.kt)("h3",{id:"initialize-7"},"initialize"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function initialize(address _creator, address _owner, address _nvmConfigAddress) public\n")),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"initialize ConditionStoreManager Initializer\nInitialize Ownable. Only on contract creation,")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_creator"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"refers to the creator of the contract")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_owner"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"refers to the owner of the contract")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_nvmConfigAddress"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"refers to the contract address of ",(0,l.kt)("inlineCode",{parentName:"td"},"NeverminedConfig"))))),(0,l.kt)("h3",{id:"getcreaterole"},"getCreateRole"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function getCreateRole() external view returns (address)\n")),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"getCreateRole get the address of contract\nwhich has the create role")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[0]"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"create condition role address")))),(0,l.kt)("h3",{id:"getnvmconfigaddress"},"getNvmConfigAddress"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function getNvmConfigAddress() external view returns (address)\n")),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"getNvmConfigAddress get the address of the NeverminedConfig contract")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[0]"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"NeverminedConfig contract address")))),(0,l.kt)("h3",{id:"setnvmconfigaddress"},"setNvmConfigAddress"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function setNvmConfigAddress(address _addr) external\n")),(0,l.kt)("h3",{id:"delegatecreaterole"},"delegateCreateRole"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function delegateCreateRole(address delegatee) external\n")),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"delegateCreateRole only owner can delegate the\ncreate condition role to a different address")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"delegatee"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"delegatee address")))),(0,l.kt)("h3",{id:"delegateupdaterole"},"delegateUpdateRole"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function delegateUpdateRole(bytes32 _id, address delegatee) external\n")),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"delegateUpdateRole only owner can delegate\nthe update role to a different address for\nspecific condition Id which has the create role")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_id"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null})),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"delegatee"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"delegatee address")))),(0,l.kt)("h3",{id:"grantproxyrole-1"},"grantProxyRole"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function grantProxyRole(address _address) public\n")),(0,l.kt)("h3",{id:"revokeproxyrole-1"},"revokeProxyRole"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function revokeProxyRole(address _address) public\n")),(0,l.kt)("h3",{id:"createcondition"},"createCondition"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function createCondition(bytes32 _id, address _typeRef) external\n")),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"createCondition only called by create role address\nthe condition should use a valid condition contract\naddress, valid time lock and timeout. Moreover, it\nenforce the condition state transition from\nUninitialized to Unfulfilled.")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_id"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"unique condition identifier")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_typeRef"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"condition contract address")))),(0,l.kt)("h3",{id:"createcondition2"},"createCondition2"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function createCondition2(bytes32 _id, address _typeRef) external\n")),(0,l.kt)("h3",{id:"createcondition-1"},"createCondition"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function createCondition(bytes32 _id, address _typeRef, uint256 _timeLock, uint256 _timeOut) public\n")),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"createCondition only called by create role address\nthe condition should use a valid condition contract\naddress, valid time lock and timeout. Moreover, it\nenforce the condition state transition from\nUninitialized to Unfulfilled.")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_id"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"unique condition identifier")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_typeRef"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"condition contract address")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_timeLock"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"start of the time window")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_timeOut"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"end of the time window")))),(0,l.kt)("h3",{id:"updateconditionstate"},"updateConditionState"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function updateConditionState(bytes32 _id, enum ConditionStoreLibrary.ConditionState _newState) external returns (enum ConditionStoreLibrary.ConditionState)\n")),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"updateConditionState only called by update role address.\nIt enforce the condition state transition to either\nFulfill or Aborted state")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_id"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"unique condition identifier")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_newState"),(0,l.kt)("td",{parentName:"tr",align:null},"enum ConditionStoreLibrary.ConditionState"),(0,l.kt)("td",{parentName:"tr",align:null})))),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[0]"),(0,l.kt)("td",{parentName:"tr",align:null},"enum ConditionStoreLibrary.ConditionState"),(0,l.kt)("td",{parentName:"tr",align:null},"the current condition state")))),(0,l.kt)("h3",{id:"updateconditionmapping"},"updateConditionMapping"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function updateConditionMapping(bytes32 _id, bytes32 _key, bytes32 _value) external\n")),(0,l.kt)("h3",{id:"updateconditionmappingproxy"},"updateConditionMappingProxy"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function updateConditionMappingProxy(bytes32 _id, bytes32 _key, bytes32 _value) external\n")),(0,l.kt)("h3",{id:"getcondition"},"getCondition"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function getCondition(bytes32 _id) external view returns (address typeRef, enum ConditionStoreLibrary.ConditionState state, uint256 timeLock, uint256 timeOut, uint256 blockNumber)\n")),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"getCondition")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"typeRef"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"the type reference")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"state"),(0,l.kt)("td",{parentName:"tr",align:null},"enum ConditionStoreLibrary.ConditionState"),(0,l.kt)("td",{parentName:"tr",align:null},"condition state")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"timeLock"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"the time lock")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"timeOut"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"time out")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"blockNumber"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"block number")))),(0,l.kt)("h3",{id:"getconditionstate"},"getConditionState"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function getConditionState(bytes32 _id) external view virtual returns (enum ConditionStoreLibrary.ConditionState)\n")),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"getConditionState")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[0]"),(0,l.kt)("td",{parentName:"tr",align:null},"enum ConditionStoreLibrary.ConditionState"),(0,l.kt)("td",{parentName:"tr",align:null},"condition state")))),(0,l.kt)("h3",{id:"getconditiontyperef"},"getConditionTypeRef"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function getConditionTypeRef(bytes32 _id) external view virtual returns (address)\n")),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"getConditionTypeRef")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[0]"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"condition typeRef")))),(0,l.kt)("h3",{id:"getmappingvalue"},"getMappingValue"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function getMappingValue(bytes32 _id, bytes32 _key) external view virtual returns (bytes32)\n")),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"getConditionState")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[0]"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"condition state")))),(0,l.kt)("h3",{id:"isconditiontimelocked"},"isConditionTimeLocked"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function isConditionTimeLocked(bytes32 _id) public view returns (bool)\n")),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"isConditionTimeLocked")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[0]"),(0,l.kt)("td",{parentName:"tr",align:null},"bool"),(0,l.kt)("td",{parentName:"tr",align:null},"whether the condition is timedLock ended")))),(0,l.kt)("h3",{id:"isconditiontimedout"},"isConditionTimedOut"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function isConditionTimedOut(bytes32 _id) public view returns (bool)\n")),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"isConditionTimedOut")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[0]"),(0,l.kt)("td",{parentName:"tr",align:null},"bool"),(0,l.kt)("td",{parentName:"tr",align:null},"whether the condition is timed out")))),(0,l.kt)("h2",{id:"hashlockcondition"},"HashLockCondition"),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"Implementation of the Hash Lock Condition")),(0,l.kt)("h3",{id:"condition_type-3"},"CONDITION_TYPE"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"bytes32 CONDITION_TYPE\n")),(0,l.kt)("h3",{id:"initialize-8"},"initialize"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function initialize(address _owner, address _conditionStoreManagerAddress) external\n")),(0,l.kt)("p",null,"initialize init the\ncontract with the following parameters"),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"this function is called only once during the contract\ninitialization.")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_owner"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"contract's owner account address")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_conditionStoreManagerAddress"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"condition store manager address")))),(0,l.kt)("h3",{id:"hashvalues-3"},"hashValues"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function hashValues(uint256 _preimage) public pure returns (bytes32)\n")),(0,l.kt)("p",null,"hashValues generates the hash of condition inputs\nwith the following parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_preimage"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"refers uint value of the hash pre-image.")))),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[0]"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32 hash of all these values")))),(0,l.kt)("h3",{id:"hashvalues-4"},"hashValues"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function hashValues(string _preimage) public pure returns (bytes32)\n")),(0,l.kt)("p",null,"hashValues generates the hash of condition inputs\nwith the following parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_preimage"),(0,l.kt)("td",{parentName:"tr",align:null},"string"),(0,l.kt)("td",{parentName:"tr",align:null},"refers string value of the hash pre-image.")))),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[0]"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32 hash of all these values")))),(0,l.kt)("h3",{id:"hashvalues-5"},"hashValues"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function hashValues(bytes32 _preimage) public pure returns (bytes32)\n")),(0,l.kt)("p",null,"hashValues generates the hash of condition inputs\nwith the following parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_preimage"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"refers bytes32 value of the hash pre-image.")))),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[0]"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32 hash of all these values")))),(0,l.kt)("h3",{id:"fulfill-4"},"fulfill"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function fulfill(bytes32 _agreementId, uint256 _preimage) external returns (enum ConditionStoreLibrary.ConditionState)\n")),(0,l.kt)("p",null,"fulfill the condition by calling check the\nthe hash and the pre-image uint value"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_agreementId"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"SEA agreement identifier")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_preimage"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null})))),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[0]"),(0,l.kt)("td",{parentName:"tr",align:null},"enum ConditionStoreLibrary.ConditionState"),(0,l.kt)("td",{parentName:"tr",align:null},"condition state")))),(0,l.kt)("h3",{id:"fulfill-5"},"fulfill"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function fulfill(bytes32 _agreementId, string _preimage) public returns (enum ConditionStoreLibrary.ConditionState)\n")),(0,l.kt)("p",null,"fulfill the condition by calling check the\nthe hash and the pre-image string value"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_agreementId"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"SEA agreement identifier")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_preimage"),(0,l.kt)("td",{parentName:"tr",align:null},"string"),(0,l.kt)("td",{parentName:"tr",align:null})))),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[0]"),(0,l.kt)("td",{parentName:"tr",align:null},"enum ConditionStoreLibrary.ConditionState"),(0,l.kt)("td",{parentName:"tr",align:null},"condition state")))),(0,l.kt)("h3",{id:"fulfill-6"},"fulfill"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function fulfill(bytes32 _agreementId, bytes32 _preimage) external returns (enum ConditionStoreLibrary.ConditionState)\n")),(0,l.kt)("p",null,"fulfill the condition by calling check the\nthe hash and the pre-image bytes32 value"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_agreementId"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"SEA agreement identifier")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_preimage"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null})))),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[0]"),(0,l.kt)("td",{parentName:"tr",align:null},"enum ConditionStoreLibrary.ConditionState"),(0,l.kt)("td",{parentName:"tr",align:null},"condition state")))),(0,l.kt)("h3",{id:"_fulfill"},"_fulfill"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function _fulfill(bytes32 _generatedId) private returns (enum ConditionStoreLibrary.ConditionState)\n")),(0,l.kt)("p",null,"_fulfill calls super fulfil method"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_generatedId"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"SEA agreement identifier")))),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[0]"),(0,l.kt)("td",{parentName:"tr",align:null},"enum ConditionStoreLibrary.ConditionState"),(0,l.kt)("td",{parentName:"tr",align:null},"condition state")))),(0,l.kt)("h2",{id:"icondition"},"ICondition"),(0,l.kt)("h3",{id:"fulfillproxy"},"fulfillProxy"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function fulfillProxy(address _account, bytes32 _agreementId, bytes params) external payable\n")),(0,l.kt)("h2",{id:"ilockpayment"},"ILockPayment"),(0,l.kt)("h3",{id:"fulfilled-3"},"Fulfilled"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"event Fulfilled(bytes32 _agreementId, bytes32 _did, bytes32 _conditionId, address _rewardAddress, address _tokenAddress, address[] _receivers, uint256[] _amounts)\n")),(0,l.kt)("h3",{id:"hashvalues-6"},"hashValues"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function hashValues(bytes32 _did, address _rewardAddress, address _tokenAddress, uint256[] _amounts, address[] _receivers) external pure returns (bytes32)\n")),(0,l.kt)("p",null,"hashValues generates the hash of condition inputs\nwith the following parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_did"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"the asset decentralized identifier")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_rewardAddress"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"the contract address where the reward is locked")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_tokenAddress"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"the ERC20 contract address to use during the lock payment.         If the address is 0x0 means we won't use a ERC20 but ETH for payment")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_amounts"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256[]"),(0,l.kt)("td",{parentName:"tr",align:null},"token amounts to be locked/released")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_receivers"),(0,l.kt)("td",{parentName:"tr",align:null},"address[]"),(0,l.kt)("td",{parentName:"tr",align:null},"receiver's addresses")))),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[0]"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32 hash of all these values")))),(0,l.kt)("h3",{id:"fulfill-7"},"fulfill"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function fulfill(bytes32 _agreementId, bytes32 _did, address payable _rewardAddress, address _tokenAddress, uint256[] _amounts, address[] _receivers) external payable returns (enum ConditionStoreLibrary.ConditionState)\n")),(0,l.kt)("p",null,"fulfill requires valid token transfer in order\nto lock the amount of tokens based on the SEA"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_agreementId"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"the agreement identifier")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_did"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"the asset decentralized identifier")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_rewardAddress"),(0,l.kt)("td",{parentName:"tr",align:null},"address payable"),(0,l.kt)("td",{parentName:"tr",align:null},"the contract address where the reward is locked")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_tokenAddress"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"the ERC20 contract address to use during the lock payment.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_amounts"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256[]"),(0,l.kt)("td",{parentName:"tr",align:null},"token amounts to be locked/released")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_receivers"),(0,l.kt)("td",{parentName:"tr",align:null},"address[]"),(0,l.kt)("td",{parentName:"tr",align:null},"receiver's addresses")))),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[0]"),(0,l.kt)("td",{parentName:"tr",align:null},"enum ConditionStoreLibrary.ConditionState"),(0,l.kt)("td",{parentName:"tr",align:null},"condition state")))),(0,l.kt)("h2",{id:"lockpaymentcondition"},"LockPaymentCondition"),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"Implementation of the Lock Payment Condition\nThis condition allows to lock payment for multiple receivers taking\ninto account the royalties to be paid to the original creators in a secondary market.")),(0,l.kt)("h3",{id:"didregistry-2"},"didRegistry"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"contract DIDRegistry didRegistry\n")),(0,l.kt)("h3",{id:"nvmconfig"},"nvmConfig"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"contract INVMConfig nvmConfig\n")),(0,l.kt)("h3",{id:"condition_type-4"},"CONDITION_TYPE"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"bytes32 CONDITION_TYPE\n")),(0,l.kt)("h3",{id:"key_asset_receiver"},"KEY_ASSET_RECEIVER"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"bytes32 KEY_ASSET_RECEIVER\n")),(0,l.kt)("h3",{id:"proxy_role-2"},"PROXY_ROLE"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"bytes32 PROXY_ROLE\n")),(0,l.kt)("h3",{id:"allowed_external_contract_role"},"ALLOWED_EXTERNAL_CONTRACT_ROLE"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"bytes32 ALLOWED_EXTERNAL_CONTRACT_ROLE\n")),(0,l.kt)("h3",{id:"grantproxyrole-2"},"grantProxyRole"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function grantProxyRole(address _address) public\n")),(0,l.kt)("h3",{id:"revokeproxyrole-2"},"revokeProxyRole"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function revokeProxyRole(address _address) public\n")),(0,l.kt)("h3",{id:"grantexternalcontractrole"},"grantExternalContractRole"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function grantExternalContractRole(address _address) public\n")),(0,l.kt)("h3",{id:"revokeexternalcontractrole"},"revokeExternalContractRole"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function revokeExternalContractRole(address _address) public\n")),(0,l.kt)("h3",{id:"initialize-9"},"initialize"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function initialize(address _owner, address _conditionStoreManagerAddress, address _didRegistryAddress) external\n")),(0,l.kt)("p",null,"initialize init the contract with the following parameters"),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"this function is called only once during the contract initialization.")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_owner"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"contract's owner account address")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_conditionStoreManagerAddress"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"condition store manager address")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_didRegistryAddress"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"DID Registry address")))),(0,l.kt)("h3",{id:"reinitialize-1"},"reinitialize"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function reinitialize() external\n")),(0,l.kt)("p",null,"Should be called when the contract has been upgraded."),(0,l.kt)("h3",{id:"hashvalues-7"},"hashValues"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function hashValues(bytes32 _did, address _rewardAddress, address _tokenAddress, uint256[] _amounts, address[] _receivers) public pure returns (bytes32)\n")),(0,l.kt)("p",null,"hashValues generates the hash of condition inputs\nwith the following parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_did"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"the asset decentralized identifier")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_rewardAddress"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"the contract address where the reward is locked")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_tokenAddress"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"the ERC20 contract address to use during the lock payment.         If the address is 0x0 means we won't use a ERC20 but ETH for payment")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_amounts"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256[]"),(0,l.kt)("td",{parentName:"tr",align:null},"token amounts to be locked/released")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_receivers"),(0,l.kt)("td",{parentName:"tr",align:null},"address[]"),(0,l.kt)("td",{parentName:"tr",align:null},"receiver's addresses")))),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[0]"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32 hash of all these values")))),(0,l.kt)("h3",{id:"fulfill-8"},"fulfill"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function fulfill(bytes32 _agreementId, bytes32 _did, address payable _rewardAddress, address _tokenAddress, uint256[] _amounts, address[] _receivers) external payable returns (enum ConditionStoreLibrary.ConditionState)\n")),(0,l.kt)("p",null,"fulfill requires valid token transfer in order\nto lock the amount of tokens based on the SEA"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_agreementId"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"the agreement identifier")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_did"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"the asset decentralized identifier")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_rewardAddress"),(0,l.kt)("td",{parentName:"tr",align:null},"address payable"),(0,l.kt)("td",{parentName:"tr",align:null},"the contract address where the reward is locked")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_tokenAddress"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"the ERC20 contract address to use during the lock payment.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_amounts"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256[]"),(0,l.kt)("td",{parentName:"tr",align:null},"token amounts to be locked/released")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_receivers"),(0,l.kt)("td",{parentName:"tr",align:null},"address[]"),(0,l.kt)("td",{parentName:"tr",align:null},"receiver's addresses")))),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[0]"),(0,l.kt)("td",{parentName:"tr",align:null},"enum ConditionStoreLibrary.ConditionState"),(0,l.kt)("td",{parentName:"tr",align:null},"condition state")))),(0,l.kt)("h3",{id:"fulfillexternal"},"fulfillExternal"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function fulfillExternal(bytes32 _agreementId, bytes32 _did, address payable _rewardAddress, address _externalContract, bytes32 _remoteId, uint256[] _amounts, address[] _receivers) external payable returns (enum ConditionStoreLibrary.ConditionState)\n")),(0,l.kt)("p",null,"fulfill lock condition using the funds locked in an external contract\n(auction, bonding curve, lottery, etc)"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_agreementId"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"the agreement identifier")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_did"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"the asset decentralized identifier")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_rewardAddress"),(0,l.kt)("td",{parentName:"tr",align:null},"address payable"),(0,l.kt)("td",{parentName:"tr",align:null},"the contract address where the reward is locked")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_externalContract"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"the address of the contract with the lock funds are locked")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_remoteId"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"the id used to identify into the external contract")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_amounts"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256[]"),(0,l.kt)("td",{parentName:"tr",align:null},"token amounts to be locked/released")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_receivers"),(0,l.kt)("td",{parentName:"tr",align:null},"address[]"),(0,l.kt)("td",{parentName:"tr",align:null},"receiver's addresses")))),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[0]"),(0,l.kt)("td",{parentName:"tr",align:null},"enum ConditionStoreLibrary.ConditionState"),(0,l.kt)("td",{parentName:"tr",align:null},"condition state")))),(0,l.kt)("h3",{id:"encodeparams"},"encodeParams"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function encodeParams(bytes32 _did, address payable _rewardAddress, address _tokenAddress, uint256[] _amounts, address[] _receivers) external pure returns (bytes)\n")),(0,l.kt)("h3",{id:"fulfillinternal"},"fulfillInternal"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function fulfillInternal(address _account, bytes32 _agreementId, bytes32 _did, address payable _rewardAddress, address _tokenAddress, uint256[] _amounts, address[] _receivers) internal returns (enum ConditionStoreLibrary.ConditionState)\n")),(0,l.kt)("h3",{id:"fulfillproxy-1"},"fulfillProxy"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function fulfillProxy(address _account, bytes32 _agreementId, bytes params) external payable\n")),(0,l.kt)("h3",{id:"_transfererc20proxy"},"_transferERC20Proxy"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function _transferERC20Proxy(address _senderAddress, address _rewardAddress, address _tokenAddress, uint256 _amount) internal\n")),(0,l.kt)("p",null,"_transferERC20Proxy transfer ERC20 tokens"),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"Will throw if transfer fails")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_senderAddress"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"the address to send the tokens from")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_rewardAddress"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"the address to receive the tokens")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_tokenAddress"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"the ERC20 contract address to use during the payment")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_amount"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"token amount to be locked/released")))),(0,l.kt)("h3",{id:"_transfereth"},"_transferETH"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function _transferETH(address payable _rewardAddress, uint256 _amount) internal\n")),(0,l.kt)("p",null,"_transferETH transfer ETH"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_rewardAddress"),(0,l.kt)("td",{parentName:"tr",align:null},"address payable"),(0,l.kt)("td",{parentName:"tr",align:null},"the address to receive the ETH")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_amount"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"ETH amount to be locked/released")))),(0,l.kt)("h3",{id:"allowedexternalcontract"},"allowedExternalContract"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"modifier allowedExternalContract(address _externalContractAddress)\n")),(0,l.kt)("h3",{id:"aremarketplacefeesincluded"},"areMarketplaceFeesIncluded"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function areMarketplaceFeesIncluded(uint256[] _amounts, address[] _receivers) internal view returns (bool)\n")),(0,l.kt)("h2",{id:"distributenftcollateralcondition"},"DistributeNFTCollateralCondition"),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"Implementation of a condition allowing to transfer a NFT\nto an account or another depending on the final state of a lock condition")),(0,l.kt)("h3",{id:"condition_type-5"},"CONDITION_TYPE"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"bytes32 CONDITION_TYPE\n")),(0,l.kt)("h3",{id:"aavecreditvault"},"aaveCreditVault"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"contract AaveCreditVault aaveCreditVault\n")),(0,l.kt)("h3",{id:"_lockconditionaddress"},"_lockConditionAddress"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"address _lockConditionAddress\n")),(0,l.kt)("h3",{id:"fulfilled-4"},"Fulfilled"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"event Fulfilled(bytes32 _agreementId, bytes32 _did, address _receiver, bytes32 _conditionId, address _contract)\n")),(0,l.kt)("h3",{id:"initialize-10"},"initialize"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function initialize(address _owner, address _conditionStoreManagerAddress, address _lockNFTConditionAddress) external\n")),(0,l.kt)("p",null,"initialize init the contract with the following parameters"),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"this function is called only once during the contract\ninitialization.")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_owner"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"contract's owner account address")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_conditionStoreManagerAddress"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"condition store manager address")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_lockNFTConditionAddress"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"Lock NFT Condition address")))),(0,l.kt)("h3",{id:"hashvalues-8"},"hashValues"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function hashValues(bytes32 _did, address _vaultAddress, address _nftContractAddress) public pure returns (bytes32)\n")),(0,l.kt)("p",null,"hashValues generates the hash of condition inputs\nwith the following parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_did"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"refers to the DID in which secret store will issue the decryption keys")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_vaultAddress"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"The contract address of the vault")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_nftContractAddress"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"NFT contract to use")))),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[0]"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32 hash of all these values")))),(0,l.kt)("h3",{id:"fulfill-9"},"fulfill"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function fulfill(bytes32 _agreementId, bytes32 _did, address _vaultAddress, address _nftContractAddress) public returns (enum ConditionStoreLibrary.ConditionState)\n")),(0,l.kt)("p",null,"fulfill the transfer NFT condition"),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"Fulfill method transfer a certain amount of NFTs\nto the _nftReceiver address.\nWhen true then fulfill the condition")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_agreementId"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"agreement identifier")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_did"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"refers to the DID in which secret store will issue the decryption keys")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_vaultAddress"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"The contract address of the vault")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_nftContractAddress"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"NFT contract to use")))),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[0]"),(0,l.kt)("td",{parentName:"tr",align:null},"enum ConditionStoreLibrary.ConditionState"),(0,l.kt)("td",{parentName:"tr",align:null},"condition state (Fulfilled/Aborted)")))),(0,l.kt)("h2",{id:"inftaccess"},"INFTAccess"),(0,l.kt)("h3",{id:"fulfilled-5"},"Fulfilled"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"event Fulfilled(bytes32 _agreementId, bytes32 _documentId, address _grantee, bytes32 _conditionId)\n")),(0,l.kt)("h3",{id:"hashvalues-9"},"hashValues"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function hashValues(bytes32 _documentId, address _grantee, address _contractAddress) external pure returns (bytes32)\n")),(0,l.kt)("p",null,"hashValues generates the hash of condition inputs\nwith the following parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_documentId"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"refers to the DID in which secret store will issue the decryption keys")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_grantee"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"is the address of the granted user or the DID provider")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_contractAddress"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"contract address holding the NFT (ERC-721) or the NFT Factory (ERC-1155)")))),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[0]"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32 hash of all these values")))),(0,l.kt)("h3",{id:"fulfill-10"},"fulfill"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function fulfill(bytes32 _agreementId, bytes32 _documentId, address _grantee, address _contractAddress) external returns (enum ConditionStoreLibrary.ConditionState)\n")),(0,l.kt)("p",null,"fulfill NFT Access conditions"),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"only DID owner or DID provider can call this\nmethod. Fulfill method sets the permissions\nfor the granted consumer's address to true then\nfulfill the condition")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_agreementId"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"agreement identifier")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_documentId"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"refers to the DID in which secret store will issue the decryption keys")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_grantee"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"is the address of the granted user or the DID provider")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_contractAddress"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"contract address holding the NFT (ERC-721) or the NFT Factory (ERC-1155)")))),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[0]"),(0,l.kt)("td",{parentName:"tr",align:null},"enum ConditionStoreLibrary.ConditionState"),(0,l.kt)("td",{parentName:"tr",align:null},"condition state (Fulfilled/Aborted)")))),(0,l.kt)("h2",{id:"inftholder"},"INFTHolder"),(0,l.kt)("h3",{id:"fulfilled-6"},"Fulfilled"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"event Fulfilled(bytes32 _agreementId, bytes32 _did, address _address, bytes32 _conditionId, uint256 _amount)\n")),(0,l.kt)("h3",{id:"hashvalues-10"},"hashValues"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function hashValues(bytes32 _did, address _holderAddress, uint256 _amount, address _contractAddress) external pure returns (bytes32)\n")),(0,l.kt)("p",null,"hashValues generates the hash of condition inputs\nwith the following parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_did"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"the Decentralized Identifier of the asset")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_holderAddress"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"the address of the NFT holder")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_amount"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"is the amount NFTs that need to be hold by the holder")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_contractAddress"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"contract address holding the NFT (ERC-721) or the NFT Factory (ERC-1155)")))),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[0]"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32 hash of all these values")))),(0,l.kt)("h3",{id:"fulfill-11"},"fulfill"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function fulfill(bytes32 _agreementId, bytes32 _did, address _holderAddress, uint256 _amount, address _contractAddress) external returns (enum ConditionStoreLibrary.ConditionState)\n")),(0,l.kt)("p",null,"fulfill requires a validation that holder has enough\nNFTs for a specific DID"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_agreementId"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"SEA agreement identifier")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_did"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"the Decentralized Identifier of the asset")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_holderAddress"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"the contract address where the reward is locked")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_amount"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"is the amount of NFT to be hold")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_contractAddress"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"contract address holding the NFT (ERC-721) or the NFT Factory (ERC-1155)")))),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[0]"),(0,l.kt)("td",{parentName:"tr",align:null},"enum ConditionStoreLibrary.ConditionState"),(0,l.kt)("td",{parentName:"tr",align:null},"condition state")))),(0,l.kt)("h2",{id:"inftlock"},"INFTLock"),(0,l.kt)("h3",{id:"fulfilled-7"},"Fulfilled"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"event Fulfilled(bytes32 _agreementId, bytes32 _did, address _lockAddress, bytes32 _conditionId, uint256 _amount, address _receiver, address _nftContractAddress)\n")),(0,l.kt)("h3",{id:"hashvalues-11"},"hashValues"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function hashValues(bytes32 _did, address _lockAddress, uint256 _amount, address _nftContractAddress) external pure returns (bytes32)\n")),(0,l.kt)("p",null,"hashValues generates the hash of condition inputs\nwith the following parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_did"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"the DID of the asset with NFTs attached to lock")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_lockAddress"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"the contract address where the NFT will be locked")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_amount"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"is the amount of the NFTs locked")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_nftContractAddress"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"Is the address of the NFT (ERC-721, ERC-1155) contract to use")))),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[0]"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32 hash of all these values")))),(0,l.kt)("h3",{id:"hashvaluesmarked"},"hashValuesMarked"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function hashValuesMarked(bytes32 _did, address _lockAddress, uint256 _amount, address _receiver, address _nftContractAddress) external pure returns (bytes32)\n")),(0,l.kt)("h3",{id:"fulfill-12"},"fulfill"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function fulfill(bytes32 _agreementId, bytes32 _did, address _lockAddress, uint256 _amount, address _nftContractAddress) external returns (enum ConditionStoreLibrary.ConditionState)\n")),(0,l.kt)("p",null,"fulfill the transfer NFT condition"),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"Fulfill method transfer a certain amount of NFTs\nto the _nftReceiver address.\nWhen true then fulfill the condition")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_agreementId"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"agreement identifier")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_did"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"refers to the DID in which secret store will issue the decryption keys")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_lockAddress"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"the contract address where the NFT will be locked")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_amount"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"is the amount of the locked tokens")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_nftContractAddress"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"Is the address of the NFT (ERC-721) contract to use")))),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[0]"),(0,l.kt)("td",{parentName:"tr",align:null},"enum ConditionStoreLibrary.ConditionState"),(0,l.kt)("td",{parentName:"tr",align:null},"condition state (Fulfilled/Aborted)")))),(0,l.kt)("h3",{id:"fulfillmarked"},"fulfillMarked"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function fulfillMarked(bytes32 _agreementId, bytes32 _did, address _lockAddress, uint256 _amount, address _receiver, address _nftContractAddress) external returns (enum ConditionStoreLibrary.ConditionState)\n")),(0,l.kt)("h2",{id:"itransfernft"},"ITransferNFT"),(0,l.kt)("h3",{id:"fulfilled-8"},"Fulfilled"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"event Fulfilled(bytes32 _agreementId, bytes32 _did, address _receiver, uint256 _amount, bytes32 _conditionId, address _contract)\n")),(0,l.kt)("h3",{id:"hashvalues-12"},"hashValues"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function hashValues(bytes32 _did, address _nftHolder, address _nftReceiver, uint256 _nftAmount, bytes32 _lockCondition, address _contract, bool _transfer) external pure returns (bytes32)\n")),(0,l.kt)("p",null,"hashValues generates the hash of condition inputs\nwith the following parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_did"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"refers to the DID in which secret store will issue the decryption keys")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_nftHolder"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null})),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_nftReceiver"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"is the address of the granted user or the DID provider")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_nftAmount"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"amount of NFTs to transfer")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_lockCondition"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"lock condition identifier")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_contract"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null})),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_transfer"),(0,l.kt)("td",{parentName:"tr",align:null},"bool"),(0,l.kt)("td",{parentName:"tr",align:null},"Indicates if the NFT will be transferred (true) or minted (false)")))),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[0]"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32 hash of all these values")))),(0,l.kt)("h3",{id:"fulfill-13"},"fulfill"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function fulfill(bytes32 _agreementId, bytes32 _did, address _nftReceiver, uint256 _nftAmount, bytes32 _lockPaymentCondition, address _contract, bool _transfer) external returns (enum ConditionStoreLibrary.ConditionState)\n")),(0,l.kt)("p",null,"fulfill the transfer NFT condition"),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"Fulfill method transfer a certain amount of NFTs\nto the _nftReceiver address.\nWhen true then fulfill the condition")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_agreementId"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"agreement identifier")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_did"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"refers to the DID in which secret store will issue the decryption keys")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_nftReceiver"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"is the address of the account to receive the NFT")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_nftAmount"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"amount of NFTs to transfer")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_lockPaymentCondition"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"lock payment condition identifier")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_contract"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null})),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_transfer"),(0,l.kt)("td",{parentName:"tr",align:null},"bool"),(0,l.kt)("td",{parentName:"tr",align:null},"Indicates if the NFT will be transferred (true) or minted (false)")))),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[0]"),(0,l.kt)("td",{parentName:"tr",align:null},"enum ConditionStoreLibrary.ConditionState"),(0,l.kt)("td",{parentName:"tr",align:null},"condition state (Fulfilled/Aborted)")))),(0,l.kt)("h3",{id:"getnftdefaultaddress"},"getNFTDefaultAddress"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function getNFTDefaultAddress() external view returns (address)\n")),(0,l.kt)("p",null,"returns if the default NFT contract address"),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"The default NFT contract address was given to the Transfer Condition during\nthe contract initialization")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[0]"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"the NFT contract address used by default in the transfer condition")))),(0,l.kt)("h2",{id:"nft721holdercondition"},"NFT721HolderCondition"),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"Implementation of the Nft Holder Condition")),(0,l.kt)("h3",{id:"condition_type-6"},"CONDITION_TYPE"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"bytes32 CONDITION_TYPE\n")),(0,l.kt)("h3",{id:"initialize-11"},"initialize"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function initialize(address _owner, address _conditionStoreManagerAddress) external\n")),(0,l.kt)("p",null,"initialize init the\ncontract with the following parameters"),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"this function is called only once during the contract\ninitialization.")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_owner"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"contract's owner account address")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_conditionStoreManagerAddress"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"condition store manager address")))),(0,l.kt)("h3",{id:"hashvalues-13"},"hashValues"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function hashValues(bytes32 _did, address _holderAddress, uint256 _amount, address _contractAddress) public pure returns (bytes32)\n")),(0,l.kt)("p",null,"hashValues generates the hash of condition inputs\nwith the following parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_did"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"the Decentralized Identifier of the asset")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_holderAddress"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"the address of the NFT holder")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_amount"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"is the amount NFTs that need to be hold by the holder")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_contractAddress"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"contract address holding the NFT (ERC-721) or the NFT Factory (ERC-1155)")))),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[0]"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32 hash of all these values")))),(0,l.kt)("h3",{id:"fulfill-14"},"fulfill"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function fulfill(bytes32 _agreementId, bytes32 _did, address _holderAddress, uint256 _amount, address _contractAddress) external returns (enum ConditionStoreLibrary.ConditionState)\n")),(0,l.kt)("p",null,"fulfill requires a validation that holder has enough\nNFTs for a specific DID"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_agreementId"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"SEA agreement identifier")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_did"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"the Decentralized Identifier of the asset")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_holderAddress"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"the contract address where the reward is locked")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_amount"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"is the amount of NFT to be hold")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_contractAddress"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"contract address holding the NFT (ERC-721) or the NFT Factory (ERC-1155)")))),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[0]"),(0,l.kt)("td",{parentName:"tr",align:null},"enum ConditionStoreLibrary.ConditionState"),(0,l.kt)("td",{parentName:"tr",align:null},"condition state")))),(0,l.kt)("h2",{id:"nft721lockcondition"},"NFT721LockCondition"),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"Implementation of the NFT Lock Condition for ERC-721 based NFTs")),(0,l.kt)("h3",{id:"condition_type-7"},"CONDITION_TYPE"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"bytes32 CONDITION_TYPE\n")),(0,l.kt)("h3",{id:"initialize-12"},"initialize"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function initialize(address _owner, address _conditionStoreManagerAddress) external\n")),(0,l.kt)("p",null,"initialize init the  contract with the following parameters"),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"this function is called only once during the contract\ninitialization.")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_owner"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"contract's owner account address")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_conditionStoreManagerAddress"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"condition store manager address")))),(0,l.kt)("h3",{id:"hashvalues-14"},"hashValues"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function hashValues(bytes32 _did, address _lockAddress, uint256 _amount, address _nftContractAddress) public pure returns (bytes32)\n")),(0,l.kt)("p",null,"hashValues generates the hash of condition inputs\nwith the following parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_did"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"the DID of the asset with NFTs attached to lock")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_lockAddress"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"the contract address where the NFT will be locked")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_amount"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"is the amount of the locked tokens")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_nftContractAddress"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"Is the address of the NFT (ERC-721) contract to use")))),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[0]"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32 hash of all these values")))),(0,l.kt)("h3",{id:"hashvaluesmarked-1"},"hashValuesMarked"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function hashValuesMarked(bytes32 _did, address _lockAddress, uint256 _amount, address _receiver, address _nftContractAddress) public pure returns (bytes32)\n")),(0,l.kt)("h3",{id:"fulfillmarked-1"},"fulfillMarked"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function fulfillMarked(bytes32 _agreementId, bytes32 _did, address _lockAddress, uint256 _amount, address _receiver, address _nftContractAddress) public returns (enum ConditionStoreLibrary.ConditionState)\n")),(0,l.kt)("p",null,"fulfill the transfer NFT condition"),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"Fulfill method lock a NFT into the ",(0,l.kt)("inlineCode",{parentName:"em"},"_lockAddress"),".")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_agreementId"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"agreement identifier")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_did"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"refers to the DID in which secret store will issue the decryption keys")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_lockAddress"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"the contract address where the NFT will be locked")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_amount"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"is the amount of the locked tokens (1)")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_receiver"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null})),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_nftContractAddress"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"Is the address of the NFT (ERC-721) contract to use")))),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[0]"),(0,l.kt)("td",{parentName:"tr",align:null},"enum ConditionStoreLibrary.ConditionState"),(0,l.kt)("td",{parentName:"tr",align:null},"condition state (Fulfilled/Aborted)")))),(0,l.kt)("h3",{id:"fulfill-15"},"fulfill"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function fulfill(bytes32 _agreementId, bytes32 _did, address _lockAddress, uint256 _amount, address _nftContractAddress) external returns (enum ConditionStoreLibrary.ConditionState)\n")),(0,l.kt)("p",null,"fulfill the transfer NFT condition"),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"Fulfill method transfer a certain amount of NFTs\nto the _nftReceiver address.\nWhen true then fulfill the condition")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_agreementId"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"agreement identifier")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_did"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"refers to the DID in which secret store will issue the decryption keys")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_lockAddress"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"the contract address where the NFT will be locked")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_amount"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"is the amount of the locked tokens")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_nftContractAddress"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"Is the address of the NFT (ERC-721) contract to use")))),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[0]"),(0,l.kt)("td",{parentName:"tr",align:null},"enum ConditionStoreLibrary.ConditionState"),(0,l.kt)("td",{parentName:"tr",align:null},"condition state (Fulfilled/Aborted)")))),(0,l.kt)("h3",{id:"onerc721received"},"onERC721Received"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function onERC721Received(address, address, uint256, bytes) public virtual returns (bytes4)\n")),(0,l.kt)("p",null,"Always returns ",(0,l.kt)("inlineCode",{parentName:"p"},"IERC721Receiver.onERC721Received.selector"),"."),(0,l.kt)("h2",{id:"nftaccesscondition"},"NFTAccessCondition"),(0,l.kt)("p",null,"_Implementation of the Access Condition specific for NFTs"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"}," NFT Access Condition is special condition used to give access \n to a specific NFT related to a DID._\n")),(0,l.kt)("h3",{id:"condition_type-8"},"CONDITION_TYPE"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"bytes32 CONDITION_TYPE\n")),(0,l.kt)("h3",{id:"documentpermission-1"},"DocumentPermission"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"struct DocumentPermission {\n  bytes32 agreementIdDeprecated;\n  mapping(address &#x3D;&gt; bool) permission;\n}\n")),(0,l.kt)("h3",{id:"nftpermissions"},"nftPermissions"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"mapping(bytes32 => struct NFTAccessCondition.DocumentPermission) nftPermissions\n")),(0,l.kt)("h3",{id:"didregistry-3"},"didRegistry"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"contract DIDRegistry didRegistry\n")),(0,l.kt)("h3",{id:"onlydidownerorprovider-2"},"onlyDIDOwnerOrProvider"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"modifier onlyDIDOwnerOrProvider(bytes32 _documentId)\n")),(0,l.kt)("h3",{id:"initialize-13"},"initialize"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function initialize(address _owner, address _conditionStoreManagerAddress, address _didRegistryAddress) external\n")),(0,l.kt)("p",null,"initialize init the\ncontract with the following parameters"),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"this function is called only once during the contract\ninitialization.")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_owner"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"contract's owner account address")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_conditionStoreManagerAddress"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"condition store manager address")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_didRegistryAddress"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"DID registry address")))),(0,l.kt)("h3",{id:"hashvalues-15"},"hashValues"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function hashValues(bytes32 _documentId, address _grantee) public view returns (bytes32)\n")),(0,l.kt)("p",null,"hashValues generates the hash of condition inputs\nwith the following parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_documentId"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"refers to the DID in which secret store will issue the decryption keys")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_grantee"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"is the address of the granted user or the DID provider")))),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[0]"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32 hash of all these values")))),(0,l.kt)("h3",{id:"hashvalues-16"},"hashValues"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function hashValues(bytes32 _documentId, address _grantee, address _contractAddress) public pure returns (bytes32)\n")),(0,l.kt)("p",null,"hashValues generates the hash of condition inputs\nwith the following parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_documentId"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"refers to the DID in which secret store will issue the decryption keys")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_grantee"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"is the address of the granted user or the DID provider")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_contractAddress"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"contract address holding the NFT (ERC-721) or the NFT Factory (ERC-1155)")))),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[0]"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32 hash of all these values")))),(0,l.kt)("h3",{id:"fulfill-16"},"fulfill"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function fulfill(bytes32 _agreementId, bytes32 _documentId, address _grantee) public returns (enum ConditionStoreLibrary.ConditionState)\n")),(0,l.kt)("p",null,"fulfill NFT Access condition"),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"only DID owner or DID provider can call this\nmethod. Fulfill method sets the permissions\nfor the granted consumer's address to true then\nfulfill the condition")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_agreementId"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"agreement identifier")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_documentId"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"refers to the DID in which secret store will issue the decryption keys")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_grantee"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"is the address of the granted user or the DID provider")))),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[0]"),(0,l.kt)("td",{parentName:"tr",align:null},"enum ConditionStoreLibrary.ConditionState"),(0,l.kt)("td",{parentName:"tr",align:null},"condition state (Fulfilled/Aborted)")))),(0,l.kt)("h3",{id:"fulfill-17"},"fulfill"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function fulfill(bytes32 _agreementId, bytes32 _documentId, address _grantee, address _contractAddress) public returns (enum ConditionStoreLibrary.ConditionState)\n")),(0,l.kt)("p",null,"fulfill NFT Access condition"),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"only DID owner or DID provider can call this\nmethod. Fulfill method sets the permissions\nfor the granted consumer's address to true then\nfulfill the condition")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_agreementId"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"agreement identifier")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_documentId"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"refers to the DID in which secret store will issue the decryption keys")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_grantee"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"is the address of the granted user or the DID provider")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_contractAddress"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"is the contract address of the NFT implementation (ERC-1155 or ERC-721)")))),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[0]"),(0,l.kt)("td",{parentName:"tr",align:null},"enum ConditionStoreLibrary.ConditionState"),(0,l.kt)("td",{parentName:"tr",align:null},"condition state (Fulfilled/Aborted)")))),(0,l.kt)("h3",{id:"grantpermission-1"},"grantPermission"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function grantPermission(address _grantee, bytes32 _documentId) public\n")),(0,l.kt)("p",null,"grantPermission is called only by DID owner or provider"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_grantee"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"is the address of the granted user or the DID provider")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_documentId"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"refers to the DID in which secret store will issue the decryption keys")))),(0,l.kt)("h3",{id:"checkpermissions-1"},"checkPermissions"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function checkPermissions(address _grantee, bytes32 _documentId) external view returns (bool permissionGranted)\n")),(0,l.kt)("p",null,"checkPermissions is called to validate the permissions of user related to the NFT attached to an asset"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_grantee"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"is the address of the granted user or the DID provider")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_documentId"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"refers to the DID")))),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"permissionGranted"),(0,l.kt)("td",{parentName:"tr",align:null},"bool"),(0,l.kt)("td",{parentName:"tr",align:null},"true if the access was granted")))),(0,l.kt)("h2",{id:"nftholdercondition"},"NFTHolderCondition"),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"Implementation of the Nft Holder Condition")),(0,l.kt)("h3",{id:"erc1155"},"erc1155"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"contract ERC1155BurnableUpgradeable erc1155\n")),(0,l.kt)("h3",{id:"condition_type-9"},"CONDITION_TYPE"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"bytes32 CONDITION_TYPE\n")),(0,l.kt)("h3",{id:"initialize-14"},"initialize"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function initialize(address _owner, address _conditionStoreManagerAddress, address _ercAddress) external\n")),(0,l.kt)("p",null,"initialize init the\ncontract with the following parameters"),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"this function is called only once during the contract\ninitialization.")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_owner"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"contract's owner account address")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_conditionStoreManagerAddress"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"condition store manager address")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_ercAddress"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"Nevermined ERC-1155 address")))),(0,l.kt)("h3",{id:"hashvalues-17"},"hashValues"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function hashValues(bytes32 _did, address _holderAddress, uint256 _amount) public view returns (bytes32)\n")),(0,l.kt)("p",null,"hashValues generates the hash of condition inputs\nwith the following parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_did"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"the Decentralized Identifier of the asset")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_holderAddress"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"the address of the NFT holder")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_amount"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"is the amount NFTs that need to be hold by the holder")))),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[0]"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32 hash of all these values")))),(0,l.kt)("h3",{id:"hashvalues-18"},"hashValues"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function hashValues(bytes32 _did, address _holderAddress, uint256 _amount, address _contractAddress) public pure returns (bytes32)\n")),(0,l.kt)("p",null,"hashValues generates the hash of condition inputs\nwith the following parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_did"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"the Decentralized Identifier of the asset")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_holderAddress"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"the address of the NFT holder")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_amount"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"is the amount NFTs that need to be hold by the holder")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_contractAddress"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"contract address holding the NFT (ERC-721) or the NFT Factory (ERC-1155)")))),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[0]"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32 hash of all these values")))),(0,l.kt)("h3",{id:"fulfill-18"},"fulfill"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function fulfill(bytes32 _agreementId, bytes32 _did, address _holderAddress, uint256 _amount) public returns (enum ConditionStoreLibrary.ConditionState)\n")),(0,l.kt)("p",null,"fulfill requires a validation that holder has enough\nNFTs for a specific DID"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_agreementId"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"SEA agreement identifier")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_did"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"the Decentralized Identifier of the asset")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_holderAddress"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"the contract address where the reward is locked")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_amount"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"is the amount of NFT to be hold")))),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[0]"),(0,l.kt)("td",{parentName:"tr",align:null},"enum ConditionStoreLibrary.ConditionState"),(0,l.kt)("td",{parentName:"tr",align:null},"condition state")))),(0,l.kt)("h3",{id:"fulfill-19"},"fulfill"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function fulfill(bytes32 _agreementId, bytes32 _did, address _holderAddress, uint256 _amount, address _contractAddress) public returns (enum ConditionStoreLibrary.ConditionState)\n")),(0,l.kt)("p",null,"fulfill requires a validation that holder has enough\nNFTs for a specific DID"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_agreementId"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"SEA agreement identifier")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_did"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"the Decentralized Identifier of the asset")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_holderAddress"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"the contract address where the reward is locked")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_amount"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"is the amount of NFT to be hold")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_contractAddress"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"contract address holding the NFT (ERC-721) or the NFT Factory (ERC-1155)")))),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[0]"),(0,l.kt)("td",{parentName:"tr",align:null},"enum ConditionStoreLibrary.ConditionState"),(0,l.kt)("td",{parentName:"tr",align:null},"condition state")))),(0,l.kt)("h2",{id:"nftlockcondition"},"NFTLockCondition"),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"Implementation of the NFT Lock Condition")),(0,l.kt)("h3",{id:"erc1155-1"},"erc1155"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"contract IERC1155Upgradeable erc1155\n")),(0,l.kt)("h3",{id:"condition_type-10"},"CONDITION_TYPE"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"bytes32 CONDITION_TYPE\n")),(0,l.kt)("h3",{id:"erc1155_accepted"},"ERC1155_ACCEPTED"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"bytes4 ERC1155_ACCEPTED\n")),(0,l.kt)("h3",{id:"erc1155_batch_accepted"},"ERC1155_BATCH_ACCEPTED"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"bytes4 ERC1155_BATCH_ACCEPTED\n")),(0,l.kt)("h3",{id:"initialize-15"},"initialize"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function initialize(address _owner, address _conditionStoreManagerAddress, address _ercAddress) external\n")),(0,l.kt)("p",null,"initialize init the  contract with the following parameters"),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"this function is called only once during the contract\ninitialization.")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_owner"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"contract's owner account address")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_conditionStoreManagerAddress"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"condition store manager address")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_ercAddress"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"Nevermined ERC-1155 address")))),(0,l.kt)("h3",{id:"hashvalues-19"},"hashValues"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function hashValues(bytes32 _did, address _lockAddress, uint256 _amount) public view returns (bytes32)\n")),(0,l.kt)("p",null,"hashValues generates the hash of condition inputs\nwith the following parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_did"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"the DID of the asset with NFTs attached to lock")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_lockAddress"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"the contract address where the NFT will be locked")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_amount"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"is the amount of the locked tokens")))),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[0]"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32 hash of all these values")))),(0,l.kt)("h3",{id:"hashvalues-20"},"hashValues"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function hashValues(bytes32 _did, address _lockAddress, uint256 _amount, address _nftContractAddress) public pure returns (bytes32)\n")),(0,l.kt)("p",null,"hashValues generates the hash of condition inputs\nwith the following parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_did"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"the DID of the asset with NFTs attached to lock")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_lockAddress"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"the contract address where the NFT will be locked")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_amount"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"is the amount of the locked tokens")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_nftContractAddress"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"Is the address of the NFT (ERC-1155) contract to use")))),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[0]"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32 hash of all these values")))),(0,l.kt)("h3",{id:"hashvaluesmarked-2"},"hashValuesMarked"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function hashValuesMarked(bytes32 _did, address _lockAddress, uint256 _amount, address _receiver, address _nftContractAddress) public pure returns (bytes32)\n")),(0,l.kt)("h3",{id:"fulfill-20"},"fulfill"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function fulfill(bytes32 _agreementId, bytes32 _did, address _lockAddress, uint256 _amount) public returns (enum ConditionStoreLibrary.ConditionState)\n")),(0,l.kt)("p",null,"fulfill the transfer NFT condition"),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"Fulfill method transfer a certain amount of NFTs\nto the _nftReceiver address.\nWhen true then fulfill the condition")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_agreementId"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"agreement identifier")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_did"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"refers to the DID in which secret store will issue the decryption keys")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_lockAddress"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"the contract address where the NFT will be locked")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_amount"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"is the amount of the locked tokens")))),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[0]"),(0,l.kt)("td",{parentName:"tr",align:null},"enum ConditionStoreLibrary.ConditionState"),(0,l.kt)("td",{parentName:"tr",align:null},"condition state (Fulfilled/Aborted)")))),(0,l.kt)("h3",{id:"fulfill-21"},"fulfill"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function fulfill(bytes32 _agreementId, bytes32 _did, address _lockAddress, uint256 _amount, address _nft) public returns (enum ConditionStoreLibrary.ConditionState)\n")),(0,l.kt)("h3",{id:"fulfillmarked-2"},"fulfillMarked"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function fulfillMarked(bytes32 _agreementId, bytes32 _did, address _lockAddress, uint256 _amount, address _receiver, address _nftContractAddress) public returns (enum ConditionStoreLibrary.ConditionState)\n")),(0,l.kt)("p",null,"fulfill the transfer NFT condition"),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"Fulfill method transfer a certain amount of NFTs\nto the _nftReceiver address.\nWhen true then fulfill the condition")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_agreementId"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"agreement identifier")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_did"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"refers to the DID in which secret store will issue the decryption keys")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_lockAddress"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"the contract address where the NFT will be locked")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_amount"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"is the amount of the locked tokens")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_receiver"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null})),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_nftContractAddress"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"Is the address of the NFT (ERC-1155) contract to use")))),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[0]"),(0,l.kt)("td",{parentName:"tr",align:null},"enum ConditionStoreLibrary.ConditionState"),(0,l.kt)("td",{parentName:"tr",align:null},"condition state (Fulfilled/Aborted)")))),(0,l.kt)("h3",{id:"onerc1155received"},"onERC1155Received"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function onERC1155Received(address, address, uint256, uint256, bytes) external pure returns (bytes4)\n")),(0,l.kt)("h3",{id:"onerc1155batchreceived"},"onERC1155BatchReceived"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function onERC1155BatchReceived(address, address, uint256[], uint256[], bytes) external pure returns (bytes4)\n")),(0,l.kt)("h3",{id:"supportsinterface"},"supportsInterface"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function supportsInterface(bytes4 interfaceId) external pure returns (bool)\n")),(0,l.kt)("p",null,"_Returns true if this contract implements the interface defined by\n",(0,l.kt)("inlineCode",{parentName:"p"},"interfaceId"),". See the corresponding\n",(0,l.kt)("a",{parentName:"p",href:"https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified%5BEIP"},"https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP")," section]\nto learn more about how these ids are created."),(0,l.kt)("p",null,"This function call must use less than 30 000 gas._"),(0,l.kt)("h2",{id:"transfernft721condition"},"TransferNFT721Condition"),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"Implementation of condition allowing to transfer an NFT\nbetween the original owner and a receiver")),(0,l.kt)("h3",{id:"condition_type-11"},"CONDITION_TYPE"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"bytes32 CONDITION_TYPE\n")),(0,l.kt)("h3",{id:"market_role"},"MARKET_ROLE"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"bytes32 MARKET_ROLE\n")),(0,l.kt)("h3",{id:"erc721"},"erc721"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"contract NFT721Upgradeable erc721\n")),(0,l.kt)("h3",{id:"_lockconditionaddress-1"},"_lockConditionAddress"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"address _lockConditionAddress\n")),(0,l.kt)("h3",{id:"proxy_role-3"},"PROXY_ROLE"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"bytes32 PROXY_ROLE\n")),(0,l.kt)("h3",{id:"didregistry-4"},"didRegistry"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"contract DIDRegistry didRegistry\n")),(0,l.kt)("h3",{id:"grantproxyrole-3"},"grantProxyRole"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function grantProxyRole(address _address) public\n")),(0,l.kt)("h3",{id:"revokeproxyrole-3"},"revokeProxyRole"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function revokeProxyRole(address _address) public\n")),(0,l.kt)("h3",{id:"initialize-16"},"initialize"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function initialize(address _owner, address _conditionStoreManagerAddress, address _didRegistryAddress, address _ercAddress, address _lockNFTConditionAddress) external\n")),(0,l.kt)("p",null,"initialize init the contract with the following parameters"),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"this function is called only once during the contract\ninitialization.")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_owner"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"contract's owner account address")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_conditionStoreManagerAddress"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"condition store manager address")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_didRegistryAddress"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"DID Registry address")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_ercAddress"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"Nevermined ERC-721 address")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_lockNFTConditionAddress"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null})))),(0,l.kt)("h3",{id:"getnftdefaultaddress-1"},"getNFTDefaultAddress"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function getNFTDefaultAddress() external view returns (address)\n")),(0,l.kt)("p",null,"returns if the default NFT contract address"),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"The default NFT contract address was given to the Transfer Condition during\nthe contract initialization")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[0]"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"the NFT contract address used by default in the transfer condition")))),(0,l.kt)("h3",{id:"hashvalues-21"},"hashValues"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function hashValues(bytes32 _did, address _nftHolder, address _nftReceiver, uint256 _nftAmount, bytes32 _lockCondition, address _contract, bool _transfer) public pure returns (bytes32)\n")),(0,l.kt)("p",null,"hashValues generates the hash of condition inputs\nwith the following parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_did"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"refers to the DID in which secret store will issue the decryption keys")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_nftHolder"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null})),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_nftReceiver"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"is the address of the granted user or the DID provider")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_nftAmount"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"amount of NFTs to transfer")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_lockCondition"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"lock condition identifier")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_contract"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"NFT contract to use")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_transfer"),(0,l.kt)("td",{parentName:"tr",align:null},"bool"),(0,l.kt)("td",{parentName:"tr",align:null})))),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[0]"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32 hash of all these values")))),(0,l.kt)("h3",{id:"encodeparams-1"},"encodeParams"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function encodeParams(bytes32 _did, address _nftHolder, address _nftReceiver, uint256 _nftAmount, bytes32 _lockPaymentCondition, address _nftContractAddress, bool _transfer) external pure returns (bytes)\n")),(0,l.kt)("p",null,"Encodes/serialize all the parameters received"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_did"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"refers to the DID in which secret store will issue the decryption keys")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_nftHolder"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"is the address of the account to receive the NFT")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_nftReceiver"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"is the address of the account to receive the NFT")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_nftAmount"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"amount of NFTs to transfer")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_lockPaymentCondition"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"lock payment condition identifier")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_nftContractAddress"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"the NFT contract to use")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_transfer"),(0,l.kt)("td",{parentName:"tr",align:null},"bool"),(0,l.kt)("td",{parentName:"tr",align:null},"if yes it does a transfer if false it mints the NFT")))),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[0]"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes"),(0,l.kt)("td",{parentName:"tr",align:null},"the encoded parameters")))),(0,l.kt)("h3",{id:"fulfill-22"},"fulfill"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function fulfill(bytes32 _agreementId, bytes32 _did, address _nftReceiver, uint256 _nftAmount, bytes32 _lockPaymentCondition, address _contract, bool _transfer) public returns (enum ConditionStoreLibrary.ConditionState)\n")),(0,l.kt)("p",null,"fulfill the transfer NFT condition"),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"Fulfill method transfer a certain amount of NFTs\nto the _nftReceiver address.\nWhen true then fulfill the condition")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_agreementId"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"agreement identifier")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_did"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"refers to the DID in which secret store will issue the decryption keys")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_nftReceiver"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"is the address of the account to receive the NFT")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_nftAmount"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"amount of NFTs to transfer")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_lockPaymentCondition"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"lock payment condition identifier")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_contract"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"NFT contract to use")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_transfer"),(0,l.kt)("td",{parentName:"tr",align:null},"bool"),(0,l.kt)("td",{parentName:"tr",align:null},"Indicates if the NFT will be transferred (true) or minted (false)")))),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[0]"),(0,l.kt)("td",{parentName:"tr",align:null},"enum ConditionStoreLibrary.ConditionState"),(0,l.kt)("td",{parentName:"tr",align:null},"condition state (Fulfilled/Aborted)")))),(0,l.kt)("h3",{id:"fulfillproxy-2"},"fulfillProxy"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function fulfillProxy(address _account, bytes32 _agreementId, bytes _params) external payable\n")),(0,l.kt)("p",null,"fulfill the transfer NFT condition by a proxy"),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"Fulfill method transfer a certain amount of NFTs")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_account"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"NFT Holder")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_agreementId"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"agreement identifier")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_params"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes"),(0,l.kt)("td",{parentName:"tr",align:null},"encoded parameters")))),(0,l.kt)("h3",{id:"fulfillinternal-1"},"fulfillInternal"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function fulfillInternal(address _account, bytes32 _agreementId, bytes32 _did, address _nftReceiver, uint256 _nftAmount, bytes32 _lockPaymentCondition, address _contract, bool _transfer, uint256 _expirationBlock) internal returns (enum ConditionStoreLibrary.ConditionState)\n")),(0,l.kt)("h3",{id:"fulfillfordelegate"},"fulfillForDelegate"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function fulfillForDelegate(bytes32 _agreementId, bytes32 _did, address _nftHolder, address _nftReceiver, uint256 _nftAmount, bytes32 _lockPaymentCondition, bool _transfer) public returns (enum ConditionStoreLibrary.ConditionState)\n")),(0,l.kt)("p",null,"fulfill the transfer NFT condition"),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"Fulfill method transfer a certain amount of NFTs\nto the _nftReceiver address in the DIDRegistry contract.\nWhen true then fulfill the condition")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_agreementId"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"agreement identifier")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_did"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"refers to the DID in which secret store will issue the decryption keys")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_nftHolder"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"is the address of the account to receive the NFT")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_nftReceiver"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"is the address of the account to receive the NFT")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_nftAmount"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"amount of NFTs to transfer")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_lockPaymentCondition"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"lock payment condition identifier")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_transfer"),(0,l.kt)("td",{parentName:"tr",align:null},"bool"),(0,l.kt)("td",{parentName:"tr",align:null},"if yes it does a transfer if false it mints the NFT")))),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[0]"),(0,l.kt)("td",{parentName:"tr",align:null},"enum ConditionStoreLibrary.ConditionState"),(0,l.kt)("td",{parentName:"tr",align:null},"condition state (Fulfilled/Aborted)")))),(0,l.kt)("h3",{id:"fulfillfordelegate-1"},"fulfillForDelegate"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function fulfillForDelegate(bytes32 _agreementId, bytes32 _did, address _nftHolder, address _nftReceiver, uint256 _nftAmount, bytes32 _lockPaymentCondition, bool _transfer, address _nftContractAddress, uint256 _expirationBlock) public returns (enum ConditionStoreLibrary.ConditionState)\n")),(0,l.kt)("p",null,"fulfill the transfer NFT condition"),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"Fulfill method transfer a certain amount of NFTs\nto the _nftReceiver address in the DIDRegistry contract.\nWhen true then fulfill the condition")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_agreementId"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"agreement identifier")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_did"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"refers to the DID in which secret store will issue the decryption keys")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_nftHolder"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"is the address of the account to receive the NFT")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_nftReceiver"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"is the address of the account to receive the NFT")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_nftAmount"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"amount of NFTs to transfer")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_lockPaymentCondition"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"lock payment condition identifier")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_transfer"),(0,l.kt)("td",{parentName:"tr",align:null},"bool"),(0,l.kt)("td",{parentName:"tr",align:null},"if yes it does a transfer if false it mints the NFT")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_nftContractAddress"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"the address of the ERC-721 NFT contract")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_expirationBlock"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"in which block the nft expires, if 0 it doesn't expire")))),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[0]"),(0,l.kt)("td",{parentName:"tr",align:null},"enum ConditionStoreLibrary.ConditionState"),(0,l.kt)("td",{parentName:"tr",align:null},"condition state (Fulfilled/Aborted)")))),(0,l.kt)("h2",{id:"transfernftcondition"},"TransferNFTCondition"),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"Implementation of condition allowing to transfer an NFT\nbetween the original owner and a receiver")),(0,l.kt)("h3",{id:"condition_type-12"},"CONDITION_TYPE"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"bytes32 CONDITION_TYPE\n")),(0,l.kt)("h3",{id:"market_role-1"},"MARKET_ROLE"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"bytes32 MARKET_ROLE\n")),(0,l.kt)("h3",{id:"erc1155-2"},"erc1155"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"contract NFTUpgradeable erc1155\n")),(0,l.kt)("h3",{id:"didregistry-5"},"didRegistry"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"contract DIDRegistry didRegistry\n")),(0,l.kt)("h3",{id:"proxy_role-4"},"PROXY_ROLE"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"bytes32 PROXY_ROLE\n")),(0,l.kt)("h3",{id:"grantproxyrole-4"},"grantProxyRole"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function grantProxyRole(address _address) public\n")),(0,l.kt)("h3",{id:"revokeproxyrole-4"},"revokeProxyRole"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function revokeProxyRole(address _address) public\n")),(0,l.kt)("h3",{id:"initialize-17"},"initialize"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function initialize(address _owner, address _conditionStoreManagerAddress, address _didRegistryAddress, address _ercAddress, address _nftContractAddress) external\n")),(0,l.kt)("p",null,"initialize init the contract with the following parameters"),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"this function is called only once during the contract\ninitialization.")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_owner"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"contract's owner account address")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_conditionStoreManagerAddress"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"condition store manager address")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_didRegistryAddress"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"DID Registry address")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_ercAddress"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"Nevermined ERC-1155 address")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_nftContractAddress"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"Market address")))),(0,l.kt)("h3",{id:"grantmarketrole"},"grantMarketRole"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function grantMarketRole(address _nftContractAddress) public\n")),(0,l.kt)("h3",{id:"revokemarketrole"},"revokeMarketRole"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function revokeMarketRole(address _nftContractAddress) public\n")),(0,l.kt)("h3",{id:"getnftdefaultaddress-2"},"getNFTDefaultAddress"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function getNFTDefaultAddress() external view returns (address)\n")),(0,l.kt)("p",null,"returns if the default NFT contract address"),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"The default NFT contract address was given to the Transfer Condition during\nthe contract initialization")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[0]"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"the NFT contract address used by default in the transfer condition")))),(0,l.kt)("h3",{id:"hashvalues-22"},"hashValues"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function hashValues(bytes32 _did, address _nftHolder, address _nftReceiver, uint256 _nftAmount, bytes32 _lockCondition) public view returns (bytes32)\n")),(0,l.kt)("p",null,"hashValues generates the hash of condition inputs\nwith the following parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_did"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"refers to the DID in which secret store will issue the decryption keys")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_nftHolder"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null})),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_nftReceiver"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"is the address of the granted user or the DID provider")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_nftAmount"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"amount of NFTs to transfer")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_lockCondition"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"lock condition identifier")))),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[0]"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32 hash of all these values")))),(0,l.kt)("h3",{id:"hashvalues-23"},"hashValues"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function hashValues(bytes32 _did, address _nftHolder, address _nftReceiver, uint256 _nftAmount, bytes32 _lockCondition, address _nftContractAddress, bool _transfer) public pure returns (bytes32)\n")),(0,l.kt)("p",null,"hashValues generates the hash of condition inputs\nwith the following parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_did"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"refers to the DID in which secret store will issue the decryption keys")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_nftHolder"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null})),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_nftReceiver"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"is the address of the granted user or the DID provider")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_nftAmount"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"amount of NFTs to transfer")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_lockCondition"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"lock condition identifier")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_nftContractAddress"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"NFT contract to use")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_transfer"),(0,l.kt)("td",{parentName:"tr",align:null},"bool"),(0,l.kt)("td",{parentName:"tr",align:null},"Indicates if the NFT will be transferred (true) or minted (false)")))),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[0]"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32 hash of all these values")))),(0,l.kt)("h3",{id:"fulfill-23"},"fulfill"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function fulfill(bytes32 _agreementId, bytes32 _did, address _nftReceiver, uint256 _nftAmount, bytes32 _lockPaymentCondition) public returns (enum ConditionStoreLibrary.ConditionState)\n")),(0,l.kt)("h3",{id:"encodeparams-2"},"encodeParams"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function encodeParams(bytes32 _did, address _nftHolder, address _nftReceiver, uint256 _nftAmount, bytes32 _lockPaymentCondition, address _nftContractAddress, bool _transfer) external pure returns (bytes)\n")),(0,l.kt)("p",null,"Encodes/serialize all the parameters received"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_did"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"refers to the DID in which secret store will issue the decryption keys")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_nftHolder"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"is the address of the account to receive the NFT")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_nftReceiver"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"is the address of the account to receive the NFT")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_nftAmount"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"amount of NFTs to transfer")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_lockPaymentCondition"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"lock payment condition identifier")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_nftContractAddress"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"the NFT contract to use")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_transfer"),(0,l.kt)("td",{parentName:"tr",align:null},"bool"),(0,l.kt)("td",{parentName:"tr",align:null},"if yes it does a transfer if false it mints the NFT")))),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[0]"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes"),(0,l.kt)("td",{parentName:"tr",align:null},"the encoded parameters")))),(0,l.kt)("h3",{id:"fulfillproxy-3"},"fulfillProxy"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function fulfillProxy(address _account, bytes32 _agreementId, bytes _params) external payable\n")),(0,l.kt)("p",null,"fulfill the transfer NFT condition by a proxy"),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"Fulfill method transfer a certain amount of NFTs")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_account"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"NFT Holder")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_agreementId"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"agreement identifier")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_params"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes"),(0,l.kt)("td",{parentName:"tr",align:null},"encoded parameters")))),(0,l.kt)("h3",{id:"fulfill-24"},"fulfill"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function fulfill(bytes32 _agreementId, bytes32 _did, address _nftReceiver, uint256 _nftAmount, bytes32 _lockPaymentCondition, address _nftContractAddress, bool _transfer) public returns (enum ConditionStoreLibrary.ConditionState)\n")),(0,l.kt)("p",null,"fulfill the transfer NFT condition"),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"Fulfill method transfer a certain amount of NFTs\nto the _nftReceiver address.\nWhen true then fulfill the condition")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_agreementId"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"agreement identifier")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_did"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"refers to the DID in which secret store will issue the decryption keys")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_nftReceiver"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"is the address of the account to receive the NFT")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_nftAmount"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"amount of NFTs to transfer")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_lockPaymentCondition"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"lock payment condition identifier")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_nftContractAddress"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"NFT contract to use")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_transfer"),(0,l.kt)("td",{parentName:"tr",align:null},"bool"),(0,l.kt)("td",{parentName:"tr",align:null},"Indicates if the NFT will be transferred (true) or minted (false)")))),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[0]"),(0,l.kt)("td",{parentName:"tr",align:null},"enum ConditionStoreLibrary.ConditionState"),(0,l.kt)("td",{parentName:"tr",align:null},"condition state (Fulfilled/Aborted)")))),(0,l.kt)("h3",{id:"fulfillinternal-2"},"fulfillInternal"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function fulfillInternal(address _account, bytes32 _agreementId, bytes32 _did, address _nftReceiver, uint256 _nftAmount, bytes32 _lockPaymentCondition, address _nftContractAddress, bool _transfer) internal returns (enum ConditionStoreLibrary.ConditionState)\n")),(0,l.kt)("h3",{id:"fulfillfordelegate-2"},"fulfillForDelegate"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function fulfillForDelegate(bytes32 _agreementId, bytes32 _did, address _nftHolder, address _nftReceiver, uint256 _nftAmount, bytes32 _lockPaymentCondition, bool _transfer) public returns (enum ConditionStoreLibrary.ConditionState)\n")),(0,l.kt)("p",null,"fulfill the transfer NFT condition"),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"Fulfill method transfer a certain amount of NFTs\nto the _nftReceiver address in the DIDRegistry contract.\nWhen true then fulfill the condition")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_agreementId"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"agreement identifier")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_did"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"refers to the DID in which secret store will issue the decryption keys")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_nftHolder"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"is the address of the account to receive the NFT")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_nftReceiver"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"is the address of the account to receive the NFT")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_nftAmount"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"amount of NFTs to transfer")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_lockPaymentCondition"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"lock payment condition identifier")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_transfer"),(0,l.kt)("td",{parentName:"tr",align:null},"bool"),(0,l.kt)("td",{parentName:"tr",align:null},"if yes it does a transfer if false it mints the NFT")))),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[0]"),(0,l.kt)("td",{parentName:"tr",align:null},"enum ConditionStoreLibrary.ConditionState"),(0,l.kt)("td",{parentName:"tr",align:null},"condition state (Fulfilled/Aborted)")))),(0,l.kt)("h3",{id:"fulfillfordelegate-3"},"fulfillForDelegate"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function fulfillForDelegate(bytes32 _agreementId, bytes32 _did, address _nftHolder, address _nftReceiver, uint256 _nftAmount, bytes32 _lockPaymentCondition, address _nftContractAddress, bool _transfer) public returns (enum ConditionStoreLibrary.ConditionState)\n")),(0,l.kt)("p",null,"fulfill the transfer NFT condition"),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"Fulfill method transfer a certain amount of NFTs\nto the _nftReceiver address in the DIDRegistry contract.\nWhen true then fulfill the condition")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_agreementId"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"agreement identifier")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_did"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"refers to the DID in which secret store will issue the decryption keys")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_nftHolder"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"is the address of the account to receive the NFT")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_nftReceiver"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"is the address of the account to receive the NFT")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_nftAmount"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"amount of NFTs to transfer")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_lockPaymentCondition"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"lock payment condition identifier")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_nftContractAddress"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"the address of the ERC-721 NFT contract")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_transfer"),(0,l.kt)("td",{parentName:"tr",align:null},"bool"),(0,l.kt)("td",{parentName:"tr",align:null},"if yes it does a transfer if false it mints the NFT")))),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[0]"),(0,l.kt)("td",{parentName:"tr",align:null},"enum ConditionStoreLibrary.ConditionState"),(0,l.kt)("td",{parentName:"tr",align:null},"condition state (Fulfilled/Aborted)")))),(0,l.kt)("h2",{id:"signcondition"},"SignCondition"),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"Implementation of the Sign Condition")),(0,l.kt)("h3",{id:"condition_type-13"},"CONDITION_TYPE"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"bytes32 CONDITION_TYPE\n")),(0,l.kt)("h3",{id:"initialize-18"},"initialize"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function initialize(address _owner, address _conditionStoreManagerAddress) external\n")),(0,l.kt)("p",null,"initialize init the\ncontract with the following parameters"),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"this function is called only once during the contract\ninitialization.")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_owner"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"contract's owner account address")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_conditionStoreManagerAddress"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"condition store manager address")))),(0,l.kt)("h3",{id:"hashvalues-24"},"hashValues"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function hashValues(bytes32 _message, address _publicKey) public pure returns (bytes32)\n")),(0,l.kt)("p",null,"hashValues generates the hash of condition inputs\nwith the following parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_message"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"the message to be signed")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_publicKey"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"the public key of the signing address")))),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[0]"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32 hash of all these values")))),(0,l.kt)("h3",{id:"fulfill-25"},"fulfill"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function fulfill(bytes32 _agreementId, bytes32 _message, address _publicKey, bytes _signature) public returns (enum ConditionStoreLibrary.ConditionState)\n")),(0,l.kt)("p",null,"fulfill validate the signed message and fulfill the condition"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_agreementId"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"SEA agreement identifier")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_message"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"the message to be signed")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_publicKey"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"the public key of the signing address")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_signature"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes"),(0,l.kt)("td",{parentName:"tr",align:null},"signature of the signed message using the public key")))),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[0]"),(0,l.kt)("td",{parentName:"tr",align:null},"enum ConditionStoreLibrary.ConditionState"),(0,l.kt)("td",{parentName:"tr",align:null},"condition state")))),(0,l.kt)("h2",{id:"thresholdcondition"},"ThresholdCondition"),(0,l.kt)("p",null,"_Implementation of the Threshold Condition"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"}," Threshold condition acts as a filter for a set of input condition(s) in which sends \n a signal whether to complete the flow execution or abort it. This type of conditions \n works as intermediary conditions where they wire SEA conditions in order to support  \n more complex scenarios._\n")),(0,l.kt)("h3",{id:"condition_type-14"},"CONDITION_TYPE"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"bytes32 CONDITION_TYPE\n")),(0,l.kt)("h3",{id:"initialize-19"},"initialize"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function initialize(address _owner, address _conditionStoreManagerAddress) external\n")),(0,l.kt)("p",null,"initialize init the\ncontract with the following parameters"),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"this function is called only once during the contract\ninitialization.")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_owner"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"contract's owner account address")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_conditionStoreManagerAddress"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"condition store manager address")))),(0,l.kt)("h3",{id:"hashvalues-25"},"hashValues"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function hashValues(bytes32[] inputConditions, uint256 threshold) public pure returns (bytes32)\n")),(0,l.kt)("p",null,"hashValues generates the hash of condition inputs\nwith the following parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"inputConditions"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32[]"),(0,l.kt)("td",{parentName:"tr",align:null},"array of input conditions IDs")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"threshold"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"the required number of fulfilled input conditions")))),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[0]"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32 hash of all these values")))),(0,l.kt)("h3",{id:"fulfill-26"},"fulfill"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function fulfill(bytes32 _agreementId, bytes32[] _inputConditions, uint256 threshold) external returns (enum ConditionStoreLibrary.ConditionState)\n")),(0,l.kt)("p",null,"fulfill threshold condition"),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"the fulfill method check whether input conditions are\nfulfilled or not.")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_agreementId"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"agreement identifier")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_inputConditions"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32[]"),(0,l.kt)("td",{parentName:"tr",align:null},"array of input conditions IDs")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"threshold"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"the required number of fulfilled input conditions")))),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[0]"),(0,l.kt)("td",{parentName:"tr",align:null},"enum ConditionStoreLibrary.ConditionState"),(0,l.kt)("td",{parentName:"tr",align:null},"condition state (Fulfilled/Aborted)")))),(0,l.kt)("h3",{id:"canfulfill"},"canFulfill"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function canFulfill(bytes32[] _inputConditions, uint256 threshold) private view returns (bool _fulfill)\n")),(0,l.kt)("p",null,"canFulfill check if condition can be fulfilled"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_inputConditions"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32[]"),(0,l.kt)("td",{parentName:"tr",align:null},"array of input conditions IDs")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"threshold"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"the required number of fulfilled input conditions")))),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_fulfill"),(0,l.kt)("td",{parentName:"tr",align:null},"bool"),(0,l.kt)("td",{parentName:"tr",align:null},"true if can fulfill")))),(0,l.kt)("h2",{id:"transferdidownershipcondition"},"TransferDIDOwnershipCondition"),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"Implementation of condition allowing to transfer the ownership\nbetween the original owner and a receiver")),(0,l.kt)("h3",{id:"condition_type-15"},"CONDITION_TYPE"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"bytes32 CONDITION_TYPE\n")),(0,l.kt)("h3",{id:"didregistry-6"},"didRegistry"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"contract DIDRegistry didRegistry\n")),(0,l.kt)("h3",{id:"fulfilled-9"},"Fulfilled"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"event Fulfilled(bytes32 _agreementId, bytes32 _did, address _receiver, bytes32 _conditionId)\n")),(0,l.kt)("h3",{id:"initialize-20"},"initialize"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function initialize(address _owner, address _conditionStoreManagerAddress, address _didRegistryAddress) external\n")),(0,l.kt)("p",null,"initialize init the contract with the following parameters"),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"this function is called only once during the contract\ninitialization.")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_owner"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"contract's owner account address")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_conditionStoreManagerAddress"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"condition store manager address")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_didRegistryAddress"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"DID Registry address")))),(0,l.kt)("h3",{id:"hashvalues-26"},"hashValues"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function hashValues(bytes32 _did, address _receiver) public pure returns (bytes32)\n")),(0,l.kt)("p",null,"hashValues generates the hash of condition inputs\nwith the following parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_did"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"refers to the DID in which secret store will issue the decryption keys")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_receiver"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"is the address of the granted user or the DID provider")))),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[0]"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32 hash of all these values")))),(0,l.kt)("h3",{id:"fulfill-27"},"fulfill"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function fulfill(bytes32 _agreementId, bytes32 _did, address _receiver) public returns (enum ConditionStoreLibrary.ConditionState)\n")),(0,l.kt)("p",null,"fulfill the transfer DID ownership condition"),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"only DID owner or DID provider can call this\nmethod. Fulfill method transfer full ownership permissions\nto to _receiver address.\nWhen true then fulfill the condition")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_agreementId"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"agreement identifier")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_did"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"refers to the DID in which secret store will issue the decryption keys")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_receiver"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"is the address of the granted user")))),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[0]"),(0,l.kt)("td",{parentName:"tr",align:null},"enum ConditionStoreLibrary.ConditionState"),(0,l.kt)("td",{parentName:"tr",align:null},"condition state (Fulfilled/Aborted)")))),(0,l.kt)("h2",{id:"whitelistingcondition"},"WhitelistingCondition"),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"Implementation of the Whitelisting Condition")),(0,l.kt)("h3",{id:"condition_type-16"},"CONDITION_TYPE"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"bytes32 CONDITION_TYPE\n")),(0,l.kt)("h3",{id:"initialize-21"},"initialize"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function initialize(address _owner, address _conditionStoreManagerAddress) external\n")),(0,l.kt)("p",null,"initialize init the\ncontract with the following parameters"),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"this function is called only once during the contract\ninitialization.")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_owner"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"contract's owner account address")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_conditionStoreManagerAddress"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"condition store manager address")))),(0,l.kt)("h3",{id:"hashvalues-27"},"hashValues"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function hashValues(address _listAddress, bytes32 _item) public pure returns (bytes32)\n")),(0,l.kt)("p",null,"hashValues generates the hash of condition inputs\nwith the following parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_listAddress"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"list contract address")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_item"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"item in the list")))),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[0]"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32 hash of all these values")))),(0,l.kt)("h3",{id:"fulfill-28"},"fulfill"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function fulfill(bytes32 _agreementId, address _listAddress, bytes32 _item) public returns (enum ConditionStoreLibrary.ConditionState)\n")),(0,l.kt)("p",null,"fulfill check whether address is whitelisted\nin order to fulfill the condition. This method will be\ncalled by any one in this whitelist."),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_agreementId"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"SEA agreement identifier")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_listAddress"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"list contract address")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_item"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"item in the list")))),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[0]"),(0,l.kt)("td",{parentName:"tr",align:null},"enum ConditionStoreLibrary.ConditionState"),(0,l.kt)("td",{parentName:"tr",align:null},"condition state")))),(0,l.kt)("h2",{id:"aaveborrowcondition"},"AaveBorrowCondition"),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"Implementation of the Aave Borrow Credit Condition")),(0,l.kt)("h3",{id:"aavecreditvault-1"},"aaveCreditVault"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"contract AaveCreditVault aaveCreditVault\n")),(0,l.kt)("h3",{id:"condition_type-17"},"CONDITION_TYPE"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"bytes32 CONDITION_TYPE\n")),(0,l.kt)("h3",{id:"fulfilled-10"},"Fulfilled"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"event Fulfilled(bytes32 _agreementId, bytes32 _did, bytes32 _conditionId)\n")),(0,l.kt)("h3",{id:"initialize-22"},"initialize"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function initialize(address _owner, address _conditionStoreManagerAddress) external\n")),(0,l.kt)("p",null,"initialize init the contract with the following parameters"),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"this function is called only once during the contract initialization.")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_owner"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"contract's owner account address")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_conditionStoreManagerAddress"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"condition store manager address")))),(0,l.kt)("h3",{id:"hashvalues-28"},"hashValues"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function hashValues(bytes32 _did, address _vaultAddress, address _assetToBorrow, uint256 _amount, uint256 _interestRateMode) public pure returns (bytes32)\n")),(0,l.kt)("p",null,"hashValues generates the hash of condition inputs\nwith the following parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_did"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"the DID of the asset")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_vaultAddress"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"the address of vault locking the deposited collateral and the asset")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_assetToBorrow"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"the address of the asset to borrow (i.e DAI)")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_amount"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"the amount of the ERC-20 the assets to borrow (i.e 50 DAI)")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_interestRateMode"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"interest rate type stable 1, variable 2")))),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[0]"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32 hash of all these values")))),(0,l.kt)("h3",{id:"fulfill-29"},"fulfill"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function fulfill(bytes32 _agreementId, bytes32 _did, address _vaultAddress, address _assetToBorrow, uint256 _amount, uint256 _interestRateMode) external returns (enum ConditionStoreLibrary.ConditionState)\n")),(0,l.kt)("p",null,"It allows the borrower to borrow the asset deposited by the lender"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_agreementId"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"the identifier of the agreement")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_did"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"the DID of the asset")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_vaultAddress"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"the address of vault locking the deposited collateral and the asset")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_assetToBorrow"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"the address of the asset to borrow (i.e DAI)")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_amount"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"the amount of the ERC-20 the assets to borrow (i.e 50 DAI)")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_interestRateMode"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"interest rate type stable 1, variable 2")))),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[0]"),(0,l.kt)("td",{parentName:"tr",align:null},"enum ConditionStoreLibrary.ConditionState"),(0,l.kt)("td",{parentName:"tr",align:null},"ConditionStoreLibrary.ConditionState the state of the condition (Fulfilled if everything went good)")))),(0,l.kt)("h2",{id:"aavecollateraldepositcondition"},"AaveCollateralDepositCondition"),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"Implementation of the Aave Collateral Deposit Condition\nThis condition allows a Lender to deposit the collateral that\ninto account the royalties to be paid to the original creators in a secondary market.")),(0,l.kt)("h3",{id:"aavecreditvault-2"},"aaveCreditVault"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"contract AaveCreditVault aaveCreditVault\n")),(0,l.kt)("h3",{id:"condition_type-18"},"CONDITION_TYPE"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"bytes32 CONDITION_TYPE\n")),(0,l.kt)("h3",{id:"fulfilled-11"},"Fulfilled"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"event Fulfilled(bytes32 _agreementId, bytes32 _did, bytes32 _conditionId)\n")),(0,l.kt)("h3",{id:"initialize-23"},"initialize"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function initialize(address _owner, address _conditionStoreManagerAddress) external\n")),(0,l.kt)("p",null,"initialize init the contract with the following parameters"),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"this function is called only once during the contract initialization.")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_owner"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"contract's owner account address")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_conditionStoreManagerAddress"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"condition store manager address")))),(0,l.kt)("h3",{id:"hashvalues-29"},"hashValues"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function hashValues(bytes32 _did, address _vaultAddress, address _collateralAsset, uint256 _collateralAmount, address _delegatedAsset, uint256 _delegatedAmount, uint256 _interestRateMode) public pure returns (bytes32)\n")),(0,l.kt)("p",null,"hashValues generates the hash of condition inputs\nwith the following parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_did"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"the DID of the asset")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_vaultAddress"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"Address of the vault")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_collateralAsset"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"the address of the ERC-20 that will be used as collateral (i.e WETH)")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_collateralAmount"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"the amount of the ERC-20 that will be used as collateral (i.e 10 WETH)")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_delegatedAsset"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"the address of the ERC-20 that will be delegated to the borrower (i.e DAI)")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_delegatedAmount"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"the amount of the ERC-20 that will be delegated to the borrower (i.e 500 DAI)")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_interestRateMode"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"interest rate type stable 1, variable 2")))),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[0]"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32 hash of all these values")))),(0,l.kt)("h3",{id:"fulfill-30"},"fulfill"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function fulfill(bytes32 _agreementId, bytes32 _did, address _vaultAddress, address _collateralAsset, uint256 _collateralAmount, address _delegatedAsset, uint256 _delegatedAmount, uint256 _interestRateMode) external payable returns (enum ConditionStoreLibrary.ConditionState)\n")),(0,l.kt)("p",null,"It fulfills the condition if the collateral can be deposited into the vault"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_agreementId"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"the identifier of the agreement")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_did"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"the DID of the asset")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_vaultAddress"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"Address of the vault")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_collateralAsset"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"the address of the ERC-20 that will be used as collateral (i.e WETH)")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_collateralAmount"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"the amount of the ERC-20 that will be used as collateral (i.e 10 WETH)")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_delegatedAsset"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"the address of the ERC-20 that will be delegated to the borrower (i.e DAI)")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_delegatedAmount"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"the amount of the ERC-20 that will be delegated to the borrower (i.e 500 DAI)")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_interestRateMode"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"interest rate type stable 1, variable 2")))),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[0]"),(0,l.kt)("td",{parentName:"tr",align:null},"enum ConditionStoreLibrary.ConditionState"),(0,l.kt)("td",{parentName:"tr",align:null},"ConditionStoreLibrary.ConditionState the state of the condition (Fulfilled if everything went good)")))),(0,l.kt)("h2",{id:"aavecollateralwithdrawcondition"},"AaveCollateralWithdrawCondition"),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"Implementation of the Collateral Withdraw Condition\nThis condition allows to credit delegator withdraw the collateral and fees\nafter the agreement expiration")),(0,l.kt)("h3",{id:"aavecreditvault-3"},"aaveCreditVault"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"contract AaveCreditVault aaveCreditVault\n")),(0,l.kt)("h3",{id:"condition_type-19"},"CONDITION_TYPE"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"bytes32 CONDITION_TYPE\n")),(0,l.kt)("h3",{id:"fulfilled-12"},"Fulfilled"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"event Fulfilled(bytes32 _agreementId, bytes32 _did, bytes32 _conditionId)\n")),(0,l.kt)("h3",{id:"initialize-24"},"initialize"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function initialize(address _owner, address _conditionStoreManagerAddress) external\n")),(0,l.kt)("p",null,"initialize init the contract with the following parameters"),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"this function is called only once during the contract initialization.")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_owner"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"contract's owner account address")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_conditionStoreManagerAddress"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"condition store manager address")))),(0,l.kt)("h3",{id:"hashvalues-30"},"hashValues"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function hashValues(bytes32 _did, address _vaultAddress, address _collateralAsset) public pure returns (bytes32)\n")),(0,l.kt)("p",null,"hashValues generates the hash of condition inputs\nwith the following parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_did"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"the DID of the asset")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_vaultAddress"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"Address of the vault")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_collateralAsset"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"the address of the asset used as collateral (i.e DAI)")))),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[0]"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32 hash of all these values")))),(0,l.kt)("h3",{id:"fulfill-31"},"fulfill"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function fulfill(bytes32 _agreementId, bytes32 _did, address _vaultAddress, address _collateralAsset) external payable returns (enum ConditionStoreLibrary.ConditionState)\n")),(0,l.kt)("p",null,"It allows the borrower to repay the loan"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_agreementId"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"the identifier of the agreement")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_did"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"the DID of the asset")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_vaultAddress"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"Address of the vault")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_collateralAsset"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"the address of the asset used as collateral (i.e DAI)")))),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[0]"),(0,l.kt)("td",{parentName:"tr",align:null},"enum ConditionStoreLibrary.ConditionState"),(0,l.kt)("td",{parentName:"tr",align:null},"ConditionStoreLibrary.ConditionState the state of the condition (Fulfilled if everything went good)")))),(0,l.kt)("h2",{id:"aavecreditvault-4"},"AaveCreditVault"),(0,l.kt)("h3",{id:"lendingpool"},"lendingPool"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"contract ILendingPool lendingPool\n")),(0,l.kt)("h3",{id:"dataprovider"},"dataProvider"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"contract IProtocolDataProvider dataProvider\n")),(0,l.kt)("h3",{id:"weth"},"weth"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"contract IWETHGateway weth\n")),(0,l.kt)("h3",{id:"addressprovider"},"addressProvider"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"contract ILendingPoolAddressesProvider addressProvider\n")),(0,l.kt)("h3",{id:"priceoracle"},"priceOracle"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"contract IPriceOracleGetter priceOracle\n")),(0,l.kt)("h3",{id:"borrowedasset"},"borrowedAsset"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"address borrowedAsset\n")),(0,l.kt)("h3",{id:"borrowedamount"},"borrowedAmount"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"uint256 borrowedAmount\n")),(0,l.kt)("h3",{id:"nvmfee"},"nvmFee"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"uint256 nvmFee\n")),(0,l.kt)("h3",{id:"agreementfee"},"agreementFee"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"uint256 agreementFee\n")),(0,l.kt)("h3",{id:"fee_base"},"FEE_BASE"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"uint256 FEE_BASE\n")),(0,l.kt)("h3",{id:"treasuryaddress"},"treasuryAddress"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"address treasuryAddress\n")),(0,l.kt)("h3",{id:"borrower"},"borrower"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"address borrower\n")),(0,l.kt)("h3",{id:"lender"},"lender"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"address lender\n")),(0,l.kt)("h3",{id:"repayconditionid"},"repayConditionId"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"bytes32 repayConditionId\n")),(0,l.kt)("h3",{id:"nftid"},"nftId"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"uint256 nftId\n")),(0,l.kt)("h3",{id:"nftaddress"},"nftAddress"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"address nftAddress\n")),(0,l.kt)("h3",{id:"borrower_role"},"BORROWER_ROLE"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"bytes32 BORROWER_ROLE\n")),(0,l.kt)("h3",{id:"lender_role"},"LENDER_ROLE"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"bytes32 LENDER_ROLE\n")),(0,l.kt)("h3",{id:"condition_role"},"CONDITION_ROLE"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"bytes32 CONDITION_ROLE\n")),(0,l.kt)("h3",{id:"initialize-25"},"initialize"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function initialize(address _lendingPool, address _dataProvider, address _weth, uint256 _nvmFee, uint256 _agreementFee, address _treasuryAddress, address _borrower, address _lender, address[] _conditions) public\n")),(0,l.kt)("p",null,"Vault constructor, creates a unique vault for each agreement"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_lendingPool"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"Aave lending pool address")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_dataProvider"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"Aave data provider address")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_weth"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"WETH address")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_nvmFee"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"Nevermined fee that will apply to this agreeement")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_agreementFee"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"Agreement fee that lender will receive on agreement maturity")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_treasuryAddress"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"Address of nevermined contract to store fees")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_borrower"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null})),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_lender"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null})),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_conditions"),(0,l.kt)("td",{parentName:"tr",align:null},"address[]"),(0,l.kt)("td",{parentName:"tr",align:null})))),(0,l.kt)("h3",{id:"islender"},"isLender"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function isLender(address _address) public view returns (bool)\n")),(0,l.kt)("h3",{id:"isborrower"},"isBorrower"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function isBorrower(address _address) public view returns (bool)\n")),(0,l.kt)("h3",{id:"deposit"},"deposit"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function deposit(address _collateralAsset, uint256 _amount) public payable\n")),(0,l.kt)("p",null,"Deposit function. Receives the funds from the delegator and deposits the funds\nin the Aave contracts"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_collateralAsset"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"collateral asset that will be deposit on Aave")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_amount"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"Amount of collateral to deposit")))),(0,l.kt)("h3",{id:"approveborrower"},"approveBorrower"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function approveBorrower(address _borrower, uint256 _amount, address _asset, uint256 _interestRateMode) public\n")),(0,l.kt)("p",null,"Appproves delegatee to borrow funds from Aave on behalf of delegator"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_borrower"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"delegatee that will borrow the funds")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_amount"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"Amount of funds to delegate")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_asset"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"Asset to delegate the borrow")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_interestRateMode"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"interest rate type stable 1, variable 2")))),(0,l.kt)("h3",{id:"delegatedamount"},"delegatedAmount"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function delegatedAmount(address _borrower, address _asset, uint256 _interestRateMode) public view returns (uint256)\n")),(0,l.kt)("p",null,"Return the actual delegated amount for the borrower in the specific asset"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_borrower"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"The borrower of the funds (i.e. delgatee)")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_asset"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"The asset they are allowed to borrow")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_interestRateMode"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"interest rate type stable 1, variable 2")))),(0,l.kt)("h3",{id:"borrow"},"borrow"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function borrow(address _assetToBorrow, uint256 _amount, address _delgatee, uint256 _interestRateMode) public\n")),(0,l.kt)("p",null,"Borrower can call this function to borrow the delegated funds"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_assetToBorrow"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"The asset they are allowed to borrow")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_amount"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"Amount to borrow")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_delgatee"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"Address where the funds will be transfered")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_interestRateMode"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"interest rate type stable 1, variable 2")))),(0,l.kt)("h3",{id:"repay"},"repay"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function repay(address _asset, uint256 _interestRateMode, bytes32 _repayConditionId) public\n")),(0,l.kt)("p",null,"Repay an uncollaterised loan"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_asset"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"The asset to be repaid")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_interestRateMode"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"interest rate type stable 1, variable 2")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_repayConditionId"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"identifier of the condition id working as lock for other vault methods")))),(0,l.kt)("h3",{id:"setrepayconditionid"},"setRepayConditionId"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function setRepayConditionId(bytes32 _repayConditionId) public\n")),(0,l.kt)("h3",{id:"getborrowedamount"},"getBorrowedAmount"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function getBorrowedAmount() public view returns (uint256)\n")),(0,l.kt)("p",null,"Returns the borrowed amount from the delegatee on this agreement"),(0,l.kt)("h3",{id:"getassetprice"},"getAssetPrice"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function getAssetPrice(address _asset) public view returns (uint256)\n")),(0,l.kt)("p",null,"Returns the priceof the asset in the Aave oracles"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_asset"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"The asset to get the actual price")))),(0,l.kt)("h3",{id:"getcreditassetdebt"},"getCreditAssetDebt"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function getCreditAssetDebt() public view returns (uint256)\n")),(0,l.kt)("p",null,"Returns the total debt of the credit in the Aave protocol expressed in token units"),(0,l.kt)("h3",{id:"getactualcreditdebt"},"getActualCreditDebt"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function getActualCreditDebt() public view returns (uint256)\n")),(0,l.kt)("p",null,"Returns the total debt of the credit in the Aave protocol expressed in ETH units"),(0,l.kt)("h3",{id:"gettotalactualdebt"},"getTotalActualDebt"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function getTotalActualDebt() public view returns (uint256)\n")),(0,l.kt)("p",null,"Returns the total actual debt of the agreement credit + fees in token units"),(0,l.kt)("h3",{id:"withdrawcollateral"},"withdrawCollateral"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function withdrawCollateral(address _asset, address _delegator) public\n")),(0,l.kt)("p",null,"Withdraw all of a collateral as the underlying asset, if no outstanding loans delegated"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_asset"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"The underlying asset to withdraw")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_delegator"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"Delegator address that deposited the collateral")))),(0,l.kt)("h3",{id:"transfernft"},"transferNFT"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function transferNFT(uint256 _tokenId, address _receiver) public\n")),(0,l.kt)("p",null,"Transfer a NFT (ERC-721) locked into the vault to a receiver address"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_tokenId"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"the token id")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_receiver"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"the receiver adddress")))),(0,l.kt)("h3",{id:"_transfererc20"},"_transferERC20"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function _transferERC20(address _collateralAsset, uint256 _amount) internal\n")),(0,l.kt)("p",null,"Transfers the ERC20 token deposited to the Aave contracts"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_collateralAsset"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"collateral asset that will be deposit on Aave")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_amount"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"Amount of collateral to deposit")))),(0,l.kt)("h3",{id:"onerc721received-1"},"onERC721Received"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function onERC721Received(address, address, uint256 _tokenId, bytes) public virtual returns (bytes4)\n")),(0,l.kt)("p",null,"Handle the receipt of an NFT"),(0,l.kt)("p",null,"_The ERC721 smart contract calls this function on the recipient\nafter a {IERC721-safeTransferFrom}. This function MUST return the function selector,\notherwise the caller will revert the transaction. "),(0,l.kt)("p",null,"Note: the ERC721 contract address is always the message sender.\n(param not used): operator The address which called ",(0,l.kt)("inlineCode",{parentName:"p"},"safeTransferFrom")," function\n(param not used): from The address which previously owned the token_"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null}),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null})),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null}),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null})),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_tokenId"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"The NFT identifier which is being transferred (param not used): data Additional data with no specified format")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null}),(0,l.kt)("td",{parentName:"tr",align:null},"bytes"),(0,l.kt)("td",{parentName:"tr",align:null})))),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[0]"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes4"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes4 ",(0,l.kt)("inlineCode",{parentName:"td"},'bytes4(keccak256("onERC721Received(address,address,uint256,bytes)"))'))))),(0,l.kt)("h2",{id:"aaverepaycondition"},"AaveRepayCondition"),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"Implementation of the Aave Repay Condition\nThis condition allows to a borrower to repay a credit as part of a credit template")),(0,l.kt)("h3",{id:"aavecreditvault-5"},"aaveCreditVault"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"contract AaveCreditVault aaveCreditVault\n")),(0,l.kt)("h3",{id:"condition_type-20"},"CONDITION_TYPE"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"bytes32 CONDITION_TYPE\n")),(0,l.kt)("h3",{id:"fulfilled-13"},"Fulfilled"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"event Fulfilled(bytes32 _agreementId, bytes32 _did, bytes32 _conditionId)\n")),(0,l.kt)("h3",{id:"initialize-26"},"initialize"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function initialize(address _owner, address _conditionStoreManagerAddress) external\n")),(0,l.kt)("p",null,"initialize init the contract with the following parameters"),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"this function is called only once during the contract initialization.")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_owner"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"contract's owner account address")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_conditionStoreManagerAddress"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"condition store manager address")))),(0,l.kt)("h3",{id:"hashvalues-31"},"hashValues"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function hashValues(bytes32 _did, address _vaultAddress, address _assetToRepay, uint256 _amountToRepay, uint256 _interestRateMode) public pure returns (bytes32)\n")),(0,l.kt)("p",null,"hashValues generates the hash of condition inputs\nwith the following parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_did"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"the DID of the asset")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_vaultAddress"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"the address of vault locking the deposited collateral and the asset")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_assetToRepay"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"the address of the asset to repay (i.e DAI)")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_amountToRepay"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"Amount to repay")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_interestRateMode"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"interest rate type stable 1, variable 2")))),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[0]"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32 hash of all these values")))),(0,l.kt)("h3",{id:"fulfill-32"},"fulfill"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function fulfill(bytes32 _agreementId, bytes32 _did, address _vaultAddress, address _assetToRepay, uint256 _amountToRepay, uint256 _interestRateMode) external returns (enum ConditionStoreLibrary.ConditionState)\n")),(0,l.kt)("p",null,"It allows the borrower to repay the loan"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_agreementId"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"the identifier of the agreement")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_did"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"the DID of the asset")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_vaultAddress"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"the address of vault locking the deposited collateral and the asset")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_assetToRepay"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"the address of the asset to repay (i.e DAI)")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_amountToRepay"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"Amount to repay")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_interestRateMode"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"interest rate type stable 1, variable 2")))),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[0]"),(0,l.kt)("td",{parentName:"tr",align:null},"enum ConditionStoreLibrary.ConditionState"),(0,l.kt)("td",{parentName:"tr",align:null},"ConditionStoreLibrary.ConditionState the state of the condition (Fulfilled if everything went good)")))),(0,l.kt)("h2",{id:"escrowpaymentcondition"},"EscrowPaymentCondition"),(0,l.kt)("p",null,"_Implementation of the Escrow Payment Condition"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"}," The Escrow payment is reward condition in which only \n can release reward if lock and release conditions\n are fulfilled._\n")),(0,l.kt)("h3",{id:"condition_type-21"},"CONDITION_TYPE"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"bytes32 CONDITION_TYPE\n")),(0,l.kt)("h3",{id:"used_payment_id"},"USED_PAYMENT_ID"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"bytes32 USED_PAYMENT_ID\n")),(0,l.kt)("h3",{id:"fulfilled-14"},"Fulfilled"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"event Fulfilled(bytes32 _agreementId, address _tokenAddress, address[] _receivers, bytes32 _conditionId, uint256[] _amounts)\n")),(0,l.kt)("h3",{id:"received"},"Received"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"event Received(address _from, uint256 _value)\n")),(0,l.kt)("h3",{id:"receive"},"receive"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"receive() external payable\n")),(0,l.kt)("h3",{id:"initialize-27"},"initialize"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function initialize(address _owner, address _conditionStoreManagerAddress) external\n")),(0,l.kt)("p",null,"initialize init the\ncontract with the following parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_owner"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"contract's owner account address")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_conditionStoreManagerAddress"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"condition store manager address")))),(0,l.kt)("h3",{id:"hashvaluesmulti"},"hashValuesMulti"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function hashValuesMulti(bytes32 _did, uint256[] _amounts, address[] _receivers, address _returnAddress, address _lockPaymentAddress, address _tokenAddress, bytes32 _lockCondition, bytes32[] _releaseConditions) public pure returns (bytes32)\n")),(0,l.kt)("p",null,"hashValues generates the hash of condition inputs\nwith the following parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_did"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"asset decentralized identifier")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_amounts"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256[]"),(0,l.kt)("td",{parentName:"tr",align:null},"token amounts to be locked/released")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_receivers"),(0,l.kt)("td",{parentName:"tr",align:null},"address[]"),(0,l.kt)("td",{parentName:"tr",align:null},"receiver's addresses")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_returnAddress"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null})),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_lockPaymentAddress"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"lock payment contract address")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_tokenAddress"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"the ERC20 contract address to use during the payment")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_lockCondition"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"lock condition identifier")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_releaseConditions"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32[]"),(0,l.kt)("td",{parentName:"tr",align:null},"release condition identifier")))),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[0]"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32 hash of all these values")))),(0,l.kt)("h3",{id:"encodeparams-3"},"encodeParams"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function encodeParams(bytes32 _did, uint256[] _amounts, address[] _receivers, address _returnAddress, address _lockPaymentAddress, address _tokenAddress, bytes32 _lockCondition, bytes32[] _releaseConditions) public pure returns (bytes)\n")),(0,l.kt)("h3",{id:"hashvalues-32"},"hashValues"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function hashValues(bytes32 _did, uint256[] _amounts, address[] _receivers, address _returnAddress, address _lockPaymentAddress, address _tokenAddress, bytes32 _lockCondition, bytes32 _releaseCondition) public pure returns (bytes32)\n")),(0,l.kt)("h3",{id:"hashvalueslockpayment"},"hashValuesLockPayment"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function hashValuesLockPayment(bytes32 _did, address _rewardAddress, address _tokenAddress, uint256[] _amounts, address[] _receivers) public pure returns (bytes32)\n")),(0,l.kt)("p",null,"hashValuesLockPayment generates the hash of condition inputs\nwith the following parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_did"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"the asset decentralized identifier")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_rewardAddress"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"the contract address where the reward is locked")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_tokenAddress"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"the ERC20 contract address to use during the lock payment.         If the address is 0x0 means we won't use a ERC20 but ETH for payment")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_amounts"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256[]"),(0,l.kt)("td",{parentName:"tr",align:null},"token amounts to be locked/released")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_receivers"),(0,l.kt)("td",{parentName:"tr",align:null},"address[]"),(0,l.kt)("td",{parentName:"tr",align:null},"receiver's addresses")))),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[0]"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32 hash of all these values")))),(0,l.kt)("h3",{id:"fulfillmulti"},"fulfillMulti"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function fulfillMulti(bytes32 _agreementId, bytes32 _did, uint256[] _amounts, address[] _receivers, address _returnAddress, address _lockPaymentAddress, address _tokenAddress, bytes32 _lockCondition, bytes32[] _releaseConditions) public returns (enum ConditionStoreLibrary.ConditionState)\n")),(0,l.kt)("p",null,"fulfill escrow reward condition"),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"fulfill method checks whether the lock and\nrelease conditions are fulfilled in order to\nrelease/refund the reward to receiver/sender\nrespectively.")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_agreementId"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"agreement identifier")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_did"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"asset decentralized identifier")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_amounts"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256[]"),(0,l.kt)("td",{parentName:"tr",align:null},"token amounts to be locked/released")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_receivers"),(0,l.kt)("td",{parentName:"tr",align:null},"address[]"),(0,l.kt)("td",{parentName:"tr",align:null},"receiver's address")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_returnAddress"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null})),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_lockPaymentAddress"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"lock payment contract address")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_tokenAddress"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"the ERC20 contract address to use during the payment")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_lockCondition"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"lock condition identifier")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_releaseConditions"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32[]"),(0,l.kt)("td",{parentName:"tr",align:null},"release condition identifier")))),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[0]"),(0,l.kt)("td",{parentName:"tr",align:null},"enum ConditionStoreLibrary.ConditionState"),(0,l.kt)("td",{parentName:"tr",align:null},"condition state (Fulfilled/Aborted)")))),(0,l.kt)("h3",{id:"args"},"Args"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"struct Args {\n  bytes32 _agreementId;\n  bytes32 _did;\n  uint256[] _amounts;\n  address[] _receivers;\n  address _returnAddress;\n  address _lockPaymentAddress;\n  address _tokenAddress;\n  bytes32 _lockCondition;\n  bytes32[] _releaseConditions;\n}\n")),(0,l.kt)("h3",{id:"fulfillkludge"},"fulfillKludge"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function fulfillKludge(struct EscrowPaymentCondition.Args a) internal returns (enum ConditionStoreLibrary.ConditionState)\n")),(0,l.kt)("h3",{id:"fulfill-33"},"fulfill"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function fulfill(bytes32 _agreementId, bytes32 _did, uint256[] _amounts, address[] _receivers, address _returnAddress, address _lockPaymentAddress, address _tokenAddress, bytes32 _lockCondition, bytes32 _releaseCondition) external returns (enum ConditionStoreLibrary.ConditionState)\n")),(0,l.kt)("h3",{id:"_transferandfulfillerc20"},"_transferAndFulfillERC20"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function _transferAndFulfillERC20(bytes32 _id, address _tokenAddress, address[] _receivers, uint256[] _amounts) private returns (enum ConditionStoreLibrary.ConditionState)\n")),(0,l.kt)("p",null,"_transferAndFulfill transfer ERC20 tokens and\nfulfill the condition"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_id"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"condition identifier")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_tokenAddress"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"the ERC20 contract address to use during the payment")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_receivers"),(0,l.kt)("td",{parentName:"tr",align:null},"address[]"),(0,l.kt)("td",{parentName:"tr",align:null},"receiver's address")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_amounts"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256[]"),(0,l.kt)("td",{parentName:"tr",align:null},"token amount to be locked/released")))),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[0]"),(0,l.kt)("td",{parentName:"tr",align:null},"enum ConditionStoreLibrary.ConditionState"),(0,l.kt)("td",{parentName:"tr",align:null},"condition state (Fulfilled/Aborted)")))),(0,l.kt)("h3",{id:"_transferandfulfilleth"},"_transferAndFulfillETH"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function _transferAndFulfillETH(bytes32 _id, address[] _receivers, uint256[] _amounts) private returns (enum ConditionStoreLibrary.ConditionState)\n")),(0,l.kt)("p",null,"_transferAndFulfill transfer ETH and\nfulfill the condition"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_id"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"condition identifier")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_receivers"),(0,l.kt)("td",{parentName:"tr",align:null},"address[]"),(0,l.kt)("td",{parentName:"tr",align:null},"receiver's address")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_amounts"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256[]"),(0,l.kt)("td",{parentName:"tr",align:null},"token amount to be locked/released")))),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[0]"),(0,l.kt)("td",{parentName:"tr",align:null},"enum ConditionStoreLibrary.ConditionState"),(0,l.kt)("td",{parentName:"tr",align:null},"condition state (Fulfilled/Aborted)")))),(0,l.kt)("h2",{id:"inftescrow"},"INFTEscrow"),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"Common interface for ERC-721 and ERC-1155")),(0,l.kt)("h3",{id:"fulfilled-15"},"Fulfilled"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"event Fulfilled(bytes32 _agreementId, address _tokenAddress, bytes32 _did, address _receivers, bytes32 _conditionId, uint256 _amounts)\n")),(0,l.kt)("h2",{id:"nft721escrowpaymentcondition"},"NFT721EscrowPaymentCondition"),(0,l.kt)("p",null,"_Implementation of the Escrow Payment Condition"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"}," The Escrow payment is reward condition in which only \n can release reward if lock and release conditions\n are fulfilled._\n")),(0,l.kt)("h3",{id:"condition_type-22"},"CONDITION_TYPE"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"bytes32 CONDITION_TYPE\n")),(0,l.kt)("h3",{id:"received-1"},"Received"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"event Received(address _from, uint256 _value)\n")),(0,l.kt)("h3",{id:"receive-1"},"receive"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"receive() external payable\n")),(0,l.kt)("h3",{id:"initialize-28"},"initialize"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function initialize(address _owner, address _conditionStoreManagerAddress) external\n")),(0,l.kt)("p",null,"initialize init the\ncontract with the following parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_owner"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"contract's owner account address")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_conditionStoreManagerAddress"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"condition store manager address")))),(0,l.kt)("h3",{id:"hashvalues-33"},"hashValues"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function hashValues(bytes32 _did, uint256 _amounts, address _receivers, address _returnAddress, address _lockPaymentAddress, address _tokenAddress, bytes32 _lockCondition, bytes32[] _releaseConditions) public pure returns (bytes32)\n")),(0,l.kt)("p",null,"hashValues generates the hash of condition inputs\nwith the following parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_did"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"asset decentralized identifier")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_amounts"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"token amounts to be locked/released")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_receivers"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"receiver's addresses")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_returnAddress"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null})),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_lockPaymentAddress"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"lock payment contract address")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_tokenAddress"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"the ERC20 contract address to use during the payment")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_lockCondition"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"lock condition identifier")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_releaseConditions"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32[]"),(0,l.kt)("td",{parentName:"tr",align:null},"release condition identifier")))),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[0]"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32 hash of all these values")))),(0,l.kt)("h3",{id:"hashvalueslockpayment-1"},"hashValuesLockPayment"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function hashValuesLockPayment(bytes32 _did, address _lockAddress, address _nftContractAddress, uint256 _amount, address _receiver) public pure returns (bytes32)\n")),(0,l.kt)("p",null,"hashValuesLockPayment generates the hash of condition inputs\nwith the following parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_did"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"the asset decentralized identifier")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_lockAddress"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"the contract address where the reward is locked")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_nftContractAddress"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"the ERC20 contract address to use during the lock payment.         If the address is 0x0 means we won't use a ERC20 but ETH for payment")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_amount"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"token amounts to be locked/released")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_receiver"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"receiver's addresses")))),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[0]"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32 hash of all these values")))),(0,l.kt)("h3",{id:"fulfill-34"},"fulfill"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function fulfill(bytes32 _agreementId, bytes32 _did, uint256 _amount, address _receiver, address _returnAddress, address _lockPaymentAddress, address _tokenAddress, bytes32 _lockCondition, bytes32[] _releaseConditions) external returns (enum ConditionStoreLibrary.ConditionState)\n")),(0,l.kt)("p",null,"fulfill escrow reward condition"),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"fulfill method checks whether the lock and\nrelease conditions are fulfilled in order to\nrelease/refund the reward to receiver/sender\nrespectively.")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_agreementId"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"agreement identifier")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_did"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"asset decentralized identifier")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_amount"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"token amounts to be locked/released")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_receiver"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"receiver's address")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_returnAddress"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null})),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_lockPaymentAddress"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"lock payment contract address")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_tokenAddress"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"the ERC20 contract address to use during the payment")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_lockCondition"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"lock condition identifier")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_releaseConditions"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32[]"),(0,l.kt)("td",{parentName:"tr",align:null},"release condition identifier")))),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[0]"),(0,l.kt)("td",{parentName:"tr",align:null},"enum ConditionStoreLibrary.ConditionState"),(0,l.kt)("td",{parentName:"tr",align:null},"condition state (Fulfilled/Aborted)")))),(0,l.kt)("h3",{id:"args-1"},"Args"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"struct Args {\n  bytes32 _agreementId;\n  bytes32 _did;\n  uint256 _amount;\n  address _receiver;\n  address _returnAddress;\n  address _lockPaymentAddress;\n  address _tokenAddress;\n  bytes32 _lockCondition;\n  bytes32[] _releaseConditions;\n}\n")),(0,l.kt)("h3",{id:"fulfillkludge-1"},"fulfillKludge"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function fulfillKludge(struct NFT721EscrowPaymentCondition.Args a) internal returns (enum ConditionStoreLibrary.ConditionState)\n")),(0,l.kt)("h3",{id:"_transferandfulfillnft"},"_transferAndFulfillNFT"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function _transferAndFulfillNFT(bytes32 _agreementId, bytes32 _id, bytes32 _did, address _tokenAddress, address _receiver, uint256 _amount) private returns (enum ConditionStoreLibrary.ConditionState)\n")),(0,l.kt)("p",null,"_transferAndFulfill transfer ERC20 tokens and\nfulfill the condition"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_agreementId"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null})),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_id"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"condition identifier")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_did"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null})),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_tokenAddress"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"the ERC20 contract address to use during the payment")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_receiver"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"receiver's address")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_amount"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"token amount to be locked/released")))),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[0]"),(0,l.kt)("td",{parentName:"tr",align:null},"enum ConditionStoreLibrary.ConditionState"),(0,l.kt)("td",{parentName:"tr",align:null},"condition state (Fulfilled/Aborted)")))),(0,l.kt)("h3",{id:"onerc721received-2"},"onERC721Received"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function onERC721Received(address, address, uint256, bytes) public virtual returns (bytes4)\n")),(0,l.kt)("h2",{id:"nftescrowpaymentcondition"},"NFTEscrowPaymentCondition"),(0,l.kt)("p",null,"_Implementation of the Escrow Payment Condition"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"}," The Escrow payment is reward condition in which only \n can release reward if lock and release conditions\n are fulfilled._\n")),(0,l.kt)("h3",{id:"condition_type-23"},"CONDITION_TYPE"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"bytes32 CONDITION_TYPE\n")),(0,l.kt)("h3",{id:"lock_condition_type"},"LOCK_CONDITION_TYPE"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"bytes32 LOCK_CONDITION_TYPE\n")),(0,l.kt)("h3",{id:"received-2"},"Received"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"event Received(address _from, uint256 _value)\n")),(0,l.kt)("h3",{id:"receive-2"},"receive"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"receive() external payable\n")),(0,l.kt)("h3",{id:"initialize-29"},"initialize"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function initialize(address _owner, address _conditionStoreManagerAddress) external\n")),(0,l.kt)("p",null,"initialize init the\ncontract with the following parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_owner"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"contract's owner account address")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_conditionStoreManagerAddress"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"condition store manager address")))),(0,l.kt)("h3",{id:"hashvalues-34"},"hashValues"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function hashValues(bytes32 _did, uint256 _amounts, address _receivers, address _returnAddress, address _lockPaymentAddress, address _tokenAddress, bytes32 _lockCondition, bytes32[] _releaseConditions) public pure returns (bytes32)\n")),(0,l.kt)("p",null,"hashValues generates the hash of condition inputs\nwith the following parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_did"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"asset decentralized identifier")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_amounts"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"token amounts to be locked/released")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_receivers"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"receiver's addresses")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_returnAddress"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null})),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_lockPaymentAddress"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"lock payment contract address")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_tokenAddress"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"the ERC20 contract address to use during the payment")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_lockCondition"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"lock condition identifier")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_releaseConditions"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32[]"),(0,l.kt)("td",{parentName:"tr",align:null},"release condition identifier")))),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[0]"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32 hash of all these values")))),(0,l.kt)("h3",{id:"hashvalueslockpayment-2"},"hashValuesLockPayment"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function hashValuesLockPayment(bytes32 _did, address _lockAddress, address _nftContractAddress, uint256 _amount, address _receiver) public pure returns (bytes32)\n")),(0,l.kt)("p",null,"hashValuesLockPayment generates the hash of condition inputs\nwith the following parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_did"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"the asset decentralized identifier")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_lockAddress"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"the contract address where the reward is locked")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_nftContractAddress"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"the ERC20 contract address to use during the lock payment.         If the address is 0x0 means we won't use a ERC20 but ETH for payment")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_amount"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"token amounts to be locked/released")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_receiver"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"receiver's addresses")))),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[0]"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32 hash of all these values")))),(0,l.kt)("h3",{id:"fulfill-35"},"fulfill"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function fulfill(bytes32 _agreementId, bytes32 _did, uint256 _amount, address _receiver, address _returnAddress, address _lockPaymentAddress, address _tokenAddress, bytes32 _lockCondition, bytes32[] _releaseConditions) external returns (enum ConditionStoreLibrary.ConditionState)\n")),(0,l.kt)("p",null,"fulfill escrow reward condition"),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"fulfill method checks whether the lock and\nrelease conditions are fulfilled in order to\nrelease/refund the reward to receiver/sender\nrespectively.")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_agreementId"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"agreement identifier")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_did"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"asset decentralized identifier")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_amount"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"token amounts to be locked/released")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_receiver"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"receiver's address")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_returnAddress"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null})),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_lockPaymentAddress"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"lock payment contract address")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_tokenAddress"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"the ERC20 contract address to use during the payment")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_lockCondition"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"lock condition identifier")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_releaseConditions"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32[]"),(0,l.kt)("td",{parentName:"tr",align:null},"release condition identifier")))),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[0]"),(0,l.kt)("td",{parentName:"tr",align:null},"enum ConditionStoreLibrary.ConditionState"),(0,l.kt)("td",{parentName:"tr",align:null},"condition state (Fulfilled/Aborted)")))),(0,l.kt)("h3",{id:"args-2"},"Args"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"struct Args {\n  bytes32 _agreementId;\n  bytes32 _did;\n  uint256 _amount;\n  address _receiver;\n  address _returnAddress;\n  address _lockPaymentAddress;\n  address _tokenAddress;\n  bytes32 _lockCondition;\n  bytes32[] _releaseConditions;\n}\n")),(0,l.kt)("h3",{id:"fulfillkludge-2"},"fulfillKludge"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function fulfillKludge(struct NFTEscrowPaymentCondition.Args a) internal returns (enum ConditionStoreLibrary.ConditionState)\n")),(0,l.kt)("h3",{id:"_transferandfulfillnft-1"},"_transferAndFulfillNFT"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function _transferAndFulfillNFT(bytes32 _agreementId, bytes32 _id, bytes32 _did, address _tokenAddress, address _receiver, uint256 _amount) private returns (enum ConditionStoreLibrary.ConditionState)\n")),(0,l.kt)("p",null,"_transferAndFulfill transfer ERC20 tokens and\nfulfill the condition"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_agreementId"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null})),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_id"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"condition identifier")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_did"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null})),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_tokenAddress"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"the ERC20 contract address to use during the payment")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_receiver"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"receiver's address")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_amount"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"token amount to be locked/released")))),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[0]"),(0,l.kt)("td",{parentName:"tr",align:null},"enum ConditionStoreLibrary.ConditionState"),(0,l.kt)("td",{parentName:"tr",align:null},"condition state (Fulfilled/Aborted)")))),(0,l.kt)("h3",{id:"erc1155_accepted-1"},"ERC1155_ACCEPTED"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"bytes4 ERC1155_ACCEPTED\n")),(0,l.kt)("h3",{id:"erc1155_batch_accepted-1"},"ERC1155_BATCH_ACCEPTED"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"bytes4 ERC1155_BATCH_ACCEPTED\n")),(0,l.kt)("h3",{id:"onerc1155received-1"},"onERC1155Received"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function onERC1155Received(address, address, uint256, uint256, bytes) external pure returns (bytes4)\n")),(0,l.kt)("h3",{id:"onerc1155batchreceived-1"},"onERC1155BatchReceived"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function onERC1155BatchReceived(address, address, uint256[], uint256[], bytes) external pure returns (bytes4)\n")),(0,l.kt)("h3",{id:"supportsinterface-1"},"supportsInterface"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function supportsInterface(bytes4 interfaceId) external pure returns (bool)\n")),(0,l.kt)("p",null,"_Returns true if this contract implements the interface defined by\n",(0,l.kt)("inlineCode",{parentName:"p"},"interfaceId"),". See the corresponding\n",(0,l.kt)("a",{parentName:"p",href:"https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified%5BEIP"},"https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP")," section]\nto learn more about how these ids are created."),(0,l.kt)("p",null,"This function call must use less than 30 000 gas._"),(0,l.kt)("h2",{id:"reward"},"Reward"),(0,l.kt)("p",null,"_Implementation of the Reward."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"}," Generic reward condition_\n")),(0,l.kt)("h2",{id:"invmconfig"},"INVMConfig"),(0,l.kt)("h3",{id:"governor_role"},"GOVERNOR_ROLE"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"bytes32 GOVERNOR_ROLE\n")),(0,l.kt)("h3",{id:"neverminedconfigchange"},"NeverminedConfigChange"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"event NeverminedConfigChange(address _whoChanged, bytes32 _parameter)\n")),(0,l.kt)("p",null,"Event that is emitted when a parameter is changed"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_whoChanged"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"the address of the governor changing the parameter")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_parameter"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"the hash of the name of the parameter changed")))),(0,l.kt)("h3",{id:"initialize-30"},"initialize"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function initialize(address _owner, address _governor) external virtual\n")),(0,l.kt)("p",null,"Used to initialize the contract during delegator constructor"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_owner"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"The owner of the contract")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_governor"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"The address to be granted with the ",(0,l.kt)("inlineCode",{parentName:"td"},"GOVERNOR_ROLE"))))),(0,l.kt)("h3",{id:"setmarketplacefees"},"setMarketplaceFees"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function setMarketplaceFees(uint256 _marketplaceFee, address _feeReceiver) external virtual\n")),(0,l.kt)("p",null,"The governor can update the Nevermined Marketplace fees"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_marketplaceFee"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"new marketplace fee")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_feeReceiver"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"The address receiving the fee")))),(0,l.kt)("h3",{id:"isgovernor"},"isGovernor"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function isGovernor(address _address) external view virtual returns (bool)\n")),(0,l.kt)("p",null,"Indicates if an address is a having the GOVERNOR role"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_address"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"The address to validate")))),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[0]"),(0,l.kt)("td",{parentName:"tr",align:null},"bool"),(0,l.kt)("td",{parentName:"tr",align:null},"true if is a governor")))),(0,l.kt)("h3",{id:"getmarketplacefee"},"getMarketplaceFee"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function getMarketplaceFee() external view virtual returns (uint256)\n")),(0,l.kt)("p",null,"Returns the marketplace fee"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[0]"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"the marketplace fee")))),(0,l.kt)("h3",{id:"getfeereceiver"},"getFeeReceiver"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function getFeeReceiver() external view virtual returns (address)\n")),(0,l.kt)("p",null,"Returns the receiver address of the marketplace fee"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[0]"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"the receiver address")))),(0,l.kt)("h2",{id:"neverminedconfig"},"NeverminedConfig"),(0,l.kt)("h3",{id:"marketplacefee"},"marketplaceFee"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"uint256 marketplaceFee\n")),(0,l.kt)("h3",{id:"feereceiver"},"feeReceiver"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"address feeReceiver\n")),(0,l.kt)("h3",{id:"initialize-31"},"initialize"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function initialize(address _owner, address _governor) public\n")),(0,l.kt)("p",null,"Used to initialize the contract during delegator constructor"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_owner"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"The owner of the contract")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_governor"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"The address to be granted with the ",(0,l.kt)("inlineCode",{parentName:"td"},"GOVERNOR_ROLE"))))),(0,l.kt)("h3",{id:"setmarketplacefees-1"},"setMarketplaceFees"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function setMarketplaceFees(uint256 _marketplaceFee, address _feeReceiver) external virtual\n")),(0,l.kt)("p",null,"The governor can update the Nevermined Marketplace fees"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_marketplaceFee"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"new marketplace fee")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_feeReceiver"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"The address receiving the fee")))),(0,l.kt)("h3",{id:"setgovernor"},"setGovernor"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function setGovernor(address _address) external\n")),(0,l.kt)("h3",{id:"isgovernor-1"},"isGovernor"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function isGovernor(address _address) external view returns (bool)\n")),(0,l.kt)("p",null,"Indicates if an address is a having the GOVERNOR role"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_address"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"The address to validate")))),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[0]"),(0,l.kt)("td",{parentName:"tr",align:null},"bool"),(0,l.kt)("td",{parentName:"tr",align:null},"true if is a governor")))),(0,l.kt)("h3",{id:"getmarketplacefee-1"},"getMarketplaceFee"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function getMarketplaceFee() external view returns (uint256)\n")),(0,l.kt)("p",null,"Returns the marketplace fee"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[0]"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"the marketplace fee")))),(0,l.kt)("h3",{id:"getfeereceiver-1"},"getFeeReceiver"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function getFeeReceiver() external view returns (address)\n")),(0,l.kt)("p",null,"Returns the receiver address of the marketplace fee"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[0]"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"the receiver address")))),(0,l.kt)("h3",{id:"onlygovernor"},"onlyGovernor"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"modifier onlyGovernor(address _address)\n")),(0,l.kt)("h2",{id:"ierc20"},"IERC20"),(0,l.kt)("h3",{id:"totalsupply"},"totalSupply"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function totalSupply() external view returns (uint256)\n")),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"Returns the amount of tokens in existence.")),(0,l.kt)("h3",{id:"balanceof"},"balanceOf"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function balanceOf(address account) external view returns (uint256)\n")),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"Returns the amount of tokens owned by ",(0,l.kt)("inlineCode",{parentName:"em"},"account"),".")),(0,l.kt)("h3",{id:"transfer"},"transfer"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function transfer(address recipient, uint256 amount) external returns (bool)\n")),(0,l.kt)("p",null,"_Moves ",(0,l.kt)("inlineCode",{parentName:"p"},"amount")," tokens from the caller's account to ",(0,l.kt)("inlineCode",{parentName:"p"},"recipient"),"."),(0,l.kt)("p",null,"Returns a boolean value indicating whether the operation succeeded."),(0,l.kt)("p",null,"Emits a {Transfer} event._"),(0,l.kt)("h3",{id:"allowance"},"allowance"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function allowance(address owner, address spender) external view returns (uint256)\n")),(0,l.kt)("p",null,"_Returns the remaining number of tokens that ",(0,l.kt)("inlineCode",{parentName:"p"},"spender")," will be\nallowed to spend on behalf of ",(0,l.kt)("inlineCode",{parentName:"p"},"owner")," through {transferFrom}. This is\nzero by default."),(0,l.kt)("p",null,"This value changes when {approve} or {transferFrom} are called._"),(0,l.kt)("h3",{id:"approve"},"approve"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function approve(address spender, uint256 amount) external returns (bool)\n")),(0,l.kt)("p",null,"_Sets ",(0,l.kt)("inlineCode",{parentName:"p"},"amount")," as the allowance of ",(0,l.kt)("inlineCode",{parentName:"p"},"spender")," over the caller's tokens."),(0,l.kt)("p",null,"Returns a boolean value indicating whether the operation succeeded."),(0,l.kt)("p",null,"IMPORTANT: Beware that changing an allowance with this method brings the risk\nthat someone may use both the old and the new allowance by unfortunate\ntransaction ordering. One possible solution to mitigate this race\ncondition is to first reduce the spender's allowance to 0 and set the\ndesired value afterwards:\n",(0,l.kt)("a",{parentName:"p",href:"https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729"},"https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729")),(0,l.kt)("p",null,"Emits an {Approval} event._"),(0,l.kt)("h3",{id:"transferfrom"},"transferFrom"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function transferFrom(address sender, address recipient, uint256 amount) external returns (bool)\n")),(0,l.kt)("p",null,"_Moves ",(0,l.kt)("inlineCode",{parentName:"p"},"amount")," tokens from ",(0,l.kt)("inlineCode",{parentName:"p"},"sender")," to ",(0,l.kt)("inlineCode",{parentName:"p"},"recipient")," using the\nallowance mechanism. ",(0,l.kt)("inlineCode",{parentName:"p"},"amount")," is then deducted from the caller's\nallowance."),(0,l.kt)("p",null,"Returns a boolean value indicating whether the operation succeeded."),(0,l.kt)("p",null,"Emits a {Transfer} event._"),(0,l.kt)("h3",{id:"transfer-1"},"Transfer"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"event Transfer(address from, address to, uint256 value)\n")),(0,l.kt)("p",null,"_Emitted when ",(0,l.kt)("inlineCode",{parentName:"p"},"value")," tokens are moved from one account (",(0,l.kt)("inlineCode",{parentName:"p"},"from"),") to\nanother (",(0,l.kt)("inlineCode",{parentName:"p"},"to"),")."),(0,l.kt)("p",null,"Note that ",(0,l.kt)("inlineCode",{parentName:"p"},"value")," may be zero._"),(0,l.kt)("h3",{id:"approval"},"Approval"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"event Approval(address owner, address spender, uint256 value)\n")),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"Emitted when the allowance of a ",(0,l.kt)("inlineCode",{parentName:"em"},"spender")," for an ",(0,l.kt)("inlineCode",{parentName:"em"},"owner")," is set by\na call to {approve}. ",(0,l.kt)("inlineCode",{parentName:"em"},"value")," is the new allowance.")),(0,l.kt)("h2",{id:"ipriceoraclegetter"},"IPriceOracleGetter"),(0,l.kt)("p",null,"Interface for the Aave price oracle."),(0,l.kt)("h3",{id:"getassetprice-1"},"getAssetPrice"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function getAssetPrice(address asset) external view returns (uint256)\n")),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"returns the asset price in ETH")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"asset"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"the address of the asset")))),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[0]"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"the ETH price of the asset")))),(0,l.kt)("h2",{id:"iprotocoldataprovider"},"IProtocolDataProvider"),(0,l.kt)("h3",{id:"tokendata"},"TokenData"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"struct TokenData {\n  string symbol;\n  address tokenAddress;\n}\n")),(0,l.kt)("h3",{id:"addresses_provider"},"ADDRESSES_PROVIDER"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function ADDRESSES_PROVIDER() external view returns (contract ILendingPoolAddressesProvider)\n")),(0,l.kt)("h3",{id:"getallreservestokens"},"getAllReservesTokens"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function getAllReservesTokens() external view returns (struct IProtocolDataProvider.TokenData[])\n")),(0,l.kt)("h3",{id:"getallatokens"},"getAllATokens"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function getAllATokens() external view returns (struct IProtocolDataProvider.TokenData[])\n")),(0,l.kt)("h3",{id:"getreserveconfigurationdata"},"getReserveConfigurationData"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function getReserveConfigurationData(address asset) external view returns (uint256 decimals, uint256 ltv, uint256 liquidationThreshold, uint256 liquidationBonus, uint256 reserveFactor, bool usageAsCollateralEnabled, bool borrowingEnabled, bool stableBorrowRateEnabled, bool isActive, bool isFrozen)\n")),(0,l.kt)("h3",{id:"getreservedata"},"getReserveData"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function getReserveData(address asset) external view returns (uint256 availableLiquidity, uint256 totalStableDebt, uint256 totalVariableDebt, uint256 liquidityRate, uint256 variableBorrowRate, uint256 stableBorrowRate, uint256 averageStableBorrowRate, uint256 liquidityIndex, uint256 variableBorrowIndex, uint40 lastUpdateTimestamp)\n")),(0,l.kt)("h3",{id:"getuserreservedata"},"getUserReserveData"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function getUserReserveData(address asset, address user) external view returns (uint256 currentATokenBalance, uint256 currentStableDebt, uint256 currentVariableDebt, uint256 principalStableDebt, uint256 scaledVariableDebt, uint256 stableBorrowRate, uint256 liquidityRate, uint40 stableRateLastUpdated, bool usageAsCollateralEnabled)\n")),(0,l.kt)("h3",{id:"getreservetokensaddresses"},"getReserveTokensAddresses"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function getReserveTokensAddresses(address asset) external view returns (address aTokenAddress, address stableDebtTokenAddress, address variableDebtTokenAddress)\n")),(0,l.kt)("h2",{id:"ilendingpooladdressesprovider"},"ILendingPoolAddressesProvider"),(0,l.kt)("h3",{id:"marketidset"},"MarketIdSet"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"event MarketIdSet(string newMarketId)\n")),(0,l.kt)("h3",{id:"lendingpoolupdated"},"LendingPoolUpdated"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"event LendingPoolUpdated(address newAddress)\n")),(0,l.kt)("h3",{id:"configurationadminupdated"},"ConfigurationAdminUpdated"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"event ConfigurationAdminUpdated(address newAddress)\n")),(0,l.kt)("h3",{id:"emergencyadminupdated"},"EmergencyAdminUpdated"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"event EmergencyAdminUpdated(address newAddress)\n")),(0,l.kt)("h3",{id:"lendingpoolconfiguratorupdated"},"LendingPoolConfiguratorUpdated"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"event LendingPoolConfiguratorUpdated(address newAddress)\n")),(0,l.kt)("h3",{id:"lendingpoolcollateralmanagerupdated"},"LendingPoolCollateralManagerUpdated"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"event LendingPoolCollateralManagerUpdated(address newAddress)\n")),(0,l.kt)("h3",{id:"priceoracleupdated"},"PriceOracleUpdated"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"event PriceOracleUpdated(address newAddress)\n")),(0,l.kt)("h3",{id:"lendingrateoracleupdated"},"LendingRateOracleUpdated"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"event LendingRateOracleUpdated(address newAddress)\n")),(0,l.kt)("h3",{id:"proxycreated"},"ProxyCreated"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"event ProxyCreated(bytes32 id, address newAddress)\n")),(0,l.kt)("h3",{id:"addressset"},"AddressSet"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"event AddressSet(bytes32 id, address newAddress, bool hasProxy)\n")),(0,l.kt)("h3",{id:"getmarketid"},"getMarketId"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function getMarketId() external view returns (string)\n")),(0,l.kt)("h3",{id:"setmarketid"},"setMarketId"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function setMarketId(string marketId) external\n")),(0,l.kt)("h3",{id:"setaddress"},"setAddress"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function setAddress(bytes32 id, address newAddress) external\n")),(0,l.kt)("h3",{id:"setaddressasproxy"},"setAddressAsProxy"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function setAddressAsProxy(bytes32 id, address impl) external\n")),(0,l.kt)("h3",{id:"getaddress"},"getAddress"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function getAddress(bytes32 id) external view returns (address)\n")),(0,l.kt)("h3",{id:"getlendingpool"},"getLendingPool"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function getLendingPool() external view returns (address)\n")),(0,l.kt)("h3",{id:"setlendingpoolimpl"},"setLendingPoolImpl"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function setLendingPoolImpl(address pool) external\n")),(0,l.kt)("h3",{id:"getlendingpoolconfigurator"},"getLendingPoolConfigurator"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function getLendingPoolConfigurator() external view returns (address)\n")),(0,l.kt)("h3",{id:"setlendingpoolconfiguratorimpl"},"setLendingPoolConfiguratorImpl"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function setLendingPoolConfiguratorImpl(address configurator) external\n")),(0,l.kt)("h3",{id:"getlendingpoolcollateralmanager"},"getLendingPoolCollateralManager"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function getLendingPoolCollateralManager() external view returns (address)\n")),(0,l.kt)("h3",{id:"setlendingpoolcollateralmanager"},"setLendingPoolCollateralManager"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function setLendingPoolCollateralManager(address manager) external\n")),(0,l.kt)("h3",{id:"getpooladmin"},"getPoolAdmin"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function getPoolAdmin() external view returns (address)\n")),(0,l.kt)("h3",{id:"setpooladmin"},"setPoolAdmin"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function setPoolAdmin(address admin) external\n")),(0,l.kt)("h3",{id:"getemergencyadmin"},"getEmergencyAdmin"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function getEmergencyAdmin() external view returns (address)\n")),(0,l.kt)("h3",{id:"setemergencyadmin"},"setEmergencyAdmin"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function setEmergencyAdmin(address admin) external\n")),(0,l.kt)("h3",{id:"getpriceoracle"},"getPriceOracle"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function getPriceOracle() external view returns (address)\n")),(0,l.kt)("h3",{id:"setpriceoracle"},"setPriceOracle"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function setPriceOracle(address priceOracle) external\n")),(0,l.kt)("h3",{id:"getlendingrateoracle"},"getLendingRateOracle"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function getLendingRateOracle() external view returns (address)\n")),(0,l.kt)("h3",{id:"setlendingrateoracle"},"setLendingRateOracle"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function setLendingRateOracle(address lendingRateOracle) external\n")),(0,l.kt)("h2",{id:"ilendingpool"},"ILendingPool"),(0,l.kt)("h3",{id:"deposit-1"},"Deposit"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"event Deposit(address reserve, address user, address onBehalfOf, uint256 amount, uint16 referral)\n")),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"Emitted on deposit()")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"reserve"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"The address of the underlying asset of the reserve")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"user"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"The address initiating the deposit")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"onBehalfOf"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"The beneficiary of the deposit, receiving the aTokens")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"amount"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"The amount deposited")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"referral"),(0,l.kt)("td",{parentName:"tr",align:null},"uint16"),(0,l.kt)("td",{parentName:"tr",align:null},"The referral code used")))),(0,l.kt)("h3",{id:"withdraw"},"Withdraw"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"event Withdraw(address reserve, address user, address to, uint256 amount)\n")),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"Emitted on withdraw()")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"reserve"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"The address of the underlyng asset being withdrawn")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"user"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"The address initiating the withdrawal, owner of aTokens")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"to"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"Address that will receive the underlying")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"amount"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"The amount to be withdrawn")))),(0,l.kt)("h3",{id:"borrow-1"},"Borrow"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"event Borrow(address reserve, address user, address onBehalfOf, uint256 amount, uint256 borrowRateMode, uint256 borrowRate, uint16 referral)\n")),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"Emitted on borrow() and flashLoan() when debt needs to be opened")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"reserve"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"The address of the underlying asset being borrowed")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"user"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"The address of the user initiating the borrow(), receiving the funds on borrow() or just initiator of the transaction on flashLoan()")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"onBehalfOf"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"The address that will be getting the debt")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"amount"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"The amount borrowed out")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"borrowRateMode"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"The rate mode: 1 for Stable, 2 for Variable")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"borrowRate"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"The numeric rate at which the user has borrowed")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"referral"),(0,l.kt)("td",{parentName:"tr",align:null},"uint16"),(0,l.kt)("td",{parentName:"tr",align:null},"The referral code used")))),(0,l.kt)("h3",{id:"repay-1"},"Repay"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"event Repay(address reserve, address user, address repayer, uint256 amount)\n")),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"Emitted on repay()")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"reserve"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"The address of the underlying asset of the reserve")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"user"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"The beneficiary of the repayment, getting his debt reduced")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"repayer"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"The address of the user initiating the repay(), providing the funds")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"amount"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"The amount repaid")))),(0,l.kt)("h3",{id:"swap"},"Swap"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"event Swap(address reserve, address user, uint256 rateMode)\n")),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"Emitted on swapBorrowRateMode()")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"reserve"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"The address of the underlying asset of the reserve")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"user"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"The address of the user swapping his rate mode")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"rateMode"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"The rate mode that the user wants to swap to")))),(0,l.kt)("h3",{id:"reserveusedascollateralenabled"},"ReserveUsedAsCollateralEnabled"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"event ReserveUsedAsCollateralEnabled(address reserve, address user)\n")),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"Emitted on setUserUseReserveAsCollateral()")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"reserve"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"The address of the underlying asset of the reserve")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"user"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"The address of the user enabling the usage as collateral")))),(0,l.kt)("h3",{id:"reserveusedascollateraldisabled"},"ReserveUsedAsCollateralDisabled"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"event ReserveUsedAsCollateralDisabled(address reserve, address user)\n")),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"Emitted on setUserUseReserveAsCollateral()")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"reserve"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"The address of the underlying asset of the reserve")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"user"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"The address of the user enabling the usage as collateral")))),(0,l.kt)("h3",{id:"rebalancestableborrowrate"},"RebalanceStableBorrowRate"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"event RebalanceStableBorrowRate(address reserve, address user)\n")),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"Emitted on rebalanceStableBorrowRate()")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"reserve"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"The address of the underlying asset of the reserve")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"user"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"The address of the user for which the rebalance has been executed")))),(0,l.kt)("h3",{id:"flashloan"},"FlashLoan"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"event FlashLoan(address target, address initiator, address asset, uint256 amount, uint256 premium, uint16 referralCode)\n")),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"Emitted on flashLoan()")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"target"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"The address of the flash loan receiver contract")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"initiator"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"The address initiating the flash loan")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"asset"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"The address of the asset being flash borrowed")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"amount"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"The amount flash borrowed")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"premium"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"The fee flash borrowed")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"referralCode"),(0,l.kt)("td",{parentName:"tr",align:null},"uint16"),(0,l.kt)("td",{parentName:"tr",align:null},"The referral code used")))),(0,l.kt)("h3",{id:"paused"},"Paused"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"event Paused()\n")),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"Emitted when the pause is triggered.")),(0,l.kt)("h3",{id:"unpaused"},"Unpaused"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"event Unpaused()\n")),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"Emitted when the pause is lifted.")),(0,l.kt)("h3",{id:"liquidationcall"},"LiquidationCall"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"event LiquidationCall(address collateralAsset, address debtAsset, address user, uint256 debtToCover, uint256 liquidatedCollateralAmount, address liquidator, bool receiveAToken)\n")),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"Emitted when a borrower is liquidated. This event is emitted by the LendingPool via\nLendingPoolCollateral manager using a DELEGATECALL\nThis allows to have the events in the generated ABI for LendingPool.")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"collateralAsset"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"The address of the underlying asset used as collateral, to receive as result of the liquidation")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"debtAsset"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"The address of the underlying borrowed asset to be repaid with the liquidation")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"user"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"The address of the borrower getting liquidated")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"debtToCover"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"The debt amount of borrowed ",(0,l.kt)("inlineCode",{parentName:"td"},"asset")," the liquidator wants to cover")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"liquidatedCollateralAmount"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"The amount of collateral received by the liiquidator")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"liquidator"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"The address of the liquidator")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"receiveAToken"),(0,l.kt)("td",{parentName:"tr",align:null},"bool"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"true")," if the liquidators wants to receive the collateral aTokens, ",(0,l.kt)("inlineCode",{parentName:"td"},"false")," if he wants to receive the underlying collateral asset directly")))),(0,l.kt)("h3",{id:"reservedataupdated"},"ReserveDataUpdated"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"event ReserveDataUpdated(address reserve, uint256 liquidityRate, uint256 stableBorrowRate, uint256 variableBorrowRate, uint256 liquidityIndex, uint256 variableBorrowIndex)\n")),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"Emitted when the state of a reserve is updated. NOTE: This event is actually declared\nin the ReserveLogic library and emitted in the updateInterestRates() function. Since the function is internal,\nthe event will actually be fired by the LendingPool contract. The event is therefore replicated here so it\ngets added to the LendingPool ABI")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"reserve"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"The address of the underlying asset of the reserve")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"liquidityRate"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"The new liquidity rate")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"stableBorrowRate"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"The new stable borrow rate")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"variableBorrowRate"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"The new variable borrow rate")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"liquidityIndex"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"The new liquidity index")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"variableBorrowIndex"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"The new variable borrow index")))),(0,l.kt)("h3",{id:"deposit-2"},"deposit"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function deposit(address asset, uint256 amount, address onBehalfOf, uint16 referralCode) external\n")),(0,l.kt)("p",null,"_Deposits an ",(0,l.kt)("inlineCode",{parentName:"p"},"amount")," of underlying asset into the reserve, receiving in return overlying aTokens."),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"E.g. User deposits 100 USDC and gets in return 100 aUSDC_")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"asset"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"The address of the underlying asset to deposit")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"amount"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"The amount to be deposited")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"onBehalfOf"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"The address that will receive the aTokens, same as msg.sender if the user   wants to receive them on his own wallet, or a different address if the beneficiary of aTokens   is a different wallet")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"referralCode"),(0,l.kt)("td",{parentName:"tr",align:null},"uint16"),(0,l.kt)("td",{parentName:"tr",align:null},"Code used to register the integrator originating the operation, for potential rewards.   0 if the action is executed directly by the user, without any middle-man")))),(0,l.kt)("h3",{id:"withdraw-1"},"withdraw"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function withdraw(address asset, uint256 amount, address to) external returns (uint256)\n")),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"Withdraws an ",(0,l.kt)("inlineCode",{parentName:"em"},"amount")," of underlying asset from the reserve, burning the equivalent aTokens owned\nE.g. User has 100 aUSDC, calls withdraw() and receives 100 USDC, burning the 100 aUSDC")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"asset"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"The address of the underlying asset to withdraw")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"amount"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"The underlying amount to be withdrawn   - Send the value type(uint256).max in order to withdraw the whole aToken balance")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"to"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"Address that will receive the underlying, same as msg.sender if the user   wants to receive it on his own wallet, or a different address if the beneficiary is a   different wallet")))),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[0]"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"The final amount withdrawn")))),(0,l.kt)("h3",{id:"borrow-2"},"borrow"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function borrow(address asset, uint256 amount, uint256 interestRateMode, uint16 referralCode, address onBehalfOf) external\n")),(0,l.kt)("p",null,"_Allows users to borrow a specific ",(0,l.kt)("inlineCode",{parentName:"p"},"amount")," of the reserve underlying asset, provided that the borrower\nalready deposited enough collateral, or he was given enough allowance by a credit delegator on the\ncorresponding debt token (StableDebtToken or VariableDebtToken)"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"E.g. User borrows 100 USDC passing as ",(0,l.kt)("inlineCode",{parentName:"li"},"onBehalfOf")," his own address, receiving the 100 USDC in his wallet\nand 100 stable/variable debt tokens, depending on the ",(0,l.kt)("inlineCode",{parentName:"li"},"interestRateMode"),"_")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"asset"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"The address of the underlying asset to borrow")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"amount"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"The amount to be borrowed")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"interestRateMode"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"The interest rate mode at which the user wants to borrow: 1 for Stable, 2 for Variable")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"referralCode"),(0,l.kt)("td",{parentName:"tr",align:null},"uint16"),(0,l.kt)("td",{parentName:"tr",align:null},"Code used to register the integrator originating the operation, for potential rewards.   0 if the action is executed directly by the user, without any middle-man")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"onBehalfOf"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"Address of the user who will receive the debt. Should be the address of the borrower itself calling the function if he wants to borrow against his own collateral, or the address of the credit delegator if he has been given credit delegation allowance")))),(0,l.kt)("h3",{id:"repay-2"},"repay"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function repay(address asset, uint256 amount, uint256 rateMode, address onBehalfOf) external returns (uint256)\n")),(0,l.kt)("p",null,"Repays a borrowed ",(0,l.kt)("inlineCode",{parentName:"p"},"amount")," on a specific reserve, burning the equivalent debt tokens owned"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"E.g. User repays 100 USDC, burning 100 variable/stable debt tokens of the ",(0,l.kt)("inlineCode",{parentName:"li"},"onBehalfOf")," address")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"asset"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"The address of the borrowed underlying asset previously borrowed")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"amount"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"The amount to repay - Send the value type(uint256).max in order to repay the whole debt for ",(0,l.kt)("inlineCode",{parentName:"td"},"asset")," on the specific ",(0,l.kt)("inlineCode",{parentName:"td"},"debtMode"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"rateMode"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"The interest rate mode at of the debt the user wants to repay: 1 for Stable, 2 for Variable")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"onBehalfOf"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"Address of the user who will get his debt reduced/removed. Should be the address of the user calling the function if he wants to reduce/remove his own debt, or the address of any other other borrower whose debt should be removed")))),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[0]"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"The final amount repaid")))),(0,l.kt)("h3",{id:"swapborrowratemode"},"swapBorrowRateMode"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function swapBorrowRateMode(address asset, uint256 rateMode) external\n")),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"Allows a borrower to swap his debt between stable and variable mode, or viceversa")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"asset"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"The address of the underlying asset borrowed")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"rateMode"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"The rate mode that the user wants to swap to")))),(0,l.kt)("h3",{id:"rebalancestableborrowrate-1"},"rebalanceStableBorrowRate"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function rebalanceStableBorrowRate(address asset, address user) external\n")),(0,l.kt)("p",null,"_Rebalances the stable interest rate of a user to the current stable rate defined on the reserve."),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Users can be rebalanced if the following conditions are satisfied:",(0,l.kt)("ol",{parentName:"li"},(0,l.kt)("li",{parentName:"ol"},"Usage ratio is above 95%"),(0,l.kt)("li",{parentName:"ol"},"the current deposit APY is below REBALANCE",(0,l.kt)("em",{parentName:"li"},"UP_THRESHOLD * maxVariableBorrowRate, which means that too much has been\nborrowed at a stable rate and depositors are not earning enough"))))),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"asset"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"The address of the underlying asset borrowed")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"user"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"The address of the user to be rebalanced")))),(0,l.kt)("h3",{id:"setuserusereserveascollateral"},"setUserUseReserveAsCollateral"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function setUserUseReserveAsCollateral(address asset, bool useAsCollateral) external\n")),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"Allows depositors to enable/disable a specific deposited asset as collateral")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"asset"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"The address of the underlying asset deposited")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"useAsCollateral"),(0,l.kt)("td",{parentName:"tr",align:null},"bool"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"true")," if the user wants to use the deposit as collateral, ",(0,l.kt)("inlineCode",{parentName:"td"},"false")," otherwise")))),(0,l.kt)("h3",{id:"liquidationcall-1"},"liquidationCall"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function liquidationCall(address collateralAsset, address debtAsset, address user, uint256 debtToCover, bool receiveAToken) external\n")),(0,l.kt)("p",null,"_Function to liquidate a non-healthy position collateral-wise, with Health Factor below 1"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"The caller (liquidator) covers ",(0,l.kt)("inlineCode",{parentName:"li"},"debtToCover")," amount of debt of the user getting liquidated, and receives\na proportionally amount of the ",(0,l.kt)("inlineCode",{parentName:"li"},"collateralAsset")," plus a bonus to cover market risk_")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"collateralAsset"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"The address of the underlying asset used as collateral, to receive as result of the liquidation")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"debtAsset"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"The address of the underlying borrowed asset to be repaid with the liquidation")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"user"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"The address of the borrower getting liquidated")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"debtToCover"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"The debt amount of borrowed ",(0,l.kt)("inlineCode",{parentName:"td"},"asset")," the liquidator wants to cover")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"receiveAToken"),(0,l.kt)("td",{parentName:"tr",align:null},"bool"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"true")," if the liquidators wants to receive the collateral aTokens, ",(0,l.kt)("inlineCode",{parentName:"td"},"false")," if he wants to receive the underlying collateral asset directly")))),(0,l.kt)("h3",{id:"flashloan-1"},"flashLoan"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function flashLoan(address receiverAddress, address[] assets, uint256[] amounts, uint256[] modes, address onBehalfOf, bytes params, uint16 referralCode) external\n")),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"Allows smartcontracts to access the liquidity of the pool within one transaction,\nas long as the amount taken plus a fee is returned.\nIMPORTANT There are security concerns for developers of flashloan receiver contracts that must be kept into consideration.\nFor further details please visit ",(0,l.kt)("a",{parentName:"em",href:"https://developers.aave.com"},"https://developers.aave.com"))),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"receiverAddress"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"The address of the contract receiving the funds, implementing the IFlashLoanReceiver interface")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"assets"),(0,l.kt)("td",{parentName:"tr",align:null},"address[]"),(0,l.kt)("td",{parentName:"tr",align:null},"The addresses of the assets being flash-borrowed")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"amounts"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256[]"),(0,l.kt)("td",{parentName:"tr",align:null},"The amounts amounts being flash-borrowed")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"modes"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256[]"),(0,l.kt)("td",{parentName:"tr",align:null},"Types of the debt to open if the flash loan is not returned:   0 -> Don't open any debt, just revert if funds can't be transferred from the receiver   1 -> Open debt at stable rate for the value of the amount flash-borrowed to the ",(0,l.kt)("inlineCode",{parentName:"td"},"onBehalfOf")," address   2 -> Open debt at variable rate for the value of the amount flash-borrowed to the ",(0,l.kt)("inlineCode",{parentName:"td"},"onBehalfOf")," address")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"onBehalfOf"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"The address  that will receive the debt in the case of using on ",(0,l.kt)("inlineCode",{parentName:"td"},"modes")," 1 or 2")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"params"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes"),(0,l.kt)("td",{parentName:"tr",align:null},"Variadic packed params to pass to the receiver as extra information")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"referralCode"),(0,l.kt)("td",{parentName:"tr",align:null},"uint16"),(0,l.kt)("td",{parentName:"tr",align:null},"Code used to register the integrator originating the operation, for potential rewards.   0 if the action is executed directly by the user, without any middle-man")))),(0,l.kt)("h3",{id:"getuseraccountdata"},"getUserAccountData"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function getUserAccountData(address user) external view returns (uint256 totalCollateralETH, uint256 totalDebtETH, uint256 availableBorrowsETH, uint256 currentLiquidationThreshold, uint256 ltv, uint256 healthFactor)\n")),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"Returns the user account data across all the reserves")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"user"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"The address of the user")))),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"totalCollateralETH"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"the total collateral in ETH of the user")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"totalDebtETH"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"the total debt in ETH of the user")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"availableBorrowsETH"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"the borrowing power left of the user")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"currentLiquidationThreshold"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"the liquidation threshold of the user")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"ltv"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"the loan to value of the user")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"healthFactor"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"the current health factor of the user")))),(0,l.kt)("h3",{id:"initreserve"},"initReserve"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function initReserve(address reserve, address aTokenAddress, address stableDebtAddress, address variableDebtAddress, address interestRateStrategyAddress) external\n")),(0,l.kt)("h3",{id:"setreserveinterestratestrategyaddress"},"setReserveInterestRateStrategyAddress"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function setReserveInterestRateStrategyAddress(address reserve, address rateStrategyAddress) external\n")),(0,l.kt)("h3",{id:"setconfiguration"},"setConfiguration"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function setConfiguration(address reserve, uint256 configuration) external\n")),(0,l.kt)("h3",{id:"getconfiguration"},"getConfiguration"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function getConfiguration(address asset) external view returns (struct DataTypes.ReserveConfigurationMap)\n")),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"Returns the configuration of the reserve")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"asset"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"The address of the underlying asset of the reserve")))),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[0]"),(0,l.kt)("td",{parentName:"tr",align:null},"struct DataTypes.ReserveConfigurationMap"),(0,l.kt)("td",{parentName:"tr",align:null},"The configuration of the reserve")))),(0,l.kt)("h3",{id:"getuserconfiguration"},"getUserConfiguration"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function getUserConfiguration(address user) external view returns (struct DataTypes.UserConfigurationMap)\n")),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"Returns the configuration of the user across all the reserves")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"user"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"The user address")))),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[0]"),(0,l.kt)("td",{parentName:"tr",align:null},"struct DataTypes.UserConfigurationMap"),(0,l.kt)("td",{parentName:"tr",align:null},"The configuration of the user")))),(0,l.kt)("h3",{id:"getreservenormalizedincome"},"getReserveNormalizedIncome"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function getReserveNormalizedIncome(address asset) external view returns (uint256)\n")),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"Returns the normalized income normalized income of the reserve")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"asset"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"The address of the underlying asset of the reserve")))),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[0]"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"The reserve's normalized income")))),(0,l.kt)("h3",{id:"getreservenormalizedvariabledebt"},"getReserveNormalizedVariableDebt"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function getReserveNormalizedVariableDebt(address asset) external view returns (uint256)\n")),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"Returns the normalized variable debt per unit of asset")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"asset"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"The address of the underlying asset of the reserve")))),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[0]"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"The reserve normalized variable debt")))),(0,l.kt)("h3",{id:"getreservedata-1"},"getReserveData"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function getReserveData(address asset) external view returns (struct DataTypes.ReserveData)\n")),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"Returns the state and configuration of the reserve")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"asset"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"The address of the underlying asset of the reserve")))),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[0]"),(0,l.kt)("td",{parentName:"tr",align:null},"struct DataTypes.ReserveData"),(0,l.kt)("td",{parentName:"tr",align:null},"The state of the reserve")))),(0,l.kt)("h3",{id:"finalizetransfer"},"finalizeTransfer"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function finalizeTransfer(address asset, address from, address to, uint256 amount, uint256 balanceFromAfter, uint256 balanceToBefore) external\n")),(0,l.kt)("h3",{id:"getreserveslist"},"getReservesList"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function getReservesList() external view returns (address[])\n")),(0,l.kt)("h3",{id:"getaddressesprovider"},"getAddressesProvider"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function getAddressesProvider() external view returns (contract ILendingPoolAddressesProvider)\n")),(0,l.kt)("h3",{id:"setpause"},"setPause"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function setPause(bool val) external\n")),(0,l.kt)("h3",{id:"paused-1"},"paused"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function paused() external view returns (bool)\n")),(0,l.kt)("h2",{id:"istabledebttoken"},"IStableDebtToken"),(0,l.kt)("h3",{id:"mint-1"},"Mint"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"event Mint(address user, address onBehalfOf, uint256 amount, uint256 currentBalance, uint256 balanceIncrease, uint256 newRate, uint256 avgStableRate, uint256 newTotalSupply)\n")),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"Emitted when new stable debt is minted")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"user"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"The address of the user who triggered the minting")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"onBehalfOf"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"The recipient of stable debt tokens")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"amount"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"The amount minted")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"currentBalance"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"The current balance of the user")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"balanceIncrease"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"The increase in balance since the last action of the user")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"newRate"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"The rate of the debt after the minting")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"avgStableRate"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"The new average stable rate after the minting")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"newTotalSupply"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"The new total supply of the stable debt token after the action")))),(0,l.kt)("h3",{id:"burn"},"Burn"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"event Burn(address user, uint256 amount, uint256 currentBalance, uint256 balanceIncrease, uint256 avgStableRate, uint256 newTotalSupply)\n")),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"Emitted when new stable debt is burned")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"user"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"The address of the user")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"amount"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"The amount being burned")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"currentBalance"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"The current balance of the user")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"balanceIncrease"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"The the increase in balance since the last action of the user")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"avgStableRate"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"The new average stable rate after the burning")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"newTotalSupply"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"The new total supply of the stable debt token after the action")))),(0,l.kt)("h3",{id:"approvedelegation"},"approveDelegation"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function approveDelegation(address delegatee, uint256 amount) external\n")),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"delegates borrowing power to a user on the specific debt token")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"delegatee"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"the address receiving the delegated borrowing power")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"amount"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"the maximum amount being delegated. Delegation will still respect the liquidation constraints (even if delegated, a delegatee cannot force a delegator HF to go below 1)")))),(0,l.kt)("h3",{id:"borrowallowance"},"borrowAllowance"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function borrowAllowance(address fromUser, address toUser) external view returns (uint256)\n")),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"returns the borrow allowance of the user")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"fromUser"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"The user to giving allowance")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"toUser"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"The user to give allowance to")))),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[0]"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"the current allowance of toUser")))),(0,l.kt)("h3",{id:"mint-2"},"mint"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function mint(address user, address onBehalfOf, uint256 amount, uint256 rate) external returns (bool)\n")),(0,l.kt)("p",null,"_Mints debt token to the ",(0,l.kt)("inlineCode",{parentName:"p"},"onBehalfOf")," address."),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"The resulting rate is the weighted average between the rate of the new debt\nand the rate of the previous debt_")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"user"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"The address receiving the borrowed underlying, being the delegatee in case of credit delegate, or same as ",(0,l.kt)("inlineCode",{parentName:"td"},"onBehalfOf")," otherwise")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"onBehalfOf"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"The address receiving the debt tokens")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"amount"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"The amount of debt tokens to mint")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"rate"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"The rate of the debt being minted")))),(0,l.kt)("h3",{id:"burn-1"},"burn"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function burn(address user, uint256 amount) external\n")),(0,l.kt)("p",null,"_Burns debt of ",(0,l.kt)("inlineCode",{parentName:"p"},"user")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"The resulting rate is the weighted average between the rate of the new debt\nand the rate of the previous debt_")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"user"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"The address of the user getting his debt burned")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"amount"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"The amount of debt tokens getting burned")))),(0,l.kt)("h3",{id:"getaveragestablerate"},"getAverageStableRate"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function getAverageStableRate() external view returns (uint256)\n")),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"Returns the average rate of all the stable rate loans.")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[0]"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"The average stable rate")))),(0,l.kt)("h3",{id:"getuserstablerate"},"getUserStableRate"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function getUserStableRate(address user) external view returns (uint256)\n")),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"Returns the stable rate of the user debt")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[0]"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"The stable rate of the user")))),(0,l.kt)("h3",{id:"getuserlastupdated"},"getUserLastUpdated"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function getUserLastUpdated(address user) external view returns (uint40)\n")),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"Returns the timestamp of the last update of the user")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[0]"),(0,l.kt)("td",{parentName:"tr",align:null},"uint40"),(0,l.kt)("td",{parentName:"tr",align:null},"The timestamp")))),(0,l.kt)("h3",{id:"getsupplydata"},"getSupplyData"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function getSupplyData() external view returns (uint256, uint256, uint256, uint40)\n")),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"Returns the principal, the total supply and the average stable rate")),(0,l.kt)("h3",{id:"gettotalsupplylastupdated"},"getTotalSupplyLastUpdated"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function getTotalSupplyLastUpdated() external view returns (uint40)\n")),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"Returns the timestamp of the last update of the total supply")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[0]"),(0,l.kt)("td",{parentName:"tr",align:null},"uint40"),(0,l.kt)("td",{parentName:"tr",align:null},"The timestamp")))),(0,l.kt)("h3",{id:"gettotalsupplyandavgrate"},"getTotalSupplyAndAvgRate"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function getTotalSupplyAndAvgRate() external view returns (uint256, uint256)\n")),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"Returns the total supply and the average stable rate")),(0,l.kt)("h3",{id:"principalbalanceof"},"principalBalanceOf"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function principalBalanceOf(address user) external view returns (uint256)\n")),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"Returns the principal debt balance of the user")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[0]"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"The debt balance of the user since the last burn/mint action")))),(0,l.kt)("h2",{id:"idynamicpricing"},"IDynamicPricing"),(0,l.kt)("h3",{id:"dynamicpricingstate"},"DynamicPricingState"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"enum DynamicPricingState {\n  NotStarted,\n  Finished,\n  InProgress,\n  Aborted\n}\n")),(0,l.kt)("h3",{id:"getpricingtype"},"getPricingType"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function getPricingType() external view returns (bytes32)\n")),(0,l.kt)("h3",{id:"getprice"},"getPrice"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function getPrice(bytes32 did) external view returns (uint256)\n")),(0,l.kt)("h3",{id:"gettokenaddress"},"getTokenAddress"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function getTokenAddress(bytes32 did) external view returns (address)\n")),(0,l.kt)("h3",{id:"getstatus"},"getStatus"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function getStatus(bytes32 did) external view returns (enum IDynamicPricing.DynamicPricingState, uint256, address)\n")),(0,l.kt)("h3",{id:"canbepurchased"},"canBePurchased"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function canBePurchased(bytes32 did) external view returns (bool)\n")),(0,l.kt)("h3",{id:"withdraw-2"},"withdraw"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function withdraw(bytes32 did, address withdrawAddress) external returns (bool)\n")),(0,l.kt)("h2",{id:"ilist"},"IList"),(0,l.kt)("h3",{id:"has-2"},"has"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function has(bytes32 value) external view returns (bool)\n")),(0,l.kt)("h3",{id:"has-3"},"has"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function has(bytes32 value, bytes32 id) external view returns (bool)\n")),(0,l.kt)("h2",{id:"iroyaltyscheme"},"IRoyaltyScheme"),(0,l.kt)("h3",{id:"check"},"check"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function check(bytes32 _did, uint256[] _amounts, address[] _receivers, address _tokenAddress) external view returns (bool)\n")),(0,l.kt)("p",null,"check that royalties are correct"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_did"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"compute royalties for this DID")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_amounts"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256[]"),(0,l.kt)("td",{parentName:"tr",align:null},"amounts in payment")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_receivers"),(0,l.kt)("td",{parentName:"tr",align:null},"address[]"),(0,l.kt)("td",{parentName:"tr",align:null},"receivers of payments")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_tokenAddress"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"payment token. zero address means native token (ether)")))),(0,l.kt)("h2",{id:"isecretstore"},"ISecretStore"),(0,l.kt)("h3",{id:"checkpermissions-2"},"checkPermissions"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function checkPermissions(address user, bytes32 documentKeyId) external view returns (bool permissionGranted)\n")),(0,l.kt)("p",null,"checkPermissions is called by Parity secret store"),(0,l.kt)("h2",{id:"isecretstorepermission"},"ISecretStorePermission"),(0,l.kt)("h3",{id:"grantpermission-2"},"grantPermission"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function grantPermission(address user, bytes32 documentKeyId) external\n")),(0,l.kt)("p",null,"grantPermission is called only by documentKeyId Owner or provider"),(0,l.kt)("h3",{id:"renouncepermission-1"},"renouncePermission"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function renouncePermission(address user, bytes32 documentKeyId) external\n")),(0,l.kt)("p",null,"renouncePermission is called only by documentKeyId Owner or provider"),(0,l.kt)("h2",{id:"iwethgateway"},"IWETHGateway"),(0,l.kt)("h3",{id:"depositeth"},"depositETH"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function depositETH(address lendingPool, address onBehalfOf, uint16 referralCode) external payable\n")),(0,l.kt)("h3",{id:"withdraweth"},"withdrawETH"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function withdrawETH(address lendingPool, uint256 amount, address to) external\n")),(0,l.kt)("h3",{id:"repayeth"},"repayETH"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function repayETH(address lendingPool, uint256 amount, uint256 rateMode, address onBehalfOf) external payable\n")),(0,l.kt)("h3",{id:"borroweth"},"borrowETH"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function borrowETH(address lendingPool, uint256 amount, uint256 interesRateMode, uint16 referralCode) external\n")),(0,l.kt)("h2",{id:"datatypes"},"DataTypes"),(0,l.kt)("h3",{id:"reservedata"},"ReserveData"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"struct ReserveData {\n  struct DataTypes.ReserveConfigurationMap configuration;\n  uint128 liquidityIndex;\n  uint128 variableBorrowIndex;\n  uint128 currentLiquidityRate;\n  uint128 currentVariableBorrowRate;\n  uint128 currentStableBorrowRate;\n  uint40 lastUpdateTimestamp;\n  address aTokenAddress;\n  address stableDebtTokenAddress;\n  address variableDebtTokenAddress;\n  address interestRateStrategyAddress;\n  uint8 id;\n}\n")),(0,l.kt)("h3",{id:"reserveconfigurationmap"},"ReserveConfigurationMap"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"struct ReserveConfigurationMap {\n  uint256 data;\n}\n")),(0,l.kt)("h3",{id:"userconfigurationmap"},"UserConfigurationMap"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"struct UserConfigurationMap {\n  uint256 data;\n}\n")),(0,l.kt)("h3",{id:"interestratemode"},"InterestRateMode"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"enum InterestRateMode {\n  NONE,\n  STABLE,\n  VARIABLE\n}\n")),(0,l.kt)("h2",{id:"safemath"},"SafeMath"),(0,l.kt)("h3",{id:"add-2"},"add"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function add(uint256 a, uint256 b) internal pure returns (uint256)\n")),(0,l.kt)("p",null,"_Returns the addition of two unsigned integers, reverting on\noverflow."),(0,l.kt)("p",null,"Counterpart to Solidity's ",(0,l.kt)("inlineCode",{parentName:"p"},"+")," operator."),(0,l.kt)("p",null,"Requirements:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Addition cannot overflow._")),(0,l.kt)("h3",{id:"sub"},"sub"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function sub(uint256 a, uint256 b) internal pure returns (uint256)\n")),(0,l.kt)("p",null,"_Returns the subtraction of two unsigned integers, reverting on\noverflow (when the result is negative)."),(0,l.kt)("p",null,"Counterpart to Solidity's ",(0,l.kt)("inlineCode",{parentName:"p"},"-")," operator."),(0,l.kt)("p",null,"Requirements:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Subtraction cannot overflow._")),(0,l.kt)("h3",{id:"sub-1"},"sub"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function sub(uint256 a, uint256 b, string errorMessage) internal pure returns (uint256)\n")),(0,l.kt)("p",null,"_Returns the subtraction of two unsigned integers, reverting with custom message on\noverflow (when the result is negative)."),(0,l.kt)("p",null,"Counterpart to Solidity's ",(0,l.kt)("inlineCode",{parentName:"p"},"-")," operator."),(0,l.kt)("p",null,"Requirements:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Subtraction cannot overflow._")),(0,l.kt)("h3",{id:"mul"},"mul"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function mul(uint256 a, uint256 b) internal pure returns (uint256)\n")),(0,l.kt)("p",null,"_Returns the multiplication of two unsigned integers, reverting on\noverflow."),(0,l.kt)("p",null,"Counterpart to Solidity's ",(0,l.kt)("inlineCode",{parentName:"p"},"*")," operator."),(0,l.kt)("p",null,"Requirements:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Multiplication cannot overflow._")),(0,l.kt)("h3",{id:"div"},"div"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function div(uint256 a, uint256 b) internal pure returns (uint256)\n")),(0,l.kt)("p",null,"_Returns the integer division of two unsigned integers. Reverts on\ndivision by zero. The result is rounded towards zero."),(0,l.kt)("p",null,"Counterpart to Solidity's ",(0,l.kt)("inlineCode",{parentName:"p"},"/")," operator. Note: this function uses a\n",(0,l.kt)("inlineCode",{parentName:"p"},"revert")," opcode (which leaves remaining gas untouched) while Solidity\nuses an invalid opcode to revert (consuming all remaining gas)."),(0,l.kt)("p",null,"Requirements:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"The divisor cannot be zero._")),(0,l.kt)("h3",{id:"div-1"},"div"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function div(uint256 a, uint256 b, string errorMessage) internal pure returns (uint256)\n")),(0,l.kt)("p",null,"_Returns the integer division of two unsigned integers. Reverts with custom message on\ndivision by zero. The result is rounded towards zero."),(0,l.kt)("p",null,"Counterpart to Solidity's ",(0,l.kt)("inlineCode",{parentName:"p"},"/")," operator. Note: this function uses a\n",(0,l.kt)("inlineCode",{parentName:"p"},"revert")," opcode (which leaves remaining gas untouched) while Solidity\nuses an invalid opcode to revert (consuming all remaining gas)."),(0,l.kt)("p",null,"Requirements:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"The divisor cannot be zero._")),(0,l.kt)("h3",{id:"mod"},"mod"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function mod(uint256 a, uint256 b) internal pure returns (uint256)\n")),(0,l.kt)("p",null,"_Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\nReverts when dividing by zero."),(0,l.kt)("p",null,"Counterpart to Solidity's ",(0,l.kt)("inlineCode",{parentName:"p"},"%")," operator. This function uses a ",(0,l.kt)("inlineCode",{parentName:"p"},"revert"),"\nopcode (which leaves remaining gas untouched) while Solidity uses an\ninvalid opcode to revert (consuming all remaining gas)."),(0,l.kt)("p",null,"Requirements:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"The divisor cannot be zero._")),(0,l.kt)("h3",{id:"mod-1"},"mod"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function mod(uint256 a, uint256 b, string errorMessage) internal pure returns (uint256)\n")),(0,l.kt)("p",null,"_Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\nReverts with custom message when dividing by zero."),(0,l.kt)("p",null,"Counterpart to Solidity's ",(0,l.kt)("inlineCode",{parentName:"p"},"%")," operator. This function uses a ",(0,l.kt)("inlineCode",{parentName:"p"},"revert"),"\nopcode (which leaves remaining gas untouched) while Solidity uses an\ninvalid opcode to revert (consuming all remaining gas)."),(0,l.kt)("p",null,"Requirements:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"The divisor cannot be zero._")),(0,l.kt)("h2",{id:"address"},"Address"),(0,l.kt)("h3",{id:"iscontract-1"},"isContract"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function isContract(address account) internal view returns (bool)\n")),(0,l.kt)("p",null,"_Returns true if ",(0,l.kt)("inlineCode",{parentName:"p"},"account")," is a contract."),(0,l.kt)("h1",{id:"important"},"[IMPORTANT]"),(0,l.kt)("p",null,"It is unsafe to assume that an address for which this function returns\nfalse is an externally-owned account (EOA) and not a contract."),(0,l.kt)("p",null,"Among others, ",(0,l.kt)("inlineCode",{parentName:"p"},"isContract")," will return false for the following\ntypes of addresses:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"an externally-owned account"),(0,l.kt)("li",{parentName:"ul"},"a contract in construction"),(0,l.kt)("li",{parentName:"ul"},"an address where a contract will be created"),(0,l.kt)("li",{parentName:"ul"},"an address where a contract lived, but was destroyed\n====_")),(0,l.kt)("h3",{id:"sendvalue"},"sendValue"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function sendValue(address payable recipient, uint256 amount) internal\n")),(0,l.kt)("p",null,"_Replacement for Solidity's ",(0,l.kt)("inlineCode",{parentName:"p"},"transfer"),": sends ",(0,l.kt)("inlineCode",{parentName:"p"},"amount")," wei to\n",(0,l.kt)("inlineCode",{parentName:"p"},"recipient"),", forwarding all available gas and reverting on errors."),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://eips.ethereum.org/EIPS/eip-1884%5BEIP1884%5D"},"https://eips.ethereum.org/EIPS/eip-1884[EIP1884]")," increases the gas cost\nof certain opcodes, possibly making contracts go over the 2300 gas limit\nimposed by ",(0,l.kt)("inlineCode",{parentName:"p"},"transfer"),", making them unable to receive funds via\n",(0,l.kt)("inlineCode",{parentName:"p"},"transfer"),". {sendValue} removes this limitation."),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/%5BLearn"},"https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn")," more]."),(0,l.kt)("p",null,"IMPORTANT: because control is transferred to ",(0,l.kt)("inlineCode",{parentName:"p"},"recipient"),", care must be\ntaken to not create reentrancy vulnerabilities. Consider using\n{ReentrancyGuard} or the\n",(0,l.kt)("a",{parentName:"p",href:"https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern%5Bchecks-effects-interactions"},"https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions")," pattern]._"),(0,l.kt)("h2",{id:"safeerc20"},"SafeERC20"),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"Wrappers around ERC20 operations that throw on failure (when the token\ncontract returns false). Tokens that return no value (and instead revert or\nthrow on failure) are also supported, non-reverting calls are assumed to be\nsuccessful.\nTo use this library you can add a ",(0,l.kt)("inlineCode",{parentName:"em"},"using SafeERC20 for IERC20;")," statement to your contract,\nwhich allows you to call the safe operations as ",(0,l.kt)("inlineCode",{parentName:"em"},"token.safeTransfer(...)"),", etc.")),(0,l.kt)("h3",{id:"safetransfer"},"safeTransfer"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function safeTransfer(contract IERC20 token, address to, uint256 value) internal\n")),(0,l.kt)("h3",{id:"safetransferfrom"},"safeTransferFrom"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function safeTransferFrom(contract IERC20 token, address from, address to, uint256 value) internal\n")),(0,l.kt)("h3",{id:"safeapprove"},"safeApprove"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function safeApprove(contract IERC20 token, address spender, uint256 value) internal\n")),(0,l.kt)("h3",{id:"calloptionalreturn"},"callOptionalReturn"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function callOptionalReturn(contract IERC20 token, bytes data) private\n")),(0,l.kt)("h2",{id:"clonefactory"},"CloneFactory"),(0,l.kt)("h3",{id:"createclone"},"createClone"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function createClone(address target) internal returns (address result)\n")),(0,l.kt)("h3",{id:"isclone"},"isClone"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function isClone(address target, address query) internal view returns (bool result)\n")),(0,l.kt)("h2",{id:"epochlibrary"},"EpochLibrary"),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"Implementation of Epoch Library.\nFor an arbitrary Epoch, this library manages the life\ncycle of an Epoch. Usually this library is used for\nhandling the time window between conditions in an agreement.")),(0,l.kt)("h3",{id:"epoch"},"Epoch"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"struct Epoch {\n  uint256 timeLock;\n  uint256 timeOut;\n  uint256 blockNumber;\n}\n")),(0,l.kt)("h3",{id:"epochlist-1"},"EpochList"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"struct EpochList {\n  mapping(bytes32 &#x3D;&gt; struct EpochLibrary.Epoch) epochs;\n  bytes32[] epochIds;\n}\n")),(0,l.kt)("h3",{id:"create-2"},"create"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function create(struct EpochLibrary.EpochList _self, bytes32 _id, uint256 _timeLock, uint256 _timeOut) internal\n")),(0,l.kt)("p",null,"create creates new Epoch"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_self"),(0,l.kt)("td",{parentName:"tr",align:null},"struct EpochLibrary.EpochList"),(0,l.kt)("td",{parentName:"tr",align:null},"is the Epoch storage pointer")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_id"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null})),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_timeLock"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"value in block count (can not fulfill before)")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_timeOut"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"value in block count (can not fulfill after)")))),(0,l.kt)("h3",{id:"istimedout"},"isTimedOut"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function isTimedOut(struct EpochLibrary.EpochList _self, bytes32 _id) external view returns (bool)\n")),(0,l.kt)("p",null,"isTimedOut means you cannot fulfill after"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_self"),(0,l.kt)("td",{parentName:"tr",align:null},"struct EpochLibrary.EpochList"),(0,l.kt)("td",{parentName:"tr",align:null},"is the Epoch storage pointer")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_id"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null})))),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[0]"),(0,l.kt)("td",{parentName:"tr",align:null},"bool"),(0,l.kt)("td",{parentName:"tr",align:null},"true if the current block number is gt timeOut")))),(0,l.kt)("h3",{id:"istimelocked"},"isTimeLocked"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function isTimeLocked(struct EpochLibrary.EpochList _self, bytes32 _id) external view returns (bool)\n")),(0,l.kt)("p",null,"isTimeLocked means you cannot fulfill before"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_self"),(0,l.kt)("td",{parentName:"tr",align:null},"struct EpochLibrary.EpochList"),(0,l.kt)("td",{parentName:"tr",align:null},"is the Epoch storage pointer")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_id"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null})))),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[0]"),(0,l.kt)("td",{parentName:"tr",align:null},"bool"),(0,l.kt)("td",{parentName:"tr",align:null},"true if the current block number is gt timeLock")))),(0,l.kt)("h3",{id:"getepochtimeout"},"getEpochTimeOut"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function getEpochTimeOut(struct EpochLibrary.Epoch _self) public view returns (uint256)\n")),(0,l.kt)("p",null,"getEpochTimeOut"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_self"),(0,l.kt)("td",{parentName:"tr",align:null},"struct EpochLibrary.Epoch"),(0,l.kt)("td",{parentName:"tr",align:null},"is the Epoch storage pointer")))),(0,l.kt)("h3",{id:"getepochtimelock"},"getEpochTimeLock"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function getEpochTimeLock(struct EpochLibrary.Epoch _self) public view returns (uint256)\n")),(0,l.kt)("p",null,"getEpochTimeLock"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_self"),(0,l.kt)("td",{parentName:"tr",align:null},"struct EpochLibrary.Epoch"),(0,l.kt)("td",{parentName:"tr",align:null},"is the Epoch storage pointer")))),(0,l.kt)("h2",{id:"hashlistlibrary"},"HashListLibrary"),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"Implementation of the basic functionality of list of hash values.\nThis library allows other contracts to build and maintain lists\nand also preserves the privacy of the data by accepting only hashed\ncontent (bytes32 based data type)")),(0,l.kt)("h3",{id:"list"},"List"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"struct List {\n  address _owner;\n  bytes32[] values;\n  mapping(bytes32 &#x3D;&gt; uint256) indices;\n}\n")),(0,l.kt)("h3",{id:"onlylistowner"},"onlyListOwner"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"modifier onlyListOwner(struct HashListLibrary.List _self)\n")),(0,l.kt)("h3",{id:"add-3"},"add"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function add(struct HashListLibrary.List _self, bytes32 value) public returns (bool)\n")),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"add index an element then add it to a list")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_self"),(0,l.kt)("td",{parentName:"tr",align:null},"struct HashListLibrary.List"),(0,l.kt)("td",{parentName:"tr",align:null},"is a pointer to list in the storage")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"value"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"is a bytes32 value")))),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[0]"),(0,l.kt)("td",{parentName:"tr",align:null},"bool"),(0,l.kt)("td",{parentName:"tr",align:null},"true if value is added successfully")))),(0,l.kt)("h3",{id:"add-4"},"add"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function add(struct HashListLibrary.List _self, bytes32[] values) public returns (bool)\n")),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"put an array of elements without indexing\nthis meant to save gas in case of large arrays")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_self"),(0,l.kt)("td",{parentName:"tr",align:null},"struct HashListLibrary.List"),(0,l.kt)("td",{parentName:"tr",align:null},"is a pointer to list in the storage")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"values"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32[]"),(0,l.kt)("td",{parentName:"tr",align:null},"is an array of elements value")))),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[0]"),(0,l.kt)("td",{parentName:"tr",align:null},"bool"),(0,l.kt)("td",{parentName:"tr",align:null},"true if values are added successfully")))),(0,l.kt)("h3",{id:"update-1"},"update"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function update(struct HashListLibrary.List _self, bytes32 oldValue, bytes32 newValue) public returns (bool)\n")),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"update the value with a new value and maintain indices")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_self"),(0,l.kt)("td",{parentName:"tr",align:null},"struct HashListLibrary.List"),(0,l.kt)("td",{parentName:"tr",align:null},"is a pointer to list in the storage")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"oldValue"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"is an element value in a list")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"newValue"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"new value")))),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[0]"),(0,l.kt)("td",{parentName:"tr",align:null},"bool"),(0,l.kt)("td",{parentName:"tr",align:null},"true if value is updated successfully")))),(0,l.kt)("h3",{id:"remove-1"},"remove"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function remove(struct HashListLibrary.List _self, bytes32 value) public returns (bool)\n")),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"remove value from a list, updates indices, and list size")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_self"),(0,l.kt)("td",{parentName:"tr",align:null},"struct HashListLibrary.List"),(0,l.kt)("td",{parentName:"tr",align:null},"is a pointer to list in the storage")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"value"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"is an element value in a list")))),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[0]"),(0,l.kt)("td",{parentName:"tr",align:null},"bool"),(0,l.kt)("td",{parentName:"tr",align:null},"true if value is removed successfully")))),(0,l.kt)("h3",{id:"get-1"},"get"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function get(struct HashListLibrary.List _self, uint256 __index) public view returns (bytes32)\n")),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"has value by index")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_self"),(0,l.kt)("td",{parentName:"tr",align:null},"struct HashListLibrary.List"),(0,l.kt)("td",{parentName:"tr",align:null},"is a pointer to list in the storage")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"__index"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"is where is value is stored in the list")))),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[0]"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"the value if exists")))),(0,l.kt)("h3",{id:"index-1"},"index"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function index(struct HashListLibrary.List _self, uint256 from, uint256 to) public returns (bool)\n")),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"index is used to map each element value to its index on the list")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_self"),(0,l.kt)("td",{parentName:"tr",align:null},"struct HashListLibrary.List"),(0,l.kt)("td",{parentName:"tr",align:null},"is a pointer to list in the storage")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"from"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"index is where to 'from' indexing in the list")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"to"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"index is where to stop indexing")))),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[0]"),(0,l.kt)("td",{parentName:"tr",align:null},"bool"),(0,l.kt)("td",{parentName:"tr",align:null},"true if the sub list is indexed")))),(0,l.kt)("h3",{id:"setowner"},"setOwner"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function setOwner(struct HashListLibrary.List _self, address _owner) public\n")),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"setOwner set list owner\nparam _owner owner address")),(0,l.kt)("h3",{id:"indexof-1"},"indexOf"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function indexOf(struct HashListLibrary.List _self, bytes32 value) public view returns (uint256)\n")),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"indexOf gets the index of a value in a list")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_self"),(0,l.kt)("td",{parentName:"tr",align:null},"struct HashListLibrary.List"),(0,l.kt)("td",{parentName:"tr",align:null},"is a pointer to list in the storage")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"value"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"is element value in list")))),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[0]"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"value index in list")))),(0,l.kt)("h3",{id:"isindexed-1"},"isIndexed"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function isIndexed(struct HashListLibrary.List _self) public view returns (bool)\n")),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"isIndexed checks if the list is indexed")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_self"),(0,l.kt)("td",{parentName:"tr",align:null},"struct HashListLibrary.List"),(0,l.kt)("td",{parentName:"tr",align:null},"is a pointer to list in the storage")))),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[0]"),(0,l.kt)("td",{parentName:"tr",align:null},"bool"),(0,l.kt)("td",{parentName:"tr",align:null},"true if the list is indexed")))),(0,l.kt)("h3",{id:"all-1"},"all"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function all(struct HashListLibrary.List _self) public view returns (bytes32[])\n")),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"all returns all list elements")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_self"),(0,l.kt)("td",{parentName:"tr",align:null},"struct HashListLibrary.List"),(0,l.kt)("td",{parentName:"tr",align:null},"is a pointer to list in the storage")))),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[0]"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32[]"),(0,l.kt)("td",{parentName:"tr",align:null},"all list elements")))),(0,l.kt)("h3",{id:"has-4"},"has"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function has(struct HashListLibrary.List _self, bytes32 value) public view returns (bool)\n")),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"size returns the list size")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_self"),(0,l.kt)("td",{parentName:"tr",align:null},"struct HashListLibrary.List"),(0,l.kt)("td",{parentName:"tr",align:null},"is a pointer to list in the storage")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"value"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"is element value in list")))),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[0]"),(0,l.kt)("td",{parentName:"tr",align:null},"bool"),(0,l.kt)("td",{parentName:"tr",align:null},"true if the value exists")))),(0,l.kt)("h3",{id:"size-1"},"size"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function size(struct HashListLibrary.List _self) public view returns (uint256)\n")),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"size gets the list size")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_self"),(0,l.kt)("td",{parentName:"tr",align:null},"struct HashListLibrary.List"),(0,l.kt)("td",{parentName:"tr",align:null},"is a pointer to list in the storage")))),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[0]"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"total length of the list")))),(0,l.kt)("h3",{id:"ownedby-1"},"ownedBy"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function ownedBy(struct HashListLibrary.List _self) public view returns (address)\n")),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"ownedBy gets the list owner")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_self"),(0,l.kt)("td",{parentName:"tr",align:null},"struct HashListLibrary.List"),(0,l.kt)("td",{parentName:"tr",align:null},"is a pointer to list in the storage")))),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[0]"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"list owner")))),(0,l.kt)("h3",{id:"_index"},"_index"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function _index(struct HashListLibrary.List _self, uint256 from, uint256 to) private returns (bool)\n")),(0,l.kt)("p",null,"_",(0,l.kt)("em",{parentName:"p"},"index assign index to the list elements")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_self"),(0,l.kt)("td",{parentName:"tr",align:null},"struct HashListLibrary.List"),(0,l.kt)("td",{parentName:"tr",align:null},"is a pointer to list in the storage")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"from"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"is the starting index id")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"to"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"is the ending index id")))),(0,l.kt)("h2",{id:"abstractauction"},"AbstractAuction"),(0,l.kt)("h3",{id:"auction_manager_role"},"AUCTION_MANAGER_ROLE"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"bytes32 AUCTION_MANAGER_ROLE\n")),(0,l.kt)("h3",{id:"nvm_agreement_role"},"NVM_AGREEMENT_ROLE"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"bytes32 NVM_AGREEMENT_ROLE\n")),(0,l.kt)("h3",{id:"auction"},"Auction"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"struct Auction {\n  bytes32 did;\n  enum IDynamicPricing.DynamicPricingState state;\n  address creator;\n  uint256 blockNumberCreated;\n  uint256 floor;\n  uint256 starts;\n  uint256 ends;\n  uint256 price;\n  address tokenAddress;\n  address whoCanClaim;\n  string hash;\n}\n")),(0,l.kt)("h3",{id:"auctions"},"auctions"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"mapping(bytes32 => struct AbstractAuction.Auction) auctions\n")),(0,l.kt)("h3",{id:"auctionbids"},"auctionBids"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"mapping(bytes32 => mapping(address => uint256)) auctionBids\n")),(0,l.kt)("h3",{id:"auctioncreated"},"AuctionCreated"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"event AuctionCreated(bytes32 auctionId, bytes32 did, address creator, uint256 blockNumberCreated, uint256 floor, uint256 starts, uint256 ends, address tokenAddress)\n")),(0,l.kt)("h3",{id:"auctionchangedstate"},"AuctionChangedState"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"event AuctionChangedState(bytes32 auctionId, address who, enum IDynamicPricing.DynamicPricingState previousState, enum IDynamicPricing.DynamicPricingState newState)\n")),(0,l.kt)("h3",{id:"auctionbidreceived"},"AuctionBidReceived"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"event AuctionBidReceived(bytes32 auctionId, address bidder, address tokenAddress, uint256 amount)\n")),(0,l.kt)("h3",{id:"auctionwithdrawal"},"AuctionWithdrawal"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"event AuctionWithdrawal(bytes32 auctionId, address receiver, address tokenAddress, uint256 amount)\n")),(0,l.kt)("h3",{id:"receive-3"},"receive"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"receive() external payable\n")),(0,l.kt)("h3",{id:"abortauction"},"abortAuction"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function abortAuction(bytes32 _auctionId) external virtual\n")),(0,l.kt)("h3",{id:"withdraw-3"},"withdraw"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function withdraw(bytes32 _auctionId, address _withdrawAddress) external virtual returns (bool)\n")),(0,l.kt)("h3",{id:"getpricingtype-1"},"getPricingType"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function getPricingType() external pure virtual returns (bytes32)\n")),(0,l.kt)("h3",{id:"getprice-1"},"getPrice"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function getPrice(bytes32 _auctionId) external view returns (uint256)\n")),(0,l.kt)("h3",{id:"gettokenaddress-1"},"getTokenAddress"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function getTokenAddress(bytes32 _auctionId) external view returns (address)\n")),(0,l.kt)("h3",{id:"getstatus-1"},"getStatus"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function getStatus(bytes32 _auctionId) external view returns (enum IDynamicPricing.DynamicPricingState state, uint256 price, address whoCanClaim)\n")),(0,l.kt)("h3",{id:"canbepurchased-1"},"canBePurchased"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function canBePurchased(bytes32 _auctionId) external view virtual returns (bool)\n")),(0,l.kt)("h3",{id:"addnvmagreementrole"},"addNVMAgreementRole"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function addNVMAgreementRole(address account) public\n")),(0,l.kt)("h3",{id:"onlycreator"},"onlyCreator"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"modifier onlyCreator(bytes32 _auctionId)\n")),(0,l.kt)("h3",{id:"onlycreatororadmin"},"onlyCreatorOrAdmin"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"modifier onlyCreatorOrAdmin(bytes32 _auctionId)\n")),(0,l.kt)("h3",{id:"onlynotcreator"},"onlyNotCreator"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"modifier onlyNotCreator(bytes32 _auctionId)\n")),(0,l.kt)("h3",{id:"onlyafterstart"},"onlyAfterStart"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"modifier onlyAfterStart(bytes32 _auctionId)\n")),(0,l.kt)("h3",{id:"onlybeforestarts"},"onlyBeforeStarts"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"modifier onlyBeforeStarts(bytes32 _auctionId)\n")),(0,l.kt)("h3",{id:"onlybeforeend"},"onlyBeforeEnd"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"modifier onlyBeforeEnd(bytes32 _auctionId)\n")),(0,l.kt)("h3",{id:"onlynotabortedorfinished"},"onlyNotAbortedOrFinished"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"modifier onlyNotAbortedOrFinished(bytes32 _auctionId)\n")),(0,l.kt)("h3",{id:"onlyabortedorfinished"},"onlyAbortedOrFinished"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"modifier onlyAbortedOrFinished(bytes32 _auctionId)\n")),(0,l.kt)("h3",{id:"onlynotaborted"},"onlyNotAborted"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"modifier onlyNotAborted(bytes32 _auctionId)\n")),(0,l.kt)("h3",{id:"onlyfinishedoraborted"},"onlyFinishedOrAborted"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"modifier onlyFinishedOrAborted(bytes32 _auctionId)\n")),(0,l.kt)("h2",{id:"dutchauction"},"DutchAuction"),(0,l.kt)("h3",{id:"initialize-32"},"initialize"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function initialize(address _owner) external\n")),(0,l.kt)("p",null,"initialize init the contract with the following parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_owner"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"contract's owner account address")))),(0,l.kt)("h3",{id:"create-3"},"create"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function create(bytes32 _auctionId, bytes32 _did, uint256 _startPrice, uint256 _starts, uint256 _ends, address _tokenAddress, string _hash) external virtual\n")),(0,l.kt)("p",null,"It creates a new Auction given some setup parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_auctionId"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"unique auction identifier")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_did"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"reference to the asset part of the auction")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_startPrice"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"start price (and max) for the auction")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_starts"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"block number when the auction starts")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_ends"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"block number of when the auction ends")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_tokenAddress"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"token address to use for the auction. If address(0) means native token")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_hash"),(0,l.kt)("td",{parentName:"tr",align:null},"string"),(0,l.kt)("td",{parentName:"tr",align:null},"ipfs hash referring to the auction metadata")))),(0,l.kt)("h3",{id:"placenativetokenbid"},"placeNativeTokenBid"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function placeNativeTokenBid(bytes32 _auctionId) external payable virtual\n")),(0,l.kt)("h3",{id:"placeerc20bid"},"placeERC20Bid"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function placeERC20Bid(bytes32 _auctionId, uint256 _bidAmount) external virtual\n")),(0,l.kt)("h3",{id:"withdraw-4"},"withdraw"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function withdraw(bytes32 _auctionId, address _withdrawAddress) external virtual returns (bool)\n")),(0,l.kt)("h3",{id:"getpricingtype-2"},"getPricingType"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function getPricingType() external pure returns (bytes32)\n")),(0,l.kt)("h2",{id:"englishauction"},"EnglishAuction"),(0,l.kt)("h3",{id:"initialize-33"},"initialize"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function initialize(address _owner) external\n")),(0,l.kt)("p",null,"initialize init the contract with the following parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_owner"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"contract's owner account address")))),(0,l.kt)("h3",{id:"create-4"},"create"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function create(bytes32 _auctionId, bytes32 _did, uint256 _floor, uint256 _starts, uint256 _ends, address _tokenAddress, string _hash) external virtual\n")),(0,l.kt)("p",null,"It creates a new Auction given some setup parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_auctionId"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"unique auction identifier")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_did"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"reference to the asset part of the auction")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_floor"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"floor price")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_starts"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"block number when the auction starts")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_ends"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"block number of when the auction ends")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_tokenAddress"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"token address to use for the auction. If address(0) means native token")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_hash"),(0,l.kt)("td",{parentName:"tr",align:null},"string"),(0,l.kt)("td",{parentName:"tr",align:null},"ipfs hash referring to the auction metadata")))),(0,l.kt)("h3",{id:"placenativetokenbid-1"},"placeNativeTokenBid"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function placeNativeTokenBid(bytes32 _auctionId) external payable virtual\n")),(0,l.kt)("h3",{id:"placeerc20bid-1"},"placeERC20Bid"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function placeERC20Bid(bytes32 _auctionId, uint256 _bidAmount) external virtual\n")),(0,l.kt)("h3",{id:"getpricingtype-3"},"getPricingType"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function getPricingType() external pure returns (bytes32)\n")),(0,l.kt)("h2",{id:"didfactory"},"DIDFactory"),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"Implementation of the DID Registry.")),(0,l.kt)("h3",{id:"didregisterlist"},"didRegisterList"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"struct DIDRegistryLibrary.DIDRegisterList didRegisterList\n")),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"state storage for the DID registry")),(0,l.kt)("h3",{id:"didpermissions"},"didPermissions"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"mapping(bytes32 => mapping(address => bool)) didPermissions\n")),(0,l.kt)("h3",{id:"manager"},"manager"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"address manager\n")),(0,l.kt)("h3",{id:"onlydidowner"},"onlyDIDOwner"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"modifier onlyDIDOwner(bytes32 _did)\n")),(0,l.kt)("h3",{id:"onlymanager"},"onlyManager"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"modifier onlyManager()\n")),(0,l.kt)("h3",{id:"onlyownerproviderordelegated"},"onlyOwnerProviderOrDelegated"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"modifier onlyOwnerProviderOrDelegated(bytes32 _did)\n")),(0,l.kt)("h3",{id:"onlyvalidattributes"},"onlyValidAttributes"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"modifier onlyValidAttributes(string _attributes)\n")),(0,l.kt)("h3",{id:"nftisinitialized"},"nftIsInitialized"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"modifier nftIsInitialized(bytes32 _did)\n")),(0,l.kt)("h3",{id:"nft721isinitialized"},"nft721IsInitialized"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"modifier nft721IsInitialized(bytes32 _did)\n")),(0,l.kt)("h3",{id:"didattributeregistered"},"DIDAttributeRegistered"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"event DIDAttributeRegistered(bytes32 _did, address _owner, bytes32 _checksum, string _value, address _lastUpdatedBy, uint256 _blockNumberUpdated)\n")),(0,l.kt)("p",null,"DID Events"),(0,l.kt)("h3",{id:"didproviderremoved"},"DIDProviderRemoved"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"event DIDProviderRemoved(bytes32 _did, address _provider, bool state)\n")),(0,l.kt)("h3",{id:"didprovideradded"},"DIDProviderAdded"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"event DIDProviderAdded(bytes32 _did, address _provider)\n")),(0,l.kt)("h3",{id:"didownershiptransferred"},"DIDOwnershipTransferred"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"event DIDOwnershipTransferred(bytes32 _did, address _previousOwner, address _newOwner)\n")),(0,l.kt)("h3",{id:"didpermissiongranted"},"DIDPermissionGranted"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"event DIDPermissionGranted(bytes32 _did, address _owner, address _grantee)\n")),(0,l.kt)("h3",{id:"didpermissionrevoked"},"DIDPermissionRevoked"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"event DIDPermissionRevoked(bytes32 _did, address _owner, address _grantee)\n")),(0,l.kt)("h3",{id:"didprovenancedelegateremoved"},"DIDProvenanceDelegateRemoved"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"event DIDProvenanceDelegateRemoved(bytes32 _did, address _delegate, bool state)\n")),(0,l.kt)("h3",{id:"didprovenancedelegateadded"},"DIDProvenanceDelegateAdded"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"event DIDProvenanceDelegateAdded(bytes32 _did, address _delegate)\n")),(0,l.kt)("h3",{id:"setmanager"},"setManager"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function setManager(address _addr) external\n")),(0,l.kt)("p",null,"Sets the manager role. Should be the TransferCondition contract address"),(0,l.kt)("h3",{id:"registerattribute"},"registerAttribute"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function registerAttribute(bytes32 _didSeed, bytes32 _checksum, address[] _providers, string _url) public virtual\n")),(0,l.kt)("p",null,"Register DID attributes."),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"The first attribute of a DID registered sets the DID owner.\nSubsequent updates record _checksum and update info.")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_didSeed"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"refers to decentralized identifier seed (a bytes32 length ID).")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_checksum"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"includes a one-way HASH calculated using the DDO content.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_providers"),(0,l.kt)("td",{parentName:"tr",align:null},"address[]"),(0,l.kt)("td",{parentName:"tr",align:null})),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_url"),(0,l.kt)("td",{parentName:"tr",align:null},"string"),(0,l.kt)("td",{parentName:"tr",align:null},"refers to the attribute value, limited to 2048 bytes.")))),(0,l.kt)("h3",{id:"registerdid"},"registerDID"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function registerDID(bytes32 _didSeed, bytes32 _checksum, address[] _providers, string _url, bytes32 _activityId, string _attributes) public virtual\n")),(0,l.kt)("p",null,"Register DID attributes."),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"The first attribute of a DID registered sets the DID owner.\nSubsequent updates record _checksum and update info.")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_didSeed"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"refers to decentralized identifier seed (a bytes32 length ID).           The final DID will be calculated with the creator address using the ",(0,l.kt)("inlineCode",{parentName:"td"},"hashDID")," function")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_checksum"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"includes a one-way HASH calculated using the DDO content.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_providers"),(0,l.kt)("td",{parentName:"tr",align:null},"address[]"),(0,l.kt)("td",{parentName:"tr",align:null},"list of addresses that can act as an asset provider")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_url"),(0,l.kt)("td",{parentName:"tr",align:null},"string"),(0,l.kt)("td",{parentName:"tr",align:null},"refers to the url resolving the DID into a DID Document (DDO), limited to 2048 bytes.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_activityId"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"refers to activity")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_attributes"),(0,l.kt)("td",{parentName:"tr",align:null},"string"),(0,l.kt)("td",{parentName:"tr",align:null},"refers to the provenance attributes")))),(0,l.kt)("h3",{id:"hashdid"},"hashDID"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function hashDID(bytes32 _didSeed, address _creator) public pure returns (bytes32)\n")),(0,l.kt)("p",null,"It generates a DID using as seed a bytes32 and the address of the DID creator"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_didSeed"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"refers to DID Seed used as base to generate the final DID")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_creator"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"address of the creator of the DID")))),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[0]"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"the new DID created")))),(0,l.kt)("h3",{id:"areroyaltiesvalid"},"areRoyaltiesValid"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function areRoyaltiesValid(bytes32 _did, uint256[] _amounts, address[] _receivers, address _tokenAddress) public view returns (bool)\n")),(0,l.kt)("p",null,"areRoyaltiesValid checks if for a given DID and rewards distribution, this allocate the",(0,l.kt)("br",{parentName:"p"}),"\n","original creator royalties properly"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_did"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"refers to decentralized identifier (a byte32 length ID)")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_amounts"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256[]"),(0,l.kt)("td",{parentName:"tr",align:null},"refers to the amounts to reward")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_receivers"),(0,l.kt)("td",{parentName:"tr",align:null},"address[]"),(0,l.kt)("td",{parentName:"tr",align:null},"refers to the receivers of rewards")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_tokenAddress"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null})))),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[0]"),(0,l.kt)("td",{parentName:"tr",align:null},"bool"),(0,l.kt)("td",{parentName:"tr",align:null},"true if the rewards distribution respect the original creator royalties")))),(0,l.kt)("h3",{id:"wasgeneratedby"},"wasGeneratedBy"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function wasGeneratedBy(bytes32 _provId, bytes32 _did, address _agentId, bytes32 _activityId, string _attributes) internal returns (bool)\n")),(0,l.kt)("h3",{id:"used"},"used"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function used(bytes32 _provId, bytes32 _did, address _agentId, bytes32 _activityId, bytes _signatureUsing, string _attributes) public returns (bool success)\n")),(0,l.kt)("h3",{id:"wasderivedfrom"},"wasDerivedFrom"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function wasDerivedFrom(bytes32 _provId, bytes32 _newEntityDid, bytes32 _usedEntityDid, address _agentId, bytes32 _activityId, string _attributes) public returns (bool success)\n")),(0,l.kt)("h3",{id:"wasassociatedwith"},"wasAssociatedWith"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function wasAssociatedWith(bytes32 _provId, bytes32 _did, address _agentId, bytes32 _activityId, string _attributes) public returns (bool success)\n")),(0,l.kt)("h3",{id:"actedonbehalf"},"actedOnBehalf"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function actedOnBehalf(bytes32 _provId, bytes32 _did, address _delegateAgentId, address _responsibleAgentId, bytes32 _activityId, bytes _signatureDelegate, string _attributes) public returns (bool success)\n")),(0,l.kt)("p",null,"Implements the W3C PROV Delegation action\nEach party involved in this method (_delegateAgentId & _responsibleAgentId) must provide a valid signature.\nThe content to sign is a representation of the footprint of the event (_did + _delegateAgentId + _responsibleAgentId + _activityId)"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_provId"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"unique identifier referring to the provenance entry")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_did"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"refers to decentralized identifier (a bytes32 length ID) of the entity")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_delegateAgentId"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"refers to address acting on behalf of the provenance record")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_responsibleAgentId"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"refers to address responsible of the provenance record")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_activityId"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"refers to activity")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_signatureDelegate"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes"),(0,l.kt)("td",{parentName:"tr",align:null},"refers to the digital signature provided by the did delegate.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_attributes"),(0,l.kt)("td",{parentName:"tr",align:null},"string"),(0,l.kt)("td",{parentName:"tr",align:null},"refers to the provenance attributes")))),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"success"),(0,l.kt)("td",{parentName:"tr",align:null},"bool"),(0,l.kt)("td",{parentName:"tr",align:null},"true if the action was properly registered")))),(0,l.kt)("h3",{id:"adddidprovider"},"addDIDProvider"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function addDIDProvider(bytes32 _did, address _provider) external\n")),(0,l.kt)("p",null,"addDIDProvider add new DID provider."),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"it adds new DID provider to the providers list. A provider\nis any entity that can serve the registered asset")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_did"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"refers to decentralized identifier (a bytes32 length ID).")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_provider"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"provider's address.")))),(0,l.kt)("h3",{id:"removedidprovider"},"removeDIDProvider"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function removeDIDProvider(bytes32 _did, address _provider) external\n")),(0,l.kt)("p",null,"removeDIDProvider delete an existing DID provider."),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_did"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"refers to decentralized identifier (a bytes32 length ID).")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_provider"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"provider's address.")))),(0,l.kt)("h3",{id:"adddidprovenancedelegate"},"addDIDProvenanceDelegate"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function addDIDProvenanceDelegate(bytes32 _did, address _delegate) public\n")),(0,l.kt)("p",null,"addDIDProvenanceDelegate add new DID provenance delegate."),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"it adds new DID provenance delegate to the delegates list.\nA delegate is any entity that interact with the provenance entries of one DID")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_did"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"refers to decentralized identifier (a bytes32 length ID).")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_delegate"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"delegates's address.")))),(0,l.kt)("h3",{id:"removedidprovenancedelegate"},"removeDIDProvenanceDelegate"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function removeDIDProvenanceDelegate(bytes32 _did, address _delegate) external\n")),(0,l.kt)("p",null,"removeDIDProvenanceDelegate delete an existing DID delegate."),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_did"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"refers to decentralized identifier (a bytes32 length ID).")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_delegate"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"delegate's address.")))),(0,l.kt)("h3",{id:"transferdidownership"},"transferDIDOwnership"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function transferDIDOwnership(bytes32 _did, address _newOwner) external\n")),(0,l.kt)("p",null,"transferDIDOwnership transfer DID ownership"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_did"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"refers to decentralized identifier (a bytes32 length ID)")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_newOwner"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"new owner address")))),(0,l.kt)("h3",{id:"transferdidownershipmanaged"},"transferDIDOwnershipManaged"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function transferDIDOwnershipManaged(address _sender, bytes32 _did, address _newOwner) external\n")),(0,l.kt)("p",null,"transferDIDOwnershipManaged transfer DID ownership"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_sender"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null})),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_did"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"refers to decentralized identifier (a bytes32 length ID)")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_newOwner"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"new owner address")))),(0,l.kt)("h3",{id:"_transferdidownership"},"_transferDIDOwnership"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function _transferDIDOwnership(address _sender, bytes32 _did, address _newOwner) internal\n")),(0,l.kt)("h3",{id:"grantpermission-3"},"grantPermission"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function grantPermission(bytes32 _did, address _grantee) external\n")),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"grantPermission grants access permission to grantee")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_did"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"refers to decentralized identifier (a bytes32 length ID)")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_grantee"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"address")))),(0,l.kt)("h3",{id:"revokepermission"},"revokePermission"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function revokePermission(bytes32 _did, address _grantee) external\n")),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"revokePermission revokes access permission from grantee")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_did"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"refers to decentralized identifier (a bytes32 length ID)")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_grantee"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"address")))),(0,l.kt)("h3",{id:"getpermission"},"getPermission"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function getPermission(bytes32 _did, address _grantee) external view returns (bool)\n")),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"getPermission gets access permission of a grantee")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_did"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"refers to decentralized identifier (a bytes32 length ID)")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_grantee"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"address")))),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[0]"),(0,l.kt)("td",{parentName:"tr",align:null},"bool"),(0,l.kt)("td",{parentName:"tr",align:null},"true if grantee has access permission to a DID")))),(0,l.kt)("h3",{id:"isdidprovider"},"isDIDProvider"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function isDIDProvider(bytes32 _did, address _provider) public view returns (bool)\n")),(0,l.kt)("p",null,"isDIDProvider check whether a given DID provider exists"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_did"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"refers to decentralized identifier (a bytes32 length ID).")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_provider"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"provider's address.")))),(0,l.kt)("h3",{id:"isdidproviderorowner"},"isDIDProviderOrOwner"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function isDIDProviderOrOwner(bytes32 _did, address _provider) public view returns (bool)\n")),(0,l.kt)("h3",{id:"getdidregister"},"getDIDRegister"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function getDIDRegister(bytes32 _did) public view returns (address owner, bytes32 lastChecksum, string url, address lastUpdatedBy, uint256 blockNumberUpdated, address[] providers, uint256 nftSupply, uint256 mintCap, uint256 royalties)\n")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_did"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"refers to decentralized identifier (a bytes32 length ID).")))),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"owner"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"the did owner")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"lastChecksum"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"last checksum")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"url"),(0,l.kt)("td",{parentName:"tr",align:null},"string"),(0,l.kt)("td",{parentName:"tr",align:null},"URL to the DID metadata")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"lastUpdatedBy"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"who was the last updating the DID")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"blockNumberUpdated"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"In which block was the DID updated")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"providers"),(0,l.kt)("td",{parentName:"tr",align:null},"address[]"),(0,l.kt)("td",{parentName:"tr",align:null},"the list of providers")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"nftSupply"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"the supply of nfts")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"mintCap"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"the maximum number of nfts that can be minted")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"royalties"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"the royalties amount")))),(0,l.kt)("h3",{id:"getdidsupply"},"getDIDSupply"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function getDIDSupply(bytes32 _did) public view returns (uint256 nftSupply, uint256 mintCap)\n")),(0,l.kt)("h3",{id:"getblocknumberupdated"},"getBlockNumberUpdated"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function getBlockNumberUpdated(bytes32 _did) public view returns (uint256 blockNumberUpdated)\n")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_did"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"refers to decentralized identifier (a bytes32 length ID).")))),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"blockNumberUpdated"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"last modified (update) block number of a DID.")))),(0,l.kt)("h3",{id:"getdidowner"},"getDIDOwner"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function getDIDOwner(bytes32 _did) public view returns (address didOwner)\n")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_did"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"refers to decentralized identifier (a bytes32 length ID).")))),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"didOwner"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"the address of the DID owner.")))),(0,l.kt)("h3",{id:"getdidroyaltyrecipient"},"getDIDRoyaltyRecipient"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function getDIDRoyaltyRecipient(bytes32 _did) public view returns (address)\n")),(0,l.kt)("h3",{id:"getdidroyaltyscheme"},"getDIDRoyaltyScheme"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function getDIDRoyaltyScheme(bytes32 _did) public view returns (address)\n")),(0,l.kt)("h3",{id:"getdidcreator"},"getDIDCreator"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function getDIDCreator(bytes32 _did) public view returns (address)\n")),(0,l.kt)("h3",{id:"_grantpermission"},"_grantPermission"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function _grantPermission(bytes32 _did, address _grantee) internal\n")),(0,l.kt)("p",null,"_",(0,l.kt)("em",{parentName:"p"},"grantPermission grants access permission to grantee")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_did"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"refers to decentralized identifier (a bytes32 length ID)")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_grantee"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"address")))),(0,l.kt)("h3",{id:"_revokepermission"},"_revokePermission"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function _revokePermission(bytes32 _did, address _grantee) internal\n")),(0,l.kt)("p",null,"_",(0,l.kt)("em",{parentName:"p"},"revokePermission revokes access permission from grantee")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_did"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"refers to decentralized identifier (a bytes32 length ID)")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_grantee"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"address")))),(0,l.kt)("h3",{id:"_getpermission"},"_getPermission"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function _getPermission(bytes32 _did, address _grantee) internal view returns (bool)\n")),(0,l.kt)("p",null,"_",(0,l.kt)("em",{parentName:"p"},"getPermission gets access permission of a grantee")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_did"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"refers to decentralized identifier (a bytes32 length ID)")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_grantee"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"address")))),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[0]"),(0,l.kt)("td",{parentName:"tr",align:null},"bool"),(0,l.kt)("td",{parentName:"tr",align:null},"true if grantee has access permission to a DID")))),(0,l.kt)("h3",{id:"getprovenanceentry"},"getProvenanceEntry"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function getProvenanceEntry(bytes32 _provId) public view returns (bytes32 did, bytes32 relatedDid, address agentId, bytes32 activityId, address agentInvolvedId, uint8 method, address createdBy, uint256 blockNumberUpdated, bytes signature)\n")),(0,l.kt)("p",null,"Fetch the complete provenance entry attributes"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_provId"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"refers to the provenance identifier")))),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"did"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"to what DID refers this entry")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"relatedDid"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"DID related with the entry")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"agentId"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"the agent identifier")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"activityId"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"referring to the id of the activity")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"agentInvolvedId"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"agent involved with the action")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"method"),(0,l.kt)("td",{parentName:"tr",align:null},"uint8"),(0,l.kt)("td",{parentName:"tr",align:null},"the w3c provenance method")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"createdBy"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"who is creating this entry")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"blockNumberUpdated"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"in which block was updated")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"signature"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes"),(0,l.kt)("td",{parentName:"tr",align:null},"digital signature")))),(0,l.kt)("h3",{id:"isdidowner"},"isDIDOwner"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function isDIDOwner(address _address, bytes32 _did) public view returns (bool)\n")),(0,l.kt)("p",null,"isDIDOwner check whether a given address is owner for a DID"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_address"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"user address.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_did"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"refers to decentralized identifier (a bytes32 length ID).")))),(0,l.kt)("h3",{id:"isownerproviderordelegate"},"isOwnerProviderOrDelegate"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function isOwnerProviderOrDelegate(bytes32 _did) public view returns (bool)\n")),(0,l.kt)("p",null,"isOwnerProviderOrDelegate check whether msg.sender is owner, provider or\ndelegate for a DID given"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_did"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"refers to decentralized identifier (a bytes32 length ID).")))),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[0]"),(0,l.kt)("td",{parentName:"tr",align:null},"bool"),(0,l.kt)("td",{parentName:"tr",align:null},"boolean true if yes")))),(0,l.kt)("h3",{id:"isprovenancedelegate"},"isProvenanceDelegate"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function isProvenanceDelegate(bytes32 _did, address _delegate) public view returns (bool)\n")),(0,l.kt)("p",null,"isProvenanceDelegate check whether a given DID delegate exists"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_did"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"refers to decentralized identifier (a bytes32 length ID).")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_delegate"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"delegate's address.")))),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[0]"),(0,l.kt)("td",{parentName:"tr",align:null},"bool"),(0,l.kt)("td",{parentName:"tr",align:null},"boolean true if yes")))),(0,l.kt)("h3",{id:"getprovenanceowner"},"getProvenanceOwner"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function getProvenanceOwner(bytes32 _did) public view returns (address provenanceOwner)\n")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_did"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"refers to decentralized identifier (a bytes32 length ID).")))),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"provenanceOwner"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"the address of the Provenance owner.")))),(0,l.kt)("h2",{id:"didregistry-7"},"DIDRegistry"),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"Implementation of a Mintable DID Registry.")),(0,l.kt)("h3",{id:"erc1155-3"},"erc1155"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"contract NFTUpgradeable erc1155\n")),(0,l.kt)("h3",{id:"erc721-1"},"erc721"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"contract NFT721Upgradeable erc721\n")),(0,l.kt)("h3",{id:"royaltiescheckers"},"royaltiesCheckers"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"mapping(address => bool) royaltiesCheckers\n")),(0,l.kt)("h3",{id:"initialize-34"},"initialize"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function initialize(address _owner, address _erc1155, address _erc721) public\n")),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"DIDRegistry Initializer\nInitialize Ownable. Only on contract creation.")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_owner"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"refers to the owner of the contract.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_erc1155"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null})),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_erc721"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null})))),(0,l.kt)("h3",{id:"registerroyaltieschecker"},"registerRoyaltiesChecker"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function registerRoyaltiesChecker(address _addr) public\n")),(0,l.kt)("h3",{id:"didroyaltiesadded"},"DIDRoyaltiesAdded"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"event DIDRoyaltiesAdded(bytes32 did, address addr)\n")),(0,l.kt)("h3",{id:"didroyaltyrecipientchanged"},"DIDRoyaltyRecipientChanged"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"event DIDRoyaltyRecipientChanged(bytes32 did, address addr)\n")),(0,l.kt)("h3",{id:"setdidroyalties"},"setDIDRoyalties"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function setDIDRoyalties(bytes32 _did, address _royalties) public\n")),(0,l.kt)("h3",{id:"setdidroyaltyrecipient"},"setDIDRoyaltyRecipient"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function setDIDRoyaltyRecipient(bytes32 _did, address _recipient) public\n")),(0,l.kt)("h3",{id:"registermintabledid"},"registerMintableDID"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function registerMintableDID(bytes32 _didSeed, bytes32 _checksum, address[] _providers, string _url, uint256 _cap, uint8 _royalties, bool _mint, bytes32 _activityId, string _nftMetadata) public\n")),(0,l.kt)("p",null,"Register a Mintable DID using NFTs based in the ERC-1155 standard."),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"The first attribute of a DID registered sets the DID owner.\nSubsequent updates record _checksum and update info.")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_didSeed"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"refers to decentralized identifier seed (a bytes32 length ID).")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_checksum"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"includes a one-way HASH calculated using the DDO content.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_providers"),(0,l.kt)("td",{parentName:"tr",align:null},"address[]"),(0,l.kt)("td",{parentName:"tr",align:null},"list of addresses that can act as an asset provider")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_url"),(0,l.kt)("td",{parentName:"tr",align:null},"string"),(0,l.kt)("td",{parentName:"tr",align:null},"refers to the url resolving the DID into a DID Document (DDO), limited to 2048 bytes.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_cap"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"refers to the mint cap")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_royalties"),(0,l.kt)("td",{parentName:"tr",align:null},"uint8"),(0,l.kt)("td",{parentName:"tr",align:null},"refers to the royalties to reward to the DID creator in the secondary market")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_mint"),(0,l.kt)("td",{parentName:"tr",align:null},"bool"),(0,l.kt)("td",{parentName:"tr",align:null},"if true it mints the ERC-1155 NFTs attached to the asset")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_activityId"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"refers to activity")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_nftMetadata"),(0,l.kt)("td",{parentName:"tr",align:null},"string"),(0,l.kt)("td",{parentName:"tr",align:null},"refers to the url providing the NFT Metadata")))),(0,l.kt)("h3",{id:"registermintabledid721"},"registerMintableDID721"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function registerMintableDID721(bytes32 _didSeed, bytes32 _checksum, address[] _providers, string _url, uint8 _royalties, bool _mint, bytes32 _activityId, string _nftMetadata) public\n")),(0,l.kt)("p",null,"Register a Mintable DID using NFTs based in the ERC-721 standard."),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"The first attribute of a DID registered sets the DID owner.\nSubsequent updates record _checksum and update info.")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_didSeed"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"refers to decentralized identifier seed (a bytes32 length ID).")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_checksum"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"includes a one-way HASH calculated using the DDO content.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_providers"),(0,l.kt)("td",{parentName:"tr",align:null},"address[]"),(0,l.kt)("td",{parentName:"tr",align:null},"list of addresses that can act as an asset provider")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_url"),(0,l.kt)("td",{parentName:"tr",align:null},"string"),(0,l.kt)("td",{parentName:"tr",align:null},"refers to the url resolving the DID into a DID Document (DDO), limited to 2048 bytes.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_royalties"),(0,l.kt)("td",{parentName:"tr",align:null},"uint8"),(0,l.kt)("td",{parentName:"tr",align:null},"refers to the royalties to reward to the DID creator in the secondary market")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_mint"),(0,l.kt)("td",{parentName:"tr",align:null},"bool"),(0,l.kt)("td",{parentName:"tr",align:null},"if true it mints the ERC-1155 NFTs attached to the asset")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_activityId"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"refers to activity")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_nftMetadata"),(0,l.kt)("td",{parentName:"tr",align:null},"string"),(0,l.kt)("td",{parentName:"tr",align:null},"refers to the url providing the NFT Metadata")))),(0,l.kt)("h3",{id:"registermintabledid-1"},"registerMintableDID"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function registerMintableDID(bytes32 _didSeed, bytes32 _checksum, address[] _providers, string _url, uint256 _cap, uint8 _royalties, bytes32 _activityId, string _nftMetadata) public\n")),(0,l.kt)("p",null,"Register a Mintable DID."),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"The first attribute of a DID registered sets the DID owner.\nSubsequent updates record _checksum and update info.")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_didSeed"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"refers to decentralized identifier seed (a bytes32 length ID).")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_checksum"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"includes a one-way HASH calculated using the DDO content.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_providers"),(0,l.kt)("td",{parentName:"tr",align:null},"address[]"),(0,l.kt)("td",{parentName:"tr",align:null},"list of addresses that can act as an asset provider")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_url"),(0,l.kt)("td",{parentName:"tr",align:null},"string"),(0,l.kt)("td",{parentName:"tr",align:null},"refers to the url resolving the DID into a DID Document (DDO), limited to 2048 bytes.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_cap"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"refers to the mint cap")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_royalties"),(0,l.kt)("td",{parentName:"tr",align:null},"uint8"),(0,l.kt)("td",{parentName:"tr",align:null},"refers to the royalties to reward to the DID creator in the secondary market")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_activityId"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"refers to activity")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_nftMetadata"),(0,l.kt)("td",{parentName:"tr",align:null},"string"),(0,l.kt)("td",{parentName:"tr",align:null},"refers to the url providing the NFT Metadata")))),(0,l.kt)("h3",{id:"enableandmintdidnft"},"enableAndMintDidNft"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function enableAndMintDidNft(bytes32 _did, uint256 _cap, uint8 _royalties, bool _mint, string _nftMetadata) public returns (bool success)\n")),(0,l.kt)("p",null,"enableDidNft creates the initial setup of NFTs minting and royalties distribution for ERC-1155 NFTs.\nAfter this initial setup, this data can't be changed anymore for the DID given, even for the owner of the DID.\nThe reason of this is to avoid minting additional NFTs after the initial agreement, what could affect the\nvaluation of NFTs of a DID already created."),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"update the DID registry providers list by adding the mintCap and royalties configuration")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_did"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"refers to decentralized identifier (a byte32 length ID)")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_cap"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"refers to the mint cap")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_royalties"),(0,l.kt)("td",{parentName:"tr",align:null},"uint8"),(0,l.kt)("td",{parentName:"tr",align:null},"refers to the royalties to reward to the DID creator in the secondary market")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_mint"),(0,l.kt)("td",{parentName:"tr",align:null},"bool"),(0,l.kt)("td",{parentName:"tr",align:null},"if is true mint directly the amount capped tokens and lock in the _lockAddress")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_nftMetadata"),(0,l.kt)("td",{parentName:"tr",align:null},"string"),(0,l.kt)("td",{parentName:"tr",align:null},"refers to the url providing the NFT Metadata")))),(0,l.kt)("h3",{id:"enableandmintdidnft721"},"enableAndMintDidNft721"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function enableAndMintDidNft721(bytes32 _did, uint8 _royalties, bool _mint, string _nftMetadata) public returns (bool success)\n")),(0,l.kt)("p",null,"enableAndMintDidNft721 creates the initial setup of NFTs minting and royalties distribution for ERC-721 NFTs.\nAfter this initial setup, this data can't be changed anymore for the DID given, even for the owner of the DID.\nThe reason of this is to avoid minting additional NFTs after the initial agreement, what could affect the\nvaluation of NFTs of a DID already created."),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"update the DID registry providers list by adding the mintCap and royalties configuration")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_did"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"refers to decentralized identifier (a byte32 length ID)")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_royalties"),(0,l.kt)("td",{parentName:"tr",align:null},"uint8"),(0,l.kt)("td",{parentName:"tr",align:null},"refers to the royalties to reward to the DID creator in the secondary market")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_mint"),(0,l.kt)("td",{parentName:"tr",align:null},"bool"),(0,l.kt)("td",{parentName:"tr",align:null},"if is true mint directly the amount capped tokens and lock in the _lockAddress")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_nftMetadata"),(0,l.kt)("td",{parentName:"tr",align:null},"string"),(0,l.kt)("td",{parentName:"tr",align:null},"refers to the url providing the NFT Metadata")))),(0,l.kt)("h3",{id:"mint-3"},"mint"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function mint(bytes32 _did, uint256 _amount, address _receiver) public\n")),(0,l.kt)("p",null,"Mints a NFT associated to the DID"),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"Because ERC-1155 uses uint256 and DID's are bytes32, there is a conversion between both\nOnly the DID owner can mint NFTs associated to the DID")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_did"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"refers to decentralized identifier (a bytes32 length ID).")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_amount"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"amount to mint")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_receiver"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"the address that will receive the new nfts minted")))),(0,l.kt)("h3",{id:"mint-4"},"mint"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function mint(bytes32 _did, uint256 _amount) public\n")),(0,l.kt)("h3",{id:"mint721"},"mint721"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function mint721(bytes32 _did, address _receiver) public\n")),(0,l.kt)("p",null,"Mints a ERC-721 NFT associated to the DID"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_did"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"refers to decentralized identifier (a bytes32 length ID).")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_receiver"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"the address that will receive the new nfts minted")))),(0,l.kt)("h3",{id:"mint721-1"},"mint721"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function mint721(bytes32 _did) public\n")),(0,l.kt)("h3",{id:"burn-2"},"burn"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function burn(bytes32 _did, uint256 _amount) public\n")),(0,l.kt)("p",null,"Burns NFTs associated to the DID"),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"Because ERC-1155 uses uint256 and DID's are bytes32, there is a conversion between both\nOnly the DID owner can burn NFTs associated to the DID")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_did"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"refers to decentralized identifier (a bytes32 length ID).")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_amount"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"amount to burn")))),(0,l.kt)("h3",{id:"burn721"},"burn721"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function burn721(bytes32 _did) public\n")),(0,l.kt)("h2",{id:"didregistrylibrary"},"DIDRegistryLibrary"),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"All function calls are currently implemented without side effects")),(0,l.kt)("h3",{id:"didregister"},"DIDRegister"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"struct DIDRegister {\n  address owner;\n  uint8 royalties;\n  bool nftInitialized;\n  bool nft721Initialized;\n  address creator;\n  bytes32 lastChecksum;\n  string url;\n  address lastUpdatedBy;\n  uint256 blockNumberUpdated;\n  address[] providers;\n  address[] delegates;\n  uint256 nftSupply;\n  uint256 mintCap;\n  address royaltyRecipient;\n  contract IRoyaltyScheme royaltyScheme;\n}\n")),(0,l.kt)("h3",{id:"didregisterlist-1"},"DIDRegisterList"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"struct DIDRegisterList {\n  mapping(bytes32 &#x3D;&gt; struct DIDRegistryLibrary.DIDRegister) didRegisters;\n  bytes32[] didRegisterIds;\n}\n")),(0,l.kt)("h3",{id:"update-2"},"update"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function update(struct DIDRegistryLibrary.DIDRegisterList _self, bytes32 _did, bytes32 _checksum, string _url) external\n")),(0,l.kt)("p",null,"update the DID store"),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"access modifiers and storage pointer should be implemented in DIDRegistry")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_self"),(0,l.kt)("td",{parentName:"tr",align:null},"struct DIDRegistryLibrary.DIDRegisterList"),(0,l.kt)("td",{parentName:"tr",align:null},"refers to storage pointer")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_did"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"refers to decentralized identifier (a byte32 length ID)")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_checksum"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"includes a one-way HASH calculated using the DDO content")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_url"),(0,l.kt)("td",{parentName:"tr",align:null},"string"),(0,l.kt)("td",{parentName:"tr",align:null},"includes the url resolving to the DID Document (DDO)")))),(0,l.kt)("h3",{id:"initializenftconfig"},"initializeNftConfig"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function initializeNftConfig(struct DIDRegistryLibrary.DIDRegisterList _self, bytes32 _did, uint256 _cap, uint8 _royalties) internal\n")),(0,l.kt)("p",null,"initializeNftConfig creates the initial setup of NFTs minting and royalties distribution.\nAfter this initial setup, this data can't be changed anymore for the DID given, even for the owner of the DID.\nThe reason of this is to avoid minting additional NFTs after the initial agreement, what could affect the\nvaluation of NFTs of a DID already created."),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"update the DID registry providers list by adding the mintCap and royalties configuration")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_self"),(0,l.kt)("td",{parentName:"tr",align:null},"struct DIDRegistryLibrary.DIDRegisterList"),(0,l.kt)("td",{parentName:"tr",align:null},"refers to storage pointer")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_did"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"refers to decentralized identifier (a byte32 length ID)")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_cap"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"refers to the mint cap")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_royalties"),(0,l.kt)("td",{parentName:"tr",align:null},"uint8"),(0,l.kt)("td",{parentName:"tr",align:null},"refers to the royalties to reward to the DID creator in the secondary market        The royalties in secondary market for the creator should be between 0% >= x < 100%")))),(0,l.kt)("h3",{id:"initializenft721config"},"initializeNft721Config"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function initializeNft721Config(struct DIDRegistryLibrary.DIDRegisterList _self, bytes32 _did, uint8 _royalties) internal\n")),(0,l.kt)("h3",{id:"areroyaltiesvalid-1"},"areRoyaltiesValid"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function areRoyaltiesValid(struct DIDRegistryLibrary.DIDRegisterList _self, bytes32 _did, uint256[] _amounts, address[] _receivers, address _tokenAddress) internal view returns (bool)\n")),(0,l.kt)("p",null,"areRoyaltiesValid checks if for a given DID and rewards distribution, this allocate the",(0,l.kt)("br",{parentName:"p"}),"\n","original creator royalties properly"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_self"),(0,l.kt)("td",{parentName:"tr",align:null},"struct DIDRegistryLibrary.DIDRegisterList"),(0,l.kt)("td",{parentName:"tr",align:null},"refers to storage pointer")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_did"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"refers to decentralized identifier (a byte32 length ID)")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_amounts"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256[]"),(0,l.kt)("td",{parentName:"tr",align:null},"refers to the amounts to reward")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_receivers"),(0,l.kt)("td",{parentName:"tr",align:null},"address[]"),(0,l.kt)("td",{parentName:"tr",align:null},"refers to the receivers of rewards")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_tokenAddress"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null})))),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[0]"),(0,l.kt)("td",{parentName:"tr",align:null},"bool"),(0,l.kt)("td",{parentName:"tr",align:null},"true if the rewards distribution respect the original creator royalties")))),(0,l.kt)("h3",{id:"addprovider"},"addProvider"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function addProvider(struct DIDRegistryLibrary.DIDRegisterList _self, bytes32 _did, address provider) internal\n")),(0,l.kt)("p",null,"addProvider add provider to DID registry"),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"update the DID registry providers list by adding a new provider")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_self"),(0,l.kt)("td",{parentName:"tr",align:null},"struct DIDRegistryLibrary.DIDRegisterList"),(0,l.kt)("td",{parentName:"tr",align:null},"refers to storage pointer")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_did"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"refers to decentralized identifier (a byte32 length ID)")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"provider"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"the provider's address")))),(0,l.kt)("h3",{id:"removeprovider"},"removeProvider"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function removeProvider(struct DIDRegistryLibrary.DIDRegisterList _self, bytes32 _did, address _provider) internal returns (bool)\n")),(0,l.kt)("p",null,"removeProvider remove provider from DID registry"),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"update the DID registry providers list by removing an existing provider")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_self"),(0,l.kt)("td",{parentName:"tr",align:null},"struct DIDRegistryLibrary.DIDRegisterList"),(0,l.kt)("td",{parentName:"tr",align:null},"refers to storage pointer")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_did"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"refers to decentralized identifier (a byte32 length ID)")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_provider"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"the provider's address")))),(0,l.kt)("h3",{id:"updatedidowner"},"updateDIDOwner"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function updateDIDOwner(struct DIDRegistryLibrary.DIDRegisterList _self, bytes32 _did, address _newOwner) internal\n")),(0,l.kt)("p",null,"updateDIDOwner transfer DID ownership to a new owner"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_self"),(0,l.kt)("td",{parentName:"tr",align:null},"struct DIDRegistryLibrary.DIDRegisterList"),(0,l.kt)("td",{parentName:"tr",align:null},"refers to storage pointer")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_did"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"refers to decentralized identifier (a byte32 length ID)")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_newOwner"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"the new DID owner address")))),(0,l.kt)("h3",{id:"isprovider"},"isProvider"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function isProvider(struct DIDRegistryLibrary.DIDRegisterList _self, bytes32 _did, address _provider) public view returns (bool)\n")),(0,l.kt)("p",null,"isProvider check whether DID provider exists"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_self"),(0,l.kt)("td",{parentName:"tr",align:null},"struct DIDRegistryLibrary.DIDRegisterList"),(0,l.kt)("td",{parentName:"tr",align:null},"refers to storage pointer")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_did"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"refers to decentralized identifier (a byte32 length ID)")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_provider"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"the provider's address")))),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[0]"),(0,l.kt)("td",{parentName:"tr",align:null},"bool"),(0,l.kt)("td",{parentName:"tr",align:null},"true if the provider already exists")))),(0,l.kt)("h3",{id:"getproviderindex"},"getProviderIndex"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function getProviderIndex(struct DIDRegistryLibrary.DIDRegisterList _self, bytes32 _did, address provider) private view returns (int256)\n")),(0,l.kt)("p",null,"getProviderIndex get the index of a provider"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_self"),(0,l.kt)("td",{parentName:"tr",align:null},"struct DIDRegistryLibrary.DIDRegisterList"),(0,l.kt)("td",{parentName:"tr",align:null},"refers to storage pointer")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_did"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"refers to decentralized identifier (a byte32 length ID)")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"provider"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"the provider's address")))),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[0]"),(0,l.kt)("td",{parentName:"tr",align:null},"int256"),(0,l.kt)("td",{parentName:"tr",align:null},"the index if the provider exists otherwise return -1")))),(0,l.kt)("h3",{id:"adddelegate"},"addDelegate"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function addDelegate(struct DIDRegistryLibrary.DIDRegisterList _self, bytes32 _did, address delegate) internal\n")),(0,l.kt)("p",null,"addDelegate add delegate to DID registry"),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"update the DID registry delegates list by adding a new delegate")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_self"),(0,l.kt)("td",{parentName:"tr",align:null},"struct DIDRegistryLibrary.DIDRegisterList"),(0,l.kt)("td",{parentName:"tr",align:null},"refers to storage pointer")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_did"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"refers to decentralized identifier (a byte32 length ID)")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"delegate"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"the delegate's address")))),(0,l.kt)("h3",{id:"removedelegate"},"removeDelegate"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function removeDelegate(struct DIDRegistryLibrary.DIDRegisterList _self, bytes32 _did, address _delegate) internal returns (bool)\n")),(0,l.kt)("p",null,"removeDelegate remove delegate from DID registry"),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"update the DID registry delegates list by removing an existing delegate")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_self"),(0,l.kt)("td",{parentName:"tr",align:null},"struct DIDRegistryLibrary.DIDRegisterList"),(0,l.kt)("td",{parentName:"tr",align:null},"refers to storage pointer")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_did"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"refers to decentralized identifier (a byte32 length ID)")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_delegate"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"the delegate's address")))),(0,l.kt)("h3",{id:"isdelegate"},"isDelegate"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function isDelegate(struct DIDRegistryLibrary.DIDRegisterList _self, bytes32 _did, address _delegate) public view returns (bool)\n")),(0,l.kt)("p",null,"isDelegate check whether DID delegate exists"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_self"),(0,l.kt)("td",{parentName:"tr",align:null},"struct DIDRegistryLibrary.DIDRegisterList"),(0,l.kt)("td",{parentName:"tr",align:null},"refers to storage pointer")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_did"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"refers to decentralized identifier (a byte32 length ID)")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_delegate"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"the delegate's address")))),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[0]"),(0,l.kt)("td",{parentName:"tr",align:null},"bool"),(0,l.kt)("td",{parentName:"tr",align:null},"true if the delegate already exists")))),(0,l.kt)("h3",{id:"getdelegateindex"},"getDelegateIndex"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function getDelegateIndex(struct DIDRegistryLibrary.DIDRegisterList _self, bytes32 _did, address delegate) private view returns (int256)\n")),(0,l.kt)("p",null,"getDelegateIndex get the index of a delegate"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_self"),(0,l.kt)("td",{parentName:"tr",align:null},"struct DIDRegistryLibrary.DIDRegisterList"),(0,l.kt)("td",{parentName:"tr",align:null},"refers to storage pointer")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_did"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"refers to decentralized identifier (a byte32 length ID)")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"delegate"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"the delegate's address")))),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[0]"),(0,l.kt)("td",{parentName:"tr",align:null},"int256"),(0,l.kt)("td",{parentName:"tr",align:null},"the index if the delegate exists otherwise return -1")))),(0,l.kt)("h2",{id:"provenanceregistry"},"ProvenanceRegistry"),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"All function calls are currently implemented without side effects")),(0,l.kt)("h3",{id:"__provenanceregistry_init"},"__ProvenanceRegistry_init"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function __ProvenanceRegistry_init() internal\n")),(0,l.kt)("h3",{id:"__provenanceregistry_init_unchained"},"__ProvenanceRegistry_init_unchained"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function __ProvenanceRegistry_init_unchained() internal\n")),(0,l.kt)("h3",{id:"provenance"},"Provenance"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"struct Provenance {\n  bytes32 did;\n  bytes32 relatedDid;\n  address agentId;\n  bytes32 activityId;\n  address agentInvolvedId;\n  uint8 method;\n  address createdBy;\n  uint256 blockNumberUpdated;\n  bytes signature;\n}\n")),(0,l.kt)("h3",{id:"provenanceregistrylist"},"ProvenanceRegistryList"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"struct ProvenanceRegistryList {\n  mapping(bytes32 &#x3D;&gt; struct ProvenanceRegistry.Provenance) list;\n}\n")),(0,l.kt)("h3",{id:"provenanceregistry-1"},"provenanceRegistry"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"struct ProvenanceRegistry.ProvenanceRegistryList provenanceRegistry\n")),(0,l.kt)("h3",{id:"provenancemethod"},"ProvenanceMethod"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"enum ProvenanceMethod {\n  ENTITY,\n  ACTIVITY,\n  WAS_GENERATED_BY,\n  USED,\n  WAS_INFORMED_BY,\n  WAS_STARTED_BY,\n  WAS_ENDED_BY,\n  WAS_INVALIDATED_BY,\n  WAS_DERIVED_FROM,\n  AGENT,\n  WAS_ATTRIBUTED_TO,\n  WAS_ASSOCIATED_WITH,\n  ACTED_ON_BEHALF\n}\n")),(0,l.kt)("h3",{id:"provenanceattributeregistered"},"ProvenanceAttributeRegistered"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"event ProvenanceAttributeRegistered(bytes32 provId, bytes32 _did, address _agentId, bytes32 _activityId, bytes32 _relatedDid, address _agentInvolvedId, enum ProvenanceRegistry.ProvenanceMethod _method, string _attributes, uint256 _blockNumberUpdated)\n")),(0,l.kt)("p",null,"Provenance Events"),(0,l.kt)("h3",{id:"wasgeneratedby-1"},"WasGeneratedBy"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"event WasGeneratedBy(bytes32 _did, address _agentId, bytes32 _activityId, bytes32 provId, string _attributes, uint256 _blockNumberUpdated)\n")),(0,l.kt)("h3",{id:"used-1"},"Used"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"event Used(bytes32 _did, address _agentId, bytes32 _activityId, bytes32 provId, string _attributes, uint256 _blockNumberUpdated)\n")),(0,l.kt)("h3",{id:"wasderivedfrom-1"},"WasDerivedFrom"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"event WasDerivedFrom(bytes32 _newEntityDid, bytes32 _usedEntityDid, address _agentId, bytes32 _activityId, bytes32 provId, string _attributes, uint256 _blockNumberUpdated)\n")),(0,l.kt)("h3",{id:"wasassociatedwith-1"},"WasAssociatedWith"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"event WasAssociatedWith(bytes32 _entityDid, address _agentId, bytes32 _activityId, bytes32 provId, string _attributes, uint256 _blockNumberUpdated)\n")),(0,l.kt)("h3",{id:"actedonbehalf-1"},"ActedOnBehalf"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"event ActedOnBehalf(bytes32 _entityDid, address _delegateAgentId, address _responsibleAgentId, bytes32 _activityId, bytes32 provId, string _attributes, uint256 _blockNumberUpdated)\n")),(0,l.kt)("h3",{id:"createprovenanceentry"},"createProvenanceEntry"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function createProvenanceEntry(bytes32 _provId, bytes32 _did, bytes32 _relatedDid, address _agentId, bytes32 _activityId, address _agentInvolvedId, enum ProvenanceRegistry.ProvenanceMethod _method, address _createdBy, bytes _signatureDelegate, string _attributes) internal returns (bool)\n")),(0,l.kt)("p",null,"create an event in the Provenance store"),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"access modifiers and storage pointer should be implemented in ProvenanceRegistry")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_provId"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"refers to provenance event identifier")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_did"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"refers to decentralized identifier (a byte32 length ID)")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_relatedDid"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"refers to decentralized identifier (a byte32 length ID) of a related entity")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_agentId"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"refers to address of the agent creating the provenance record")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_activityId"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"refers to activity")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_agentInvolvedId"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"refers to address of the agent involved with the provenance record")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_method"),(0,l.kt)("td",{parentName:"tr",align:null},"enum ProvenanceRegistry.ProvenanceMethod"),(0,l.kt)("td",{parentName:"tr",align:null},"refers to the W3C Provenance method")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_createdBy"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"refers to address of the agent triggering the activity")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_signatureDelegate"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes"),(0,l.kt)("td",{parentName:"tr",align:null},"refers to the digital signature provided by the did delegate.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_attributes"),(0,l.kt)("td",{parentName:"tr",align:null},"string"),(0,l.kt)("td",{parentName:"tr",align:null})))),(0,l.kt)("h3",{id:"_wasgeneratedby"},"_wasGeneratedBy"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function _wasGeneratedBy(bytes32 _provId, bytes32 _did, address _agentId, bytes32 _activityId, string _attributes) internal virtual returns (bool)\n")),(0,l.kt)("p",null,"Implements the W3C PROV Generation action"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_provId"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"unique identifier referring to the provenance entry")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_did"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"refers to decentralized identifier (a bytes32 length ID) of the entity created")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_agentId"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"refers to address of the agent creating the provenance record")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_activityId"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"refers to activity")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_attributes"),(0,l.kt)("td",{parentName:"tr",align:null},"string"),(0,l.kt)("td",{parentName:"tr",align:null},"refers to the provenance attributes")))),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[0]"),(0,l.kt)("td",{parentName:"tr",align:null},"bool"),(0,l.kt)("td",{parentName:"tr",align:null},"the number of the new provenance size")))),(0,l.kt)("h3",{id:"_used"},"_used"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function _used(bytes32 _provId, bytes32 _did, address _agentId, bytes32 _activityId, bytes _signatureUsing, string _attributes) internal virtual returns (bool success)\n")),(0,l.kt)("p",null,"Implements the W3C PROV Usage action"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_provId"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"unique identifier referring to the provenance entry")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_did"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"refers to decentralized identifier (a bytes32 length ID) of the entity created")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_agentId"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"refers to address of the agent creating the provenance record")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_activityId"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"refers to activity")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_signatureUsing"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes"),(0,l.kt)("td",{parentName:"tr",align:null},"refers to the digital signature provided by the agent using the _did")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_attributes"),(0,l.kt)("td",{parentName:"tr",align:null},"string"),(0,l.kt)("td",{parentName:"tr",align:null},"refers to the provenance attributes")))),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"success"),(0,l.kt)("td",{parentName:"tr",align:null},"bool"),(0,l.kt)("td",{parentName:"tr",align:null},"true if the action was properly registered")))),(0,l.kt)("h3",{id:"_wasderivedfrom"},"_wasDerivedFrom"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function _wasDerivedFrom(bytes32 _provId, bytes32 _newEntityDid, bytes32 _usedEntityDid, address _agentId, bytes32 _activityId, string _attributes) internal virtual returns (bool success)\n")),(0,l.kt)("p",null,"Implements the W3C PROV Derivation action"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_provId"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"unique identifier referring to the provenance entry")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_newEntityDid"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"refers to decentralized identifier (a bytes32 length ID) of the entity created")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_usedEntityDid"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"refers to decentralized identifier (a bytes32 length ID) of the entity used to derive the new did")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_agentId"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"refers to address of the agent creating the provenance record")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_activityId"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"refers to activity")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_attributes"),(0,l.kt)("td",{parentName:"tr",align:null},"string"),(0,l.kt)("td",{parentName:"tr",align:null},"refers to the provenance attributes")))),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"success"),(0,l.kt)("td",{parentName:"tr",align:null},"bool"),(0,l.kt)("td",{parentName:"tr",align:null},"true if the action was properly registered")))),(0,l.kt)("h3",{id:"_wasassociatedwith"},"_wasAssociatedWith"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function _wasAssociatedWith(bytes32 _provId, bytes32 _did, address _agentId, bytes32 _activityId, string _attributes) internal virtual returns (bool success)\n")),(0,l.kt)("p",null,"Implements the W3C PROV Association action"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_provId"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"unique identifier referring to the provenance entry")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_did"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"refers to decentralized identifier (a bytes32 length ID) of the entity")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_agentId"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"refers to address of the agent creating the provenance record")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_activityId"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"refers to activity")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_attributes"),(0,l.kt)("td",{parentName:"tr",align:null},"string"),(0,l.kt)("td",{parentName:"tr",align:null},"refers to the provenance attributes")))),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"success"),(0,l.kt)("td",{parentName:"tr",align:null},"bool"),(0,l.kt)("td",{parentName:"tr",align:null},"true if the action was properly registered")))),(0,l.kt)("h3",{id:"_actedonbehalf"},"_actedOnBehalf"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function _actedOnBehalf(bytes32 _provId, bytes32 _did, address _delegateAgentId, address _responsibleAgentId, bytes32 _activityId, bytes _signatureDelegate, string _attributes) internal virtual returns (bool success)\n")),(0,l.kt)("p",null,"Implements the W3C PROV Delegation action\nEach party involved in this method (_delegateAgentId & _responsibleAgentId) must provide a valid signature.\nThe content to sign is a representation of the footprint of the event (_did + _delegateAgentId + _responsibleAgentId + _activityId)"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_provId"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"unique identifier referring to the provenance entry")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_did"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"refers to decentralized identifier (a bytes32 length ID) of the entity")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_delegateAgentId"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"refers to address acting on behalf of the provenance record")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_responsibleAgentId"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"refers to address responsible of the provenance record")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_activityId"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"refers to activity")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_signatureDelegate"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes"),(0,l.kt)("td",{parentName:"tr",align:null},"refers to the digital signature provided by the did delegate.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_attributes"),(0,l.kt)("td",{parentName:"tr",align:null},"string"),(0,l.kt)("td",{parentName:"tr",align:null},"refers to the provenance attributes")))),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"success"),(0,l.kt)("td",{parentName:"tr",align:null},"bool"),(0,l.kt)("td",{parentName:"tr",align:null},"true if the action was properly registered")))),(0,l.kt)("h2",{id:"curveroyalties"},"CurveRoyalties"),(0,l.kt)("h3",{id:"registry"},"registry"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"contract DIDRegistry registry\n")),(0,l.kt)("h3",{id:"denominator"},"DENOMINATOR"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"uint256 DENOMINATOR\n")),(0,l.kt)("h3",{id:"royalties"},"royalties"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"mapping(bytes32 => uint256) royalties\n")),(0,l.kt)("h3",{id:"initialize-35"},"initialize"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function initialize(address _registry) public\n")),(0,l.kt)("h3",{id:"royaltycurve"},"royaltyCurve"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function royaltyCurve(uint256 num, uint256 max, uint256 rate) public pure virtual returns (uint256)\n")),(0,l.kt)("h3",{id:"setroyalty"},"setRoyalty"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function setRoyalty(bytes32 _did, uint256 _royalty) public\n")),(0,l.kt)("p",null,"Set royalties for a DID"),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"Can only be called by creator of the DID")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_did"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"DID for which the royalties are set")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_royalty"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"Royalty, the actual royalty will be _royalty / 10000 percent")))),(0,l.kt)("h3",{id:"check-1"},"check"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function check(bytes32 _did, uint256[] _amounts, address[] _receivers, address _token) external view returns (bool)\n")),(0,l.kt)("h2",{id:"rewardsdistributor"},"RewardsDistributor"),(0,l.kt)("h3",{id:"used-2"},"used"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"mapping(bytes32 => bool) used\n")),(0,l.kt)("h3",{id:"receivers"},"receivers"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"mapping(bytes32 => address[]) receivers\n")),(0,l.kt)("h3",{id:"registry-1"},"registry"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"contract DIDRegistry registry\n")),(0,l.kt)("h3",{id:"conditionstoremanager-3"},"conditionStoreManager"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"contract ConditionStoreManager conditionStoreManager\n")),(0,l.kt)("h3",{id:"escrow"},"escrow"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"address escrow\n")),(0,l.kt)("h3",{id:"initialize-36"},"initialize"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function initialize(address _registry, address _conditionStoreManager, address _escrow) public\n")),(0,l.kt)("h3",{id:"setreceivers"},"setReceivers"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function setReceivers(bytes32 _did, address[] _addr) public\n")),(0,l.kt)("p",null,"set receivers for did"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_did"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"DID")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_addr"),(0,l.kt)("td",{parentName:"tr",align:null},"address[]"),(0,l.kt)("td",{parentName:"tr",align:null},"list of receivers")))),(0,l.kt)("h3",{id:"claimreward"},"claimReward"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function claimReward(bytes32 _agreementId, bytes32 _did, uint256[] _amounts, address[] _receivers, address _returnAddress, address _lockPaymentAddress, address _tokenAddress, bytes32 _lockCondition, bytes32[] _releaseConditions) public\n")),(0,l.kt)("p",null,"distribute rewards associated with an escrow condition"),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"as paramemeters, it just gets the same parameters as fulfill for escrow condition")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_agreementId"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"agreement identifier")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_did"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"asset decentralized identifier")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_amounts"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256[]"),(0,l.kt)("td",{parentName:"tr",align:null},"token amounts to be locked/released")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_receivers"),(0,l.kt)("td",{parentName:"tr",align:null},"address[]"),(0,l.kt)("td",{parentName:"tr",align:null},"receiver's address")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_returnAddress"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null})),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_lockPaymentAddress"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"lock payment contract address")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_tokenAddress"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"the ERC20 contract address to use during the payment")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_lockCondition"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"lock condition identifier")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_releaseConditions"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32[]"),(0,l.kt)("td",{parentName:"tr",align:null},"release condition identifier")))),(0,l.kt)("h2",{id:"standardroyalties"},"StandardRoyalties"),(0,l.kt)("h3",{id:"registry-2"},"registry"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"contract DIDRegistry registry\n")),(0,l.kt)("h3",{id:"denominator-1"},"DENOMINATOR"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"uint256 DENOMINATOR\n")),(0,l.kt)("h3",{id:"royalties-1"},"royalties"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"mapping(bytes32 => uint256) royalties\n")),(0,l.kt)("h3",{id:"initialize-37"},"initialize"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function initialize(address _registry) public\n")),(0,l.kt)("h3",{id:"setroyalty-1"},"setRoyalty"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function setRoyalty(bytes32 _did, uint256 _royalty) public\n")),(0,l.kt)("p",null,"Set royalties for a DID"),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"Can only be called by creator of the DID")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_did"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"DID for which the royalties are set")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_royalty"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"Royalty, the actual royalty will be _royalty / 10000 percent")))),(0,l.kt)("h3",{id:"check-2"},"check"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function check(bytes32 _did, uint256[] _amounts, address[] _receivers, address) external view returns (bool)\n")),(0,l.kt)("h2",{id:"aavecredittemplate"},"AaveCreditTemplate"),(0,l.kt)("p",null,"_Implementation of the Aaven Credit Agreement Template\n0. Initialize the agreement"),(0,l.kt)("ol",null,(0,l.kt)("li",{parentName:"ol"},"LockNFT - Delegatee locks the NFT"),(0,l.kt)("li",{parentName:"ol"},"AaveCollateralDeposit - Delegator deposits the collateral into Aave. And approves the delegation flow"),(0,l.kt)("li",{parentName:"ol"},"AaveBorrowCondition - The Delegatee claim the credit amount from Aave"),(0,l.kt)("li",{parentName:"ol"},"AaveRepayCondition. Options:\n4.a Fulfilled state - The Delegatee pay back the loan (including fee) into Aave and gets back the NFT\n4.b Aborted state - The Delegatee doesn't pay the loan in time so the Delegator gets the NFT. The Delegator pays the loan to Aave"),(0,l.kt)("li",{parentName:"ol"},"TransferNFT. Options:\n5.a if AaveRepayCondition was fulfilled, it will allow transfer back to the Delegatee or Borrower\n5.b if AaveRepayCondition was aborted, it will allow transfer the NFT to the Delegator or Lender_")),(0,l.kt)("h3",{id:"didregistry-8"},"didRegistry"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"contract DIDRegistry didRegistry\n")),(0,l.kt)("h3",{id:"nftlockcondition-1"},"nftLockCondition"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"contract INFTLock nftLockCondition\n")),(0,l.kt)("h3",{id:"depositcondition"},"depositCondition"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"contract AaveCollateralDepositCondition depositCondition\n")),(0,l.kt)("h3",{id:"borrowcondition"},"borrowCondition"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"contract AaveBorrowCondition borrowCondition\n")),(0,l.kt)("h3",{id:"repaycondition"},"repayCondition"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"contract AaveRepayCondition repayCondition\n")),(0,l.kt)("h3",{id:"transfercondition"},"transferCondition"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"contract DistributeNFTCollateralCondition transferCondition\n")),(0,l.kt)("h3",{id:"withdrawcondition"},"withdrawCondition"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"contract AaveCollateralWithdrawCondition withdrawCondition\n")),(0,l.kt)("h3",{id:"vaultaddress"},"vaultAddress"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"mapping(bytes32 => address) vaultAddress\n")),(0,l.kt)("h3",{id:"nvmfee-1"},"nvmFee"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"uint256 nvmFee\n")),(0,l.kt)("h3",{id:"vaultlibrary"},"vaultLibrary"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"address vaultLibrary\n")),(0,l.kt)("h3",{id:"vaultcreated"},"VaultCreated"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"event VaultCreated(address _vaultAddress, address _creator, address _lender, address _borrower)\n")),(0,l.kt)("h3",{id:"initialize-38"},"initialize"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function initialize(address _owner, address _agreementStoreManagerAddress, address _nftLockConditionAddress, address _depositConditionAddress, address _borrowConditionAddress, address _repayConditionAddress, address _withdrawCollateralAddress, address _transferConditionAddress, address _vaultLibrary) external\n")),(0,l.kt)("p",null,"initialize init the  contract with the following parameters."),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"this function is called only once during the contract\ninitialization. It initializes the ownable feature, and\nset push the required condition types including\naccess , lock payment and escrow payment conditions.")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_owner"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"contract's owner account address")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_agreementStoreManagerAddress"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"agreement store manager contract address")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_nftLockConditionAddress"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"NFT Lock Condition contract address")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_depositConditionAddress"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"Aave collateral deposit Condition address")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_borrowConditionAddress"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"Aave borrow deposit Condition address")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_repayConditionAddress"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"Aave repay credit Condition address")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_withdrawCollateralAddress"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null})),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_transferConditionAddress"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"NFT Transfer Condition address")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_vaultLibrary"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null})))),(0,l.kt)("h3",{id:"createvaultagreement"},"createVaultAgreement"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function createVaultAgreement(bytes32 _id, bytes32 _did, bytes32[] _conditionIds, uint256[] _timeLocks, uint256[] _timeOuts, address _vaultAddress) public\n")),(0,l.kt)("h3",{id:"createagreement-1"},"createAgreement"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function createAgreement(bytes32 _id, address _lendingPool, address _dataProvider, address _weth, uint256 _agreementFee, address _treasuryAddress, bytes32 _did, bytes32[] _conditionIds, uint256[] _timeLocks, uint256[] _timeOuts, address _lender) public\n")),(0,l.kt)("h3",{id:"deployvault"},"deployVault"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function deployVault(address _lendingPool, address _dataProvider, address _weth, uint256 _agreementFee, address _treasuryAddress, address _borrower, address _lender) public returns (address)\n")),(0,l.kt)("h3",{id:"getvaultforagreement"},"getVaultForAgreement"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function getVaultForAgreement(bytes32 _agreementId) public view returns (address)\n")),(0,l.kt)("h3",{id:"updatenvmfee"},"updateNVMFee"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function updateNVMFee(uint256 _newFee) public\n")),(0,l.kt)("p",null,"Updates the nevermined fee for this type of agreement"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_newFee"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"New nevermined fee expressed in basis points")))),(0,l.kt)("h3",{id:"changecreditvaultlibrary"},"changeCreditVaultLibrary"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function changeCreditVaultLibrary(address _vaultLibrary) public\n")),(0,l.kt)("h2",{id:"accessprooftemplate"},"AccessProofTemplate"),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"Implementation of Access Agreement Template")),(0,l.kt)("h3",{id:"didregistry-9"},"didRegistry"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"contract DIDRegistry didRegistry\n")),(0,l.kt)("h3",{id:"accesscondition-1"},"accessCondition"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"contract AccessProofCondition accessCondition\n")),(0,l.kt)("h3",{id:"lockcondition"},"lockCondition"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"contract LockPaymentCondition lockCondition\n")),(0,l.kt)("h3",{id:"escrowreward"},"escrowReward"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"contract EscrowPaymentCondition escrowReward\n")),(0,l.kt)("h3",{id:"initialize-39"},"initialize"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function initialize(address _owner, address _agreementStoreManagerAddress, address _didRegistryAddress, address _accessConditionAddress, address _lockConditionAddress, address payable _escrowConditionAddress) external\n")),(0,l.kt)("p",null,"initialize init the\ncontract with the following parameters."),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"this function is called only once during the contract\ninitialization. It initializes the ownable feature, and\nset push the required condition types including\naccess , lock payment and escrow payment conditions.")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_owner"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"contract's owner account address")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_agreementStoreManagerAddress"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"agreement store manager contract address")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_didRegistryAddress"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"DID registry contract address")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_accessConditionAddress"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"access condition address")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_lockConditionAddress"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"lock reward condition contract address")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_escrowConditionAddress"),(0,l.kt)("td",{parentName:"tr",align:null},"address payable"),(0,l.kt)("td",{parentName:"tr",align:null},"escrow reward contract address")))),(0,l.kt)("h2",{id:"accesstemplate"},"AccessTemplate"),(0,l.kt)("p",null,"_Implementation of Access Agreement Template"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"}," Access template is use case specific template.\n Anyone (consumer/provider/publisher) can use this template in order\n to setup an on-chain SEA. The template is a composite of three basic\n conditions. Once the agreement is created, the consumer will lock an amount\n of tokens (as listed in the DID document - off-chain metadata) to the \n the lock reward contract which in turn will fire an event. ON the other hand \n the provider is listening to all the emitted events, the provider \n will catch the event and grant permissions to the consumer through \n secret store contract, the consumer now is able to download the data set\n by asking the off-chain component of secret store to decrypt the DID and \n encrypt it using the consumer's public key. Then the secret store will \n provide an on-chain proof that the consumer had access to the data set.\n Finally, the provider can call the escrow reward condition in order \n to release the payment. Every condition has a time window (time lock and \n time out). This implies that if the provider didn't grant the access to \n the consumer through secret store within this time window, the consumer \n can ask for refund._\n")),(0,l.kt)("h3",{id:"didregistry-10"},"didRegistry"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"contract DIDRegistry didRegistry\n")),(0,l.kt)("h3",{id:"accesscondition-2"},"accessCondition"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"contract AccessCondition accessCondition\n")),(0,l.kt)("h3",{id:"lockcondition-1"},"lockCondition"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"contract LockPaymentCondition lockCondition\n")),(0,l.kt)("h3",{id:"escrowreward-1"},"escrowReward"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"contract EscrowPaymentCondition escrowReward\n")),(0,l.kt)("h3",{id:"initialize-40"},"initialize"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function initialize(address _owner, address _agreementStoreManagerAddress, address _didRegistryAddress, address _accessConditionAddress, address _lockConditionAddress, address payable _escrowConditionAddress) external\n")),(0,l.kt)("p",null,"initialize init the\ncontract with the following parameters."),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"this function is called only once during the contract\ninitialization. It initializes the ownable feature, and\nset push the required condition types including\naccess , lock payment and escrow payment conditions.")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_owner"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"contract's owner account address")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_agreementStoreManagerAddress"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"agreement store manager contract address")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_didRegistryAddress"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"DID registry contract address")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_accessConditionAddress"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"access condition address")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_lockConditionAddress"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"lock reward condition contract address")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_escrowConditionAddress"),(0,l.kt)("td",{parentName:"tr",align:null},"address payable"),(0,l.kt)("td",{parentName:"tr",align:null},"escrow reward contract address")))),(0,l.kt)("h2",{id:"agreementtemplate"},"AgreementTemplate"),(0,l.kt)("p",null,"_Implementation of Agreement Template"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"}," Agreement template is a reference template where it\n has the ability to create agreements from whitelisted \n template_\n")),(0,l.kt)("h3",{id:"conditiontypes"},"conditionTypes"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"address[] conditionTypes\n")),(0,l.kt)("h3",{id:"agreementstoremanager-4"},"agreementStoreManager"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"contract AgreementStoreManager agreementStoreManager\n")),(0,l.kt)("h3",{id:"createagreement-2"},"createAgreement"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function createAgreement(bytes32 _id, bytes32 _did, bytes32[] _conditionIds, uint256[] _timeLocks, uint256[] _timeOuts) public\n")),(0,l.kt)("p",null,"createAgreement create new agreement"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_id"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"agreement unique identifier")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_did"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"refers to decentralized identifier (a bytes32 length ID).")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_conditionIds"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32[]"),(0,l.kt)("td",{parentName:"tr",align:null},"list of condition identifiers")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_timeLocks"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256[]"),(0,l.kt)("td",{parentName:"tr",align:null},"list of time locks, each time lock will be assigned to the           same condition that has the same index")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_timeOuts"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256[]"),(0,l.kt)("td",{parentName:"tr",align:null},"list of time outs, each time out will be assigned to the           same condition that has the same index")))),(0,l.kt)("h3",{id:"createagreementandpay-1"},"createAgreementAndPay"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function createAgreementAndPay(bytes32 _id, bytes32 _did, bytes32[] _conditionIds, uint256[] _timeLocks, uint256[] _timeOuts, uint256 _idx, address payable _rewardAddress, address _tokenAddress, uint256[] _amounts, address[] _receivers) public payable\n")),(0,l.kt)("h3",{id:"createagreementandfulfill-1"},"createAgreementAndFulfill"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function createAgreementAndFulfill(bytes32 _id, bytes32 _did, bytes32[] _conditionIds, uint256[] _timeLocks, uint256[] _timeOuts, uint256[] _indices, address[] _accounts, bytes[] _params) internal\n")),(0,l.kt)("h3",{id:"getconditiontypes-1"},"getConditionTypes"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function getConditionTypes() public view returns (address[])\n")),(0,l.kt)("p",null,"getConditionTypes gets the conditions addresses list"),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"for the current template returns list of condition contracts\naddresses")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[0]"),(0,l.kt)("td",{parentName:"tr",align:null},"address[]"),(0,l.kt)("td",{parentName:"tr",align:null},"list of conditions contract addresses")))),(0,l.kt)("h2",{id:"baseescrowtemplate"},"BaseEscrowTemplate"),(0,l.kt)("h3",{id:"agreementdata"},"agreementData"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"struct BaseEscrowTemplate.AgreementData agreementData\n")),(0,l.kt)("h3",{id:"agreementcreated"},"AgreementCreated"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"event AgreementCreated(bytes32 _agreementId, bytes32 _did, address _accessConsumer, address _accessProvider, uint256[] _timeLocks, uint256[] _timeOuts, bytes32[] _conditionIdSeeds, bytes32[] _conditionIds, bytes32 _idSeed, address _creator)\n")),(0,l.kt)("h3",{id:"agreementdatamodel"},"AgreementDataModel"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"struct AgreementDataModel {\n  address accessConsumer;\n  address accessProvider;\n  bytes32 did;\n}\n")),(0,l.kt)("h3",{id:"agreementdata-1"},"AgreementData"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"struct AgreementData {\n  mapping(bytes32 &#x3D;&gt; struct BaseEscrowTemplate.AgreementDataModel) agreementDataItems;\n  bytes32[] agreementIds;\n}\n")),(0,l.kt)("h3",{id:"createagreement-3"},"createAgreement"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function createAgreement(bytes32 _id, bytes32 _did, bytes32[] _conditionIds, uint256[] _timeLocks, uint256[] _timeOuts, address _accessConsumer) public\n")),(0,l.kt)("p",null,"createAgreement creates agreements through agreement template"),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"this function initializes the agreement by setting the DID,\nconditions ID, timeouts, time locks and the consumer address.\nThe DID provider/owner is automatically detected by the DID\nRegistry")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_id"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"SEA agreement unique identifier")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_did"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"Decentralized Identifier (DID)")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_conditionIds"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32[]"),(0,l.kt)("td",{parentName:"tr",align:null},"conditions ID associated with the condition types")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_timeLocks"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256[]"),(0,l.kt)("td",{parentName:"tr",align:null},"the starting point of the time window ,time lock is        in block number not seconds")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_timeOuts"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256[]"),(0,l.kt)("td",{parentName:"tr",align:null},"the ending point of the time window ,time lock is        in block number not seconds")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_accessConsumer"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"consumer address")))),(0,l.kt)("h3",{id:"createagreementandpayescrow"},"createAgreementAndPayEscrow"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function createAgreementAndPayEscrow(bytes32 _id, bytes32 _did, bytes32[] _conditionIds, uint256[] _timeLocks, uint256[] _timeOuts, address _accessConsumer, uint256 _idx, address payable _rewardAddress, address _tokenAddress, uint256[] _amounts, address[] _receivers) public payable\n")),(0,l.kt)("h3",{id:"createagreementandfulfill-2"},"createAgreementAndFulfill"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function createAgreementAndFulfill(bytes32 _id, bytes32 _did, bytes32[] _conditionIds, uint256[] _timeLocks, uint256[] _timeOuts, address _accessConsumer, uint256[] _indices, address[] _accounts, bytes[] _params) internal\n")),(0,l.kt)("h3",{id:"_makeids"},"_makeIds"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function _makeIds(bytes32 _idSeed, bytes32[] _conditionIds) internal view returns (bytes32[])\n")),(0,l.kt)("h3",{id:"_initagreement"},"_initAgreement"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function _initAgreement(bytes32 _idSeed, bytes32 _did, uint256[] _timeLocks, uint256[] _timeOuts, address _accessConsumer, bytes32[] _conditionIds) internal\n")),(0,l.kt)("h3",{id:"getagreementdata"},"getAgreementData"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function getAgreementData(bytes32 _id) external view returns (address accessConsumer, address accessProvider)\n")),(0,l.kt)("p",null,"getAgreementData return the agreement Data"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_id"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"SEA agreement unique identifier")))),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"accessConsumer"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"the agreement consumer")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"accessProvider"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"the provider addresses")))),(0,l.kt)("h2",{id:"didsalestemplate"},"DIDSalesTemplate"),(0,l.kt)("p",null,"_Implementation of DID Sales Template"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"}," The DID Sales template supports an scenario where an Asset owner\n can sell that asset to a new Owner.\n Anyone (consumer/provider/publisher) can use this template in order\n to setup an agreement allowing an Asset owner to get transfer the asset ownership\n after some payment. \n The template is a composite of 3 basic conditions: \n - Lock Payment Condition\n - Transfer DID Condition\n - Escrow Reward Condition\n\n This scenario takes into account royalties for original creators in the secondary market.\n Once the agreement is created, the consumer after payment can request the ownership transfer of an asset\n from the current owner for a specific DID._\n")),(0,l.kt)("h3",{id:"didregistry-11"},"didRegistry"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"contract DIDRegistry didRegistry\n")),(0,l.kt)("h3",{id:"lockpaymentcondition-1"},"lockPaymentCondition"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"contract LockPaymentCondition lockPaymentCondition\n")),(0,l.kt)("h3",{id:"transfercondition-1"},"transferCondition"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"contract TransferDIDOwnershipCondition transferCondition\n")),(0,l.kt)("h3",{id:"rewardcondition"},"rewardCondition"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"contract EscrowPaymentCondition rewardCondition\n")),(0,l.kt)("h3",{id:"id"},"id"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function id() public pure returns (uint256)\n")),(0,l.kt)("h3",{id:"initialize-41"},"initialize"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function initialize(address _owner, address _agreementStoreManagerAddress, address _lockConditionAddress, address _transferConditionAddress, address payable _escrowPaymentAddress) external\n")),(0,l.kt)("p",null,"initialize init the\ncontract with the following parameters."),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"this function is called only once during the contract\ninitialization. It initializes the ownable feature, and\nset push the required condition types including\naccess secret store, lock reward and escrow reward conditions.")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_owner"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"contract's owner account address")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_agreementStoreManagerAddress"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"agreement store manager contract address")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_lockConditionAddress"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"lock reward condition contract address")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_transferConditionAddress"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"transfer ownership condition contract address")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_escrowPaymentAddress"),(0,l.kt)("td",{parentName:"tr",align:null},"address payable"),(0,l.kt)("td",{parentName:"tr",align:null},"escrow reward condition contract address")))),(0,l.kt)("h2",{id:"dynamicaccesstemplate"},"DynamicAccessTemplate"),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"Implementation of Agreement Template\nThis is a dynamic template that allows to setup flexible conditions depending\non the use case.")),(0,l.kt)("h3",{id:"didregistry-12"},"didRegistry"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"contract DIDRegistry didRegistry\n")),(0,l.kt)("h3",{id:"templateconfig"},"templateConfig"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"struct DynamicAccessTemplate.TemplateConditions templateConfig\n")),(0,l.kt)("h3",{id:"templateconditions"},"TemplateConditions"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"struct TemplateConditions {\n  mapping(address &#x3D;&gt; contract Condition) templateConditions;\n}\n")),(0,l.kt)("h3",{id:"initialize-42"},"initialize"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function initialize(address _owner, address _agreementStoreManagerAddress, address _didRegistryAddress) external\n")),(0,l.kt)("p",null,"initialize init the\ncontract with the following parameters."),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"this function is called only once during the contract\ninitialization. It initializes the ownable feature, and\nset push the required condition types including\naccess secret store, lock reward and escrow reward conditions.")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_owner"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"contract's owner account address")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_agreementStoreManagerAddress"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"agreement store manager contract address")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_didRegistryAddress"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"DID registry contract address")))),(0,l.kt)("h3",{id:"addtemplatecondition"},"addTemplateCondition"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function addTemplateCondition(address _conditionAddress) external returns (uint256 length)\n")),(0,l.kt)("p",null,"addTemplateCondition adds a new condition to the template"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_conditionAddress"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"condition contract address")))),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"length"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"conditionTypes array size")))),(0,l.kt)("h3",{id:"removelasttemplatecondition"},"removeLastTemplateCondition"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function removeLastTemplateCondition() external returns (address[])\n")),(0,l.kt)("p",null,"removeLastTemplateCondition removes last condition added to the template"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[0]"),(0,l.kt)("td",{parentName:"tr",align:null},"address[]"),(0,l.kt)("td",{parentName:"tr",align:null},"conditionTypes existing in the array")))),(0,l.kt)("h2",{id:"escrowcomputeexecutiontemplate"},"EscrowComputeExecutionTemplate"),(0,l.kt)("p",null,"_Implementation of a Compute Execution Agreement Template"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"}," EscrowComputeExecutionTemplate is use case specific template.\n Anyone (consumer/provider/publisher) can use this template in order\n to setup an on-chain SEA. The template is a composite of three basic\n conditions. Once the agreement is created, the consumer will lock an amount\n of tokens (as listed in the DID document - off-chain metadata) to the \n the lock reward contract which in turn will fire an event. ON the other hand \n the provider is listening to all the emitted events, the provider \n will catch the event and grant permissions to trigger a computation granting\n the execution via the ComputeExecutionCondition contract. \n The consumer now is able to trigger that computation\n by asking the off-chain gateway to start the execution of a compute workflow.\n Finally, the provider can call the escrow reward condition in order \n to release the payment. Every condition has a time window (time lock and \n time out). This implies that if the provider didn't grant the execution to \n the consumer within this time window, the consumer \n can ask for refund._\n")),(0,l.kt)("h3",{id:"didregistry-13"},"didRegistry"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"contract DIDRegistry didRegistry\n")),(0,l.kt)("h3",{id:"computeexecutioncondition-1"},"computeExecutionCondition"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"contract ComputeExecutionCondition computeExecutionCondition\n")),(0,l.kt)("h3",{id:"lockpaymentcondition-2"},"lockPaymentCondition"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"contract LockPaymentCondition lockPaymentCondition\n")),(0,l.kt)("h3",{id:"escrowpayment"},"escrowPayment"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"contract EscrowPaymentCondition escrowPayment\n")),(0,l.kt)("h3",{id:"initialize-43"},"initialize"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function initialize(address _owner, address _agreementStoreManagerAddress, address _didRegistryAddress, address _computeExecutionConditionAddress, address _lockPaymentConditionAddress, address payable _escrowPaymentAddress) external\n")),(0,l.kt)("p",null,"initialize init the\ncontract with the following parameters."),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"this function is called only once during the contract\ninitialization. It initializes the ownable feature, and\nset push the required condition types including\nservice executor condition, lock reward and escrow reward conditions.")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_owner"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"contract's owner account address")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_agreementStoreManagerAddress"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"agreement store manager contract address")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_didRegistryAddress"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"DID registry contract address")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_computeExecutionConditionAddress"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"service executor condition contract address")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_lockPaymentConditionAddress"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"lock reward condition contract address")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_escrowPaymentAddress"),(0,l.kt)("td",{parentName:"tr",align:null},"address payable"),(0,l.kt)("td",{parentName:"tr",align:null},"escrow reward contract address")))),(0,l.kt)("h3",{id:"name"},"name"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function name() public pure returns (string)\n")),(0,l.kt)("h2",{id:"nft721accessprooftemplate"},"NFT721AccessProofTemplate"),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"Implementation of NFT721 Access Proof Template")),(0,l.kt)("h2",{id:"nft721accessswaptemplate"},"NFT721AccessSwapTemplate"),(0,l.kt)("h2",{id:"nft721accesstemplate"},"NFT721AccessTemplate"),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"Implementation of NFT Access Template")),(0,l.kt)("h2",{id:"nft721salestemplate"},"NFT721SalesTemplate"),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"Implementation of NFT Sales Template")),(0,l.kt)("h2",{id:"nft721saleswithaccesstemplate"},"NFT721SalesWithAccessTemplate"),(0,l.kt)("h2",{id:"nftaccessprooftemplate"},"NFTAccessProofTemplate"),(0,l.kt)("p",null,"_Implementation of NFT Access Template"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"}," The NFT Access template is use case specific template.\n Anyone (consumer/provider/publisher) can use this template in order\n to setup an agreement allowing NFT holders to get access to Nevermined services. \n The template is a composite of 2 basic conditions: \n - NFT Holding Condition\n - Access Condition\n\n Once the agreement is created, the consumer can demonstrate is holding a NFT\n for a specific DID. If that's the case the Access condition can be fulfilled\n by the asset owner or provider and all the agreement is fulfilled.\n This can be used in scenarios where a data or services owner, can allow \n users to get access to exclusive services only when they demonstrate the \n are holding a specific number of NFTs of a DID.\n This is very useful in use cases like arts._\n")),(0,l.kt)("h3",{id:"didregistry-14"},"didRegistry"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"contract DIDRegistry didRegistry\n")),(0,l.kt)("h3",{id:"nftholdercondition-1"},"nftHolderCondition"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"contract INFTHolder nftHolderCondition\n")),(0,l.kt)("h3",{id:"accesscondition-3"},"accessCondition"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"contract AccessProofCondition accessCondition\n")),(0,l.kt)("h3",{id:"initialize-44"},"initialize"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function initialize(address _owner, address _agreementStoreManagerAddress, address _nftHolderConditionAddress, address _accessConditionAddress) external\n")),(0,l.kt)("p",null,"initialize init the\ncontract with the following parameters."),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"this function is called only once during the contract\ninitialization. It initializes the ownable feature, and\nset push the required condition types including\naccess secret store, lock reward and escrow reward conditions.")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_owner"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"contract's owner account address")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_agreementStoreManagerAddress"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"agreement store manager contract address")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_nftHolderConditionAddress"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"lock reward condition contract address")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_accessConditionAddress"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"access condition contract address")))),(0,l.kt)("h2",{id:"nftaccessswaptemplate"},"NFTAccessSwapTemplate"),(0,l.kt)("p",null,"_Implementation of NFT Sales Template"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"}," The NFT Sales template supports an scenario where a NFT owner\n can sell that asset to a new Owner.\n Anyone (consumer/provider/publisher) can use this template in order\n to setup an agreement allowing a NFT owner to transfer the asset ownership\n after some payment. \n The template is a composite of 3 basic conditions: \n - Lock Payment Condition\n - Transfer NFT Condition\n - Escrow Reward Condition\n\n This scenario takes into account royalties for original creators in the secondary market.\n Once the agreement is created, the consumer after payment can request the transfer of the NFT\n from the current owner for a specific DID._\n")),(0,l.kt)("h3",{id:"didregistry-15"},"didRegistry"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"contract DIDRegistry didRegistry\n")),(0,l.kt)("h3",{id:"lockpaymentcondition-3"},"lockPaymentCondition"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"contract INFTLock lockPaymentCondition\n")),(0,l.kt)("h3",{id:"rewardcondition-1"},"rewardCondition"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"contract INFTEscrow rewardCondition\n")),(0,l.kt)("h3",{id:"accesscondition-4"},"accessCondition"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"contract AccessProofCondition accessCondition\n")),(0,l.kt)("h3",{id:"id-1"},"id"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function id() public pure returns (uint256)\n")),(0,l.kt)("h3",{id:"initialize-45"},"initialize"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function initialize(address _owner, address _agreementStoreManagerAddress, address _lockPaymentConditionAddress, address payable _escrowPaymentAddress, address _accessCondition) external\n")),(0,l.kt)("p",null,"initialize init the\ncontract with the following parameters."),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"this function is called only once during the contract\ninitialization. It initializes the ownable feature, and\nset push the required condition types including\naccess secret store, lock reward and escrow reward conditions.")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_owner"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"contract's owner account address")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_agreementStoreManagerAddress"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"agreement store manager contract address")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_lockPaymentConditionAddress"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"lock reward condition contract address")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_escrowPaymentAddress"),(0,l.kt)("td",{parentName:"tr",align:null},"address payable"),(0,l.kt)("td",{parentName:"tr",align:null},"escrow reward condition contract address")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_accessCondition"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null})))),(0,l.kt)("h2",{id:"nftaccesstemplate"},"NFTAccessTemplate"),(0,l.kt)("p",null,"_Implementation of NFT Access Template"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"}," The NFT Access template is use case specific template.\n Anyone (consumer/provider/publisher) can use this template in order\n to setup an agreement allowing NFT holders to get access to Nevermined services. \n The template is a composite of 2 basic conditions: \n - NFT Holding Condition\n - Access Condition\n\n Once the agreement is created, the consumer can demonstrate is holding a NFT\n for a specific DID. If that's the case the Access condition can be fulfilled\n by the asset owner or provider and all the agreement is fulfilled.\n This can be used in scenarios where a data or services owner, can allow \n users to get access to exclusive services only when they demonstrate the \n are holding a specific number of NFTs of a DID.\n This is very useful in use cases like arts._\n")),(0,l.kt)("h3",{id:"didregistry-16"},"didRegistry"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"contract DIDRegistry didRegistry\n")),(0,l.kt)("h3",{id:"nftholdercondition-2"},"nftHolderCondition"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"contract INFTHolder nftHolderCondition\n")),(0,l.kt)("h3",{id:"accesscondition-5"},"accessCondition"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"contract INFTAccess accessCondition\n")),(0,l.kt)("h3",{id:"initialize-46"},"initialize"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function initialize(address _owner, address _agreementStoreManagerAddress, address _nftHolderConditionAddress, address _accessConditionAddress) external\n")),(0,l.kt)("p",null,"initialize init the\ncontract with the following parameters."),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"this function is called only once during the contract\ninitialization. It initializes the ownable feature, and\nset push the required condition types including\naccess secret store, lock reward and escrow reward conditions.")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_owner"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"contract's owner account address")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_agreementStoreManagerAddress"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"agreement store manager contract address")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_nftHolderConditionAddress"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"lock reward condition contract address")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_accessConditionAddress"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"access condition contract address")))),(0,l.kt)("h2",{id:"nftsalestemplate"},"NFTSalesTemplate"),(0,l.kt)("p",null,"_Implementation of NFT Sales Template"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"}," The NFT Sales template supports an scenario where a NFT owner\n can sell that asset to a new Owner.\n Anyone (consumer/provider/publisher) can use this template in order\n to setup an agreement allowing a NFT owner to transfer the asset ownership\n after some payment. \n The template is a composite of 3 basic conditions: \n - Lock Payment Condition\n - Transfer NFT Condition\n - Escrow Reward Condition\n\n This scenario takes into account royalties for original creators in the secondary market.\n Once the agreement is created, the consumer after payment can request the transfer of the NFT\n from the current owner for a specific DID._\n")),(0,l.kt)("h3",{id:"didregistry-17"},"didRegistry"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"contract DIDRegistry didRegistry\n")),(0,l.kt)("h3",{id:"lockpaymentcondition-4"},"lockPaymentCondition"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"contract LockPaymentCondition lockPaymentCondition\n")),(0,l.kt)("h3",{id:"transfercondition-2"},"transferCondition"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"contract ITransferNFT transferCondition\n")),(0,l.kt)("h3",{id:"rewardcondition-2"},"rewardCondition"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"contract EscrowPaymentCondition rewardCondition\n")),(0,l.kt)("h3",{id:"id-2"},"id"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function id() public pure returns (uint256)\n")),(0,l.kt)("h3",{id:"initialize-47"},"initialize"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function initialize(address _owner, address _agreementStoreManagerAddress, address _lockPaymentConditionAddress, address _transferConditionAddress, address payable _escrowPaymentAddress) external\n")),(0,l.kt)("p",null,"initialize init the\ncontract with the following parameters."),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"this function is called only once during the contract\ninitialization. It initializes the ownable feature, and\nset push the required condition types including\naccess secret store, lock reward and escrow reward conditions.")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_owner"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"contract's owner account address")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_agreementStoreManagerAddress"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"agreement store manager contract address")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_lockPaymentConditionAddress"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"lock reward condition contract address")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_transferConditionAddress"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"transfer NFT condition contract address")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_escrowPaymentAddress"),(0,l.kt)("td",{parentName:"tr",align:null},"address payable"),(0,l.kt)("td",{parentName:"tr",align:null},"escrow reward condition contract address")))),(0,l.kt)("h3",{id:"nftprice"},"nftPrice"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"mapping(address => mapping(address => mapping(address => mapping(bytes32 => uint256)))) nftPrice\n")),(0,l.kt)("h3",{id:"nftsale"},"nftSale"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function nftSale(address nftAddress, bytes32 nftId, address token, uint256 amount) external\n")),(0,l.kt)("h3",{id:"checkparamstransfer"},"checkParamsTransfer"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function checkParamsTransfer(bytes[] _params, bytes32 lockPaymentConditionId, bytes32 _did) internal view returns (address)\n")),(0,l.kt)("h3",{id:"checkparamsescrow"},"checkParamsEscrow"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function checkParamsEscrow(bytes[] _params, bytes32 lockPaymentId, bytes32 transferId) internal pure\n")),(0,l.kt)("h3",{id:"createagreementfulfill"},"createAgreementFulfill"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function createAgreementFulfill(bytes32 _id, bytes32 _did, uint256[] _timeLocks, uint256[] _timeOuts, address _accessConsumer, bytes[] _params) external payable\n")),(0,l.kt)("h2",{id:"nftsaleswithaccesstemplate"},"NFTSalesWithAccessTemplate"),(0,l.kt)("p",null,"_Implementation of NFT Sales Template"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"}," The NFT Sales template supports an scenario where a NFT owner\n can sell that asset to a new Owner.\n Anyone (consumer/provider/publisher) can use this template in order\n to setup an agreement allowing a NFT owner to transfer the asset ownership\n after some payment. \n The template is a composite of 3 basic conditions: \n - Lock Payment Condition\n - Transfer NFT Condition\n - Escrow Reward Condition\n\n This scenario takes into account royalties for original creators in the secondary market.\n Once the agreement is created, the consumer after payment can request the transfer of the NFT\n from the current owner for a specific DID._\n")),(0,l.kt)("h3",{id:"didregistry-18"},"didRegistry"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"contract DIDRegistry didRegistry\n")),(0,l.kt)("h3",{id:"lockpaymentcondition-5"},"lockPaymentCondition"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"contract LockPaymentCondition lockPaymentCondition\n")),(0,l.kt)("h3",{id:"transfercondition-3"},"transferCondition"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"contract ITransferNFT transferCondition\n")),(0,l.kt)("h3",{id:"rewardcondition-3"},"rewardCondition"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"contract EscrowPaymentCondition rewardCondition\n")),(0,l.kt)("h3",{id:"accesscondition-6"},"accessCondition"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"contract AccessProofCondition accessCondition\n")),(0,l.kt)("h3",{id:"initialize-48"},"initialize"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function initialize(address _owner, address _agreementStoreManagerAddress, address _lockPaymentConditionAddress, address _transferConditionAddress, address payable _escrowPaymentAddress, address _accessCondition) external\n")),(0,l.kt)("p",null,"initialize init the\ncontract with the following parameters."),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"this function is called only once during the contract\ninitialization. It initializes the ownable feature, and\nset push the required condition types including\naccess secret store, lock reward and escrow reward conditions.")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_owner"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"contract's owner account address")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_agreementStoreManagerAddress"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"agreement store manager contract address")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_lockPaymentConditionAddress"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"lock reward condition contract address")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_transferConditionAddress"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"transfer NFT condition contract address")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_escrowPaymentAddress"),(0,l.kt)("td",{parentName:"tr",align:null},"address payable"),(0,l.kt)("td",{parentName:"tr",align:null},"escrow reward condition contract address")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_accessCondition"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null})))),(0,l.kt)("h2",{id:"templatestorelibrary"},"TemplateStoreLibrary"),(0,l.kt)("p",null,"_Implementation of the Template Store Library."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"}," Templates are blueprints for modular SEAs. When \n creating an Agreement, a templateId defines the condition \n and reward types that are instantiated in the ConditionStore._\n")),(0,l.kt)("h3",{id:"templatestate"},"TemplateState"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"enum TemplateState {\n  Uninitialized,\n  Proposed,\n  Approved,\n  Revoked\n}\n")),(0,l.kt)("h3",{id:"template-1"},"Template"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"struct Template {\n  enum TemplateStoreLibrary.TemplateState state;\n  address owner;\n  address lastUpdatedBy;\n  uint256 blockNumberUpdated;\n}\n")),(0,l.kt)("h3",{id:"templatelist"},"TemplateList"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"struct TemplateList {\n  mapping(address &#x3D;&gt; struct TemplateStoreLibrary.Template) templates;\n  address[] templateIds;\n}\n")),(0,l.kt)("h3",{id:"propose"},"propose"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function propose(struct TemplateStoreLibrary.TemplateList _self, address _id) internal returns (uint256 size)\n")),(0,l.kt)("p",null,"propose new template"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_self"),(0,l.kt)("td",{parentName:"tr",align:null},"struct TemplateStoreLibrary.TemplateList"),(0,l.kt)("td",{parentName:"tr",align:null},"is the TemplateList storage pointer")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_id"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"proposed template contract address")))),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"size"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"which is the index of the proposed template")))),(0,l.kt)("h3",{id:"approve-1"},"approve"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function approve(struct TemplateStoreLibrary.TemplateList _self, address _id) internal\n")),(0,l.kt)("p",null,"approve new template"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_self"),(0,l.kt)("td",{parentName:"tr",align:null},"struct TemplateStoreLibrary.TemplateList"),(0,l.kt)("td",{parentName:"tr",align:null},"is the TemplateList storage pointer")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_id"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"proposed template contract address")))),(0,l.kt)("h3",{id:"revoke"},"revoke"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function revoke(struct TemplateStoreLibrary.TemplateList _self, address _id) internal\n")),(0,l.kt)("p",null,"revoke new template"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_self"),(0,l.kt)("td",{parentName:"tr",align:null},"struct TemplateStoreLibrary.TemplateList"),(0,l.kt)("td",{parentName:"tr",align:null},"is the TemplateList storage pointer")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_id"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"approved template contract address")))),(0,l.kt)("h2",{id:"templatestoremanager-1"},"TemplateStoreManager"),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"Implementation of the Template Store Manager.\nTemplates are blueprints for modular SEAs. When creating an Agreement,\na templateId defines the condition and reward types that are instantiated\nin the ConditionStore. This contract manages the life cycle\nof the template ( Propose --\x3e Approve --\x3e Revoke ).")),(0,l.kt)("h3",{id:"templatelist-1"},"templateList"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"struct TemplateStoreLibrary.TemplateList templateList\n")),(0,l.kt)("h3",{id:"onlyownerortemplateowner"},"onlyOwnerOrTemplateOwner"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"modifier onlyOwnerOrTemplateOwner(address _id)\n")),(0,l.kt)("h3",{id:"initialize-49"},"initialize"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function initialize(address _owner) public\n")),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"initialize TemplateStoreManager Initializer\nInitializes Ownable. Only on contract creation.")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_owner"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"refers to the owner of the contract")))),(0,l.kt)("h3",{id:"proposetemplate"},"proposeTemplate"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function proposeTemplate(address _id) external returns (uint256 size)\n")),(0,l.kt)("p",null,"proposeTemplate proposes a new template"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_id"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"unique template identifier which is basically        the template contract address")))),(0,l.kt)("h3",{id:"approvetemplate"},"approveTemplate"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function approveTemplate(address _id) external\n")),(0,l.kt)("p",null,"approveTemplate approves a template"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_id"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"unique template identifier which is basically        the template contract address. Only template store        manager owner (i.e OPNF) can approve this template.")))),(0,l.kt)("h3",{id:"revoketemplate"},"revokeTemplate"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function revokeTemplate(address _id) external\n")),(0,l.kt)("p",null,"revokeTemplate revoke a template"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_id"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"unique template identifier which is basically        the template contract address. Only template store        manager owner (i.e OPNF) or template owner        can revoke this template.")))),(0,l.kt)("h3",{id:"gettemplate"},"getTemplate"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function getTemplate(address _id) external view returns (enum TemplateStoreLibrary.TemplateState state, address owner, address lastUpdatedBy, uint256 blockNumberUpdated)\n")),(0,l.kt)("p",null,"getTemplate get more information about a template"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_id"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"unique template identifier which is basically        the template contract address.")))),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"state"),(0,l.kt)("td",{parentName:"tr",align:null},"enum TemplateStoreLibrary.TemplateState"),(0,l.kt)("td",{parentName:"tr",align:null},"template status")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"owner"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"template owner")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"lastUpdatedBy"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"last updated by")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"blockNumberUpdated"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"last updated at.")))),(0,l.kt)("h3",{id:"gettemplatelistsize"},"getTemplateListSize"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function getTemplateListSize() external view virtual returns (uint256 size)\n")),(0,l.kt)("p",null,"getTemplateListSize number of templates"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"size"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"number of templates")))),(0,l.kt)("h3",{id:"istemplateapproved"},"isTemplateApproved"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function isTemplateApproved(address _id) external view returns (bool)\n")),(0,l.kt)("p",null,"isTemplateApproved check whether the template is approved"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_id"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"unique template identifier which is basically        the template contract address.")))),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[0]"),(0,l.kt)("td",{parentName:"tr",align:null},"bool"),(0,l.kt)("td",{parentName:"tr",align:null},"true if the template is approved")))),(0,l.kt)("h2",{id:"agreementstoremanagerchangefunctionsignature"},"AgreementStoreManagerChangeFunctionSignature"),(0,l.kt)("h3",{id:"createagreement-4"},"createAgreement"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function createAgreement(bytes32 _id, bytes32 _did, address[] _conditionTypes, bytes32[] _conditionIds, uint256[] _timeLocks, uint256[] _timeOuts, address _creator, address _sender) public\n")),(0,l.kt)("h2",{id:"agreementstoremanagerchangeinstorage"},"AgreementStoreManagerChangeInStorage"),(0,l.kt)("h3",{id:"agreementcount"},"agreementCount"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"uint256 agreementCount\n")),(0,l.kt)("h2",{id:"agreementstoremanagerchangeinstorageandlogic"},"AgreementStoreManagerChangeInStorageAndLogic"),(0,l.kt)("h2",{id:"agreementstoremanagerextrafunctionality"},"AgreementStoreManagerExtraFunctionality"),(0,l.kt)("h3",{id:"dummyfunction"},"dummyFunction"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function dummyFunction() public pure returns (bool)\n")),(0,l.kt)("h2",{id:"agreementstoremanagerwithbug"},"AgreementStoreManagerWithBug"),(0,l.kt)("h3",{id:"getdidregistryaddress-1"},"getDIDRegistryAddress"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function getDIDRegistryAddress() public pure returns (address)\n")),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"getDIDRegistryAddress utility function\nused by other contracts or any EOA.")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[0]"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"the DIDRegistry address")))),(0,l.kt)("h2",{id:"conditionstorechangefunctionsignature"},"ConditionStoreChangeFunctionSignature"),(0,l.kt)("h3",{id:"createcondition-2"},"createCondition"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function createCondition(bytes32 _id, address _typeRef, address _sender) public\n")),(0,l.kt)("h2",{id:"conditionstorechangeinstorage"},"ConditionStoreChangeInStorage"),(0,l.kt)("h3",{id:"conditioncount"},"conditionCount"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"uint256 conditionCount\n")),(0,l.kt)("h2",{id:"conditionstorechangeinstorageandlogic"},"ConditionStoreChangeInStorageAndLogic"),(0,l.kt)("h2",{id:"conditionstoreextrafunctionality"},"ConditionStoreExtraFunctionality"),(0,l.kt)("h3",{id:"dummyfunction-1"},"dummyFunction"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function dummyFunction() public pure returns (bool)\n")),(0,l.kt)("h2",{id:"conditionstorewithbug"},"ConditionStoreWithBug"),(0,l.kt)("h3",{id:"getconditionstate-1"},"getConditionState"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function getConditionState(bytes32 _id) public view returns (enum ConditionStoreLibrary.ConditionState)\n")),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"getConditionState")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[0]"),(0,l.kt)("td",{parentName:"tr",align:null},"enum ConditionStoreLibrary.ConditionState"),(0,l.kt)("td",{parentName:"tr",align:null},"condition state")))),(0,l.kt)("h2",{id:"didregistrychangefunctionsignature"},"DIDRegistryChangeFunctionSignature"),(0,l.kt)("h3",{id:"registerattribute-1"},"registerAttribute"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function registerAttribute(bytes32 _didSeed, address[] _providers, bytes32 _checksum, string _url) public\n")),(0,l.kt)("h2",{id:"didregistrychangeinstorage"},"DIDRegistryChangeInStorage"),(0,l.kt)("h3",{id:"timeofregister"},"timeOfRegister"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"mapping(bytes32 => uint256) timeOfRegister\n")),(0,l.kt)("h2",{id:"didregistrychangeinstorageandlogic"},"DIDRegistryChangeInStorageAndLogic"),(0,l.kt)("h2",{id:"didregistryextrafunctionality"},"DIDRegistryExtraFunctionality"),(0,l.kt)("h3",{id:"getnumber"},"getNumber"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function getNumber() public pure returns (uint256)\n")),(0,l.kt)("h2",{id:"didregistrywithbug"},"DIDRegistryWithBug"),(0,l.kt)("h3",{id:"registerattribute-2"},"registerAttribute"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function registerAttribute(bytes32 _checksum, bytes32 _didSeed, address[] _providers, string _url) public\n")),(0,l.kt)("p",null,"registerAttribute is called only by DID owner."),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"this function registers DID attributes")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_checksum"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"includes a one-way HASH calculated using the DDO content")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_didSeed"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"refers to decentralized identifier (a byte32 length ID)")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_providers"),(0,l.kt)("td",{parentName:"tr",align:null},"address[]"),(0,l.kt)("td",{parentName:"tr",align:null})),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_url"),(0,l.kt)("td",{parentName:"tr",align:null},"string"),(0,l.kt)("td",{parentName:"tr",align:null},"refers to the attribute value")))),(0,l.kt)("h2",{id:"ipnft"},"IPNFT"),(0,l.kt)("h3",{id:"tokenurichanged"},"TokenURIChanged"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"event TokenURIChanged(uint256 tokenId, string newURI)\n")),(0,l.kt)("h3",{id:"initialize-50"},"initialize"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function initialize(string _name, string _symbol) public\n")),(0,l.kt)("h3",{id:"settokenuri"},"setTokenURI"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function setTokenURI(uint256 tokenId, string _tokenURI) public\n")),(0,l.kt)("h3",{id:"mint-5"},"mint"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function mint(address to, uint256 _tokenId, string _tokenURI) public returns (bool)\n")),(0,l.kt)("h3",{id:"mintwithouttokenuri"},"mintWithoutTokenURI"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function mintWithoutTokenURI(address to, uint256 _tokenId) external\n")),(0,l.kt)("h3",{id:"transfer-2"},"transfer"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function transfer(address from, address to, uint256 _tokenId) public\n")),(0,l.kt)("h2",{id:"neverminedconfigchangeinstorage"},"NeverminedConfigChangeInStorage"),(0,l.kt)("h3",{id:"newvariable"},"newVariable"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"uint256 newVariable\n")),(0,l.kt)("h2",{id:"neverminedconfigchangefunctionsignature"},"NeverminedConfigChangeFunctionSignature"),(0,l.kt)("h3",{id:"setmarketplacefees-2"},"setMarketplaceFees"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function setMarketplaceFees(uint256 _marketplaceFee, address _feeReceiver, uint256 _newParameter) external virtual\n")),(0,l.kt)("h2",{id:"neverminedconfigchangeinstorageandlogic"},"NeverminedConfigChangeInStorageAndLogic"),(0,l.kt)("h2",{id:"neverminedconfigwithbug"},"NeverminedConfigWithBug"),(0,l.kt)("h3",{id:"setmarketplacefees-3"},"setMarketplaceFees"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function setMarketplaceFees(uint256 _marketplaceFee, address _feeReceiver) external virtual\n")),(0,l.kt)("p",null,"The governor can update the Nevermined Marketplace fees"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_marketplaceFee"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"new marketplace fee")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_feeReceiver"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"The address receiving the fee")))),(0,l.kt)("h2",{id:"templatestorechangefunctionsignature"},"TemplateStoreChangeFunctionSignature"),(0,l.kt)("h3",{id:"proposetemplate-1"},"proposeTemplate"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function proposeTemplate(address _id, address _sender) external returns (uint256 size)\n")),(0,l.kt)("h2",{id:"templatestorechangeinstorage"},"TemplateStoreChangeInStorage"),(0,l.kt)("h3",{id:"templatecount"},"templateCount"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"uint256 templateCount\n")),(0,l.kt)("h2",{id:"templatestorechangeinstorageandlogic"},"TemplateStoreChangeInStorageAndLogic"),(0,l.kt)("h2",{id:"templatestoreextrafunctionality"},"TemplateStoreExtraFunctionality"),(0,l.kt)("h3",{id:"dummyfunction-2"},"dummyFunction"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function dummyFunction() public pure returns (bool)\n")),(0,l.kt)("h2",{id:"templatestorewithbug"},"TemplateStoreWithBug"),(0,l.kt)("h3",{id:"gettemplatelistsize-1"},"getTemplateListSize"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function getTemplateListSize() external view returns (uint256 size)\n")),(0,l.kt)("p",null,"getTemplateListSize number of templates"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"size"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"number of templates")))),(0,l.kt)("h2",{id:"testerc721"},"TestERC721"),(0,l.kt)("h3",{id:"initialize-51"},"initialize"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function initialize() public\n")),(0,l.kt)("h3",{id:"mint-6"},"mint"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function mint(uint256 id) public\n")),(0,l.kt)("h2",{id:"didregistrylibraryproxy"},"DIDRegistryLibraryProxy"),(0,l.kt)("h3",{id:"didregister-1"},"didRegister"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"struct DIDRegistryLibrary.DIDRegister didRegister\n")),(0,l.kt)("h3",{id:"didregisterlist-2"},"didRegisterList"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"struct DIDRegistryLibrary.DIDRegisterList didRegisterList\n")),(0,l.kt)("h3",{id:"areroyaltiesvalid-2"},"areRoyaltiesValid"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function areRoyaltiesValid(bytes32 _did, uint256[] _amounts, address[] _receivers, address _tokenAddress) public view returns (bool)\n")),(0,l.kt)("h3",{id:"updatedidowner-1"},"updateDIDOwner"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function updateDIDOwner(bytes32 _did, address _newOwner) public\n")),(0,l.kt)("h3",{id:"update-3"},"update"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function update(bytes32 _did, bytes32 _checksum, string _url) public\n")),(0,l.kt)("h3",{id:"initializenftconfig-1"},"initializeNftConfig"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function initializeNftConfig(bytes32 _did, uint256 _cap, uint8 _royalties) public\n")),(0,l.kt)("h3",{id:"initializenft721config-1"},"initializeNft721Config"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function initializeNft721Config(bytes32 _did, uint8 _royalties) public\n")),(0,l.kt)("h3",{id:"getdidinfo"},"getDIDInfo"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function getDIDInfo(bytes32 _did) public view returns (address owner, address creator, uint256 royalties)\n")),(0,l.kt)("h2",{id:"epochlibraryproxy"},"EpochLibraryProxy"),(0,l.kt)("h3",{id:"epoch-1"},"epoch"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"struct EpochLibrary.Epoch epoch\n")),(0,l.kt)("h3",{id:"epochlist-2"},"epochList"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"struct EpochLibrary.EpochList epochList\n")),(0,l.kt)("h3",{id:"create-5"},"create"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function create(bytes32 _id, uint256 _timeLock, uint256 _timeOut) external\n")),(0,l.kt)("h2",{id:"hashlistlibraryproxy"},"HashListLibraryProxy"),(0,l.kt)("h3",{id:"testdata"},"testData"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"struct HashListLibrary.List testData\n")),(0,l.kt)("h3",{id:"initialize-52"},"initialize"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function initialize(address _owner) public\n")),(0,l.kt)("h3",{id:"hash-1"},"hash"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function hash(address _address) public pure returns (bytes32)\n")),(0,l.kt)("h3",{id:"add-5"},"add"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function add(bytes32[] values) external returns (bool)\n")),(0,l.kt)("h3",{id:"add-6"},"add"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function add(bytes32 value) external returns (bool)\n")),(0,l.kt)("h3",{id:"update-4"},"update"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function update(bytes32 oldValue, bytes32 newValue) external returns (bool)\n")),(0,l.kt)("h3",{id:"index-2"},"index"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function index(uint256 from, uint256 to) external returns (bool)\n")),(0,l.kt)("h3",{id:"has-5"},"has"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function has(bytes32 value) external view returns (bool)\n")),(0,l.kt)("h3",{id:"remove-2"},"remove"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function remove(bytes32 value) external returns (bool)\n")),(0,l.kt)("h3",{id:"get-2"},"get"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function get(uint256 _index) external view returns (bytes32)\n")),(0,l.kt)("h3",{id:"size-2"},"size"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function size() external view returns (uint256)\n")),(0,l.kt)("h3",{id:"all-2"},"all"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function all() external view returns (bytes32[])\n")),(0,l.kt)("h3",{id:"indexof-2"},"indexOf"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function indexOf(bytes32 value) external view returns (uint256)\n")),(0,l.kt)("h3",{id:"ownedby-2"},"ownedBy"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function ownedBy() external view returns (address)\n")),(0,l.kt)("h3",{id:"isindexed-2"},"isIndexed"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function isIndexed() external view returns (bool)\n")),(0,l.kt)("h2",{id:"nftbase"},"NFTBase"),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"Implementation of the Royalties EIP-2981 base contract\nSee ",(0,l.kt)("a",{parentName:"em",href:"https://eips.ethereum.org/EIPS/eip-2981"},"https://eips.ethereum.org/EIPS/eip-2981"))),(0,l.kt)("h3",{id:"_proxyapprovals"},"_proxyApprovals"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"mapping(address => bool) _proxyApprovals\n")),(0,l.kt)("h3",{id:"minter_role"},"MINTER_ROLE"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"bytes32 MINTER_ROLE\n")),(0,l.kt)("h3",{id:"royaltyinfo"},"RoyaltyInfo"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"struct RoyaltyInfo {\n  address receiver;\n  uint256 royaltyAmount;\n}\n")),(0,l.kt)("h3",{id:"nftmetadata"},"NFTMetadata"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"struct NFTMetadata {\n  string nftURI;\n}\n")),(0,l.kt)("h3",{id:"_royalties"},"_royalties"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"mapping(uint256 => struct NFTBase.RoyaltyInfo) _royalties\n")),(0,l.kt)("h3",{id:"_metadata"},"_metadata"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"mapping(uint256 => struct NFTBase.NFTMetadata) _metadata\n")),(0,l.kt)("h3",{id:"_expiration"},"_expiration"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"mapping(address => uint256) _expiration\n")),(0,l.kt)("h3",{id:"proxyapproval"},"ProxyApproval"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"event ProxyApproval(address sender, address operator, bool approved)\n")),(0,l.kt)("p",null,"Event for recording proxy approvals."),(0,l.kt)("h3",{id:"setproxyapproval"},"setProxyApproval"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function setProxyApproval(address operator, bool approved) public virtual\n")),(0,l.kt)("h3",{id:"_setnftmetadata"},"_setNFTMetadata"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function _setNFTMetadata(uint256 tokenId, string tokenURI) internal\n")),(0,l.kt)("h3",{id:"_settokenroyalty"},"_setTokenRoyalty"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function _setTokenRoyalty(uint256 tokenId, address receiver, uint256 royaltyAmount) internal\n")),(0,l.kt)("h3",{id:"royaltyinfo-1"},"royaltyInfo"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function royaltyInfo(uint256 tokenId, uint256 value) external view returns (address receiver, uint256 royaltyAmount)\n")),(0,l.kt)("p",null,"@inheritdoc\tIERC2981Upgradeable"),(0,l.kt)("h2",{id:"nftupgradeable"},"NFTUpgradeable"),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"Implementation of the basic standard multi-token.\nSee ",(0,l.kt)("a",{parentName:"em",href:"https://eips.ethereum.org/EIPS/eip-1155"},"https://eips.ethereum.org/EIPS/eip-1155"))),(0,l.kt)("h3",{id:"initialize-53"},"initialize"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function initialize(string uri_) public\n")),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"See {_setURI}.")),(0,l.kt)("h3",{id:"isapprovedforall"},"isApprovedForAll"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function isApprovedForAll(address account, address operator) public view virtual returns (bool)\n")),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"See {IERC1155-isApprovedForAll}.")),(0,l.kt)("h3",{id:"mint-7"},"mint"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function mint(address to, uint256 id, uint256 amount, bytes data) public\n")),(0,l.kt)("h3",{id:"burn-3"},"burn"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function burn(address to, uint256 id, uint256 amount) public\n")),(0,l.kt)("h3",{id:"addminter"},"addMinter"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function addMinter(address account) public\n")),(0,l.kt)("h3",{id:"uri"},"uri"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function uri(uint256 tokenId) public view returns (string)\n")),(0,l.kt)("h3",{id:"setnftmetadata"},"setNFTMetadata"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function setNFTMetadata(uint256 tokenId, string nftURI) public\n")),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"Record some NFT Metadata")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"tokenId"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"the id of the asset with the royalties associated")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"nftURI"),(0,l.kt)("td",{parentName:"tr",align:null},"string"),(0,l.kt)("td",{parentName:"tr",align:null},"the URI (https, ipfs, etc) to the metadata describing the NFT")))),(0,l.kt)("h3",{id:"settokenroyalty"},"setTokenRoyalty"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function setTokenRoyalty(uint256 tokenId, address receiver, uint256 royaltyAmount) public\n")),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"Record the asset royalties")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"tokenId"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"the id of the asset with the royalties associated")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"receiver"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"the receiver of the royalties (the original creator)")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"royaltyAmount"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"percentage (no decimals, between 0 and 100)")))),(0,l.kt)("h3",{id:"supportsinterface-2"},"supportsInterface"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function supportsInterface(bytes4 interfaceId) public view virtual returns (bool)\n")),(0,l.kt)("h2",{id:"nft721subscriptionupgradeable"},"NFT721SubscriptionUpgradeable"),(0,l.kt)("h3",{id:"mint-8"},"mint"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function mint(address to, uint256 id, uint256 expirationBlock) public\n")),(0,l.kt)("p",null,"_This mint function allows to define when the NFT expires.\nThe minter should calculate this block number depending on the network velocity"),(0,l.kt)("p",null,"TransferNFT721Condition needs to have the ",(0,l.kt)("inlineCode",{parentName:"p"},"MINTER_ROLE"),"_"),(0,l.kt)("h3",{id:"balanceof-1"},"balanceOf"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function balanceOf(address owner) public view returns (uint256)\n")),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"See {IERC721-balanceOf}.")),(0,l.kt)("h2",{id:"nft721upgradeable"},"NFT721Upgradeable"),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"Implementation of the basic standard multi-token.")),(0,l.kt)("h3",{id:"initialize-54"},"initialize"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function initialize(string name, string symbol) public virtual\n")),(0,l.kt)("h3",{id:"initialize-55"},"initialize"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function initialize() public virtual\n")),(0,l.kt)("h3",{id:"isapprovedforall-1"},"isApprovedForAll"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function isApprovedForAll(address account, address operator) public view virtual returns (bool)\n")),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"See {IERC1155-isApprovedForAll}.")),(0,l.kt)("h3",{id:"addminter-1"},"addMinter"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function addMinter(address account) public\n")),(0,l.kt)("h3",{id:"mint-9"},"mint"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function mint(address to, uint256 id) public virtual\n")),(0,l.kt)("h3",{id:"burn-4"},"burn"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function burn(uint256 id) public\n")),(0,l.kt)("h3",{id:"tokenuri"},"tokenURI"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function tokenURI(uint256 tokenId) public view virtual returns (string)\n")),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"See {IERC721Metadata-tokenURI}.")),(0,l.kt)("h3",{id:"setnftmetadata-1"},"setNFTMetadata"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function setNFTMetadata(uint256 tokenId, string nftURI) public\n")),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"Record some NFT Metadata")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"tokenId"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"the id of the asset with the royalties associated")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"nftURI"),(0,l.kt)("td",{parentName:"tr",align:null},"string"),(0,l.kt)("td",{parentName:"tr",align:null},"the URI (https, ipfs, etc) to the metadata describing the NFT")))),(0,l.kt)("h3",{id:"settokenroyalty-1"},"setTokenRoyalty"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function setTokenRoyalty(uint256 tokenId, address receiver, uint256 royaltyAmount) public\n")),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"Record the asset royalties")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"tokenId"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"the id of the asset with the royalties associated")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"receiver"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"the receiver of the royalties (the original creator)")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"royaltyAmount"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"percentage (no decimals, between 0 and 100)")))),(0,l.kt)("h3",{id:"supportsinterface-3"},"supportsInterface"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function supportsInterface(bytes4 interfaceId) public view virtual returns (bool)\n")),(0,l.kt)("h2",{id:"poapupgradeable"},"POAPUpgradeable"),(0,l.kt)("h3",{id:"_tokenidcounter"},"_tokenIdCounter"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"struct CountersUpgradeable.Counter _tokenIdCounter\n")),(0,l.kt)("h3",{id:"_tokenevent"},"_tokenEvent"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"mapping(uint256 => uint256) _tokenEvent\n")),(0,l.kt)("h3",{id:"initialize-56"},"initialize"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function initialize() public\n")),(0,l.kt)("h3",{id:"initialize-57"},"initialize"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function initialize(string name, string symbol) public virtual\n")),(0,l.kt)("h3",{id:"mint-10"},"mint"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function mint(address to, string uri, uint256 eventId) public\n")),(0,l.kt)("h3",{id:"mint-11"},"mint"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function mint(address to, uint256 id) public\n")),(0,l.kt)("h3",{id:"tokenevent"},"tokenEvent"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function tokenEvent(uint256 tokenId) public view returns (uint256)\n")),(0,l.kt)("h3",{id:"_beforetokentransfer-1"},"_beforeTokenTransfer"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function _beforeTokenTransfer(address from, address to, uint256 tokenId) internal\n")),(0,l.kt)("h3",{id:"_burn"},"_burn"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function _burn(uint256 tokenId) internal\n")),(0,l.kt)("h3",{id:"tokendetailsofowner"},"tokenDetailsOfOwner"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function tokenDetailsOfOwner(address owner) public view returns (uint256[] tokenIds, uint256[] eventIds)\n")),(0,l.kt)("h3",{id:"tokenuri-1"},"tokenURI"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function tokenURI(uint256 tokenId) public view returns (string)\n")),(0,l.kt)("h3",{id:"isapprovedforall-2"},"isApprovedForAll"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function isApprovedForAll(address account, address operator) public view returns (bool)\n")),(0,l.kt)("h3",{id:"supportsinterface-4"},"supportsInterface"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function supportsInterface(bytes4 interfaceId) public view virtual returns (bool)\n")),(0,l.kt)("h2",{id:"plonkverifier"},"PlonkVerifier"),(0,l.kt)("h3",{id:"n"},"n"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"uint32 n\n")),(0,l.kt)("h3",{id:"npublic"},"nPublic"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"uint16 nPublic\n")),(0,l.kt)("h3",{id:"nlagrange"},"nLagrange"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"uint16 nLagrange\n")),(0,l.kt)("h3",{id:"qmx"},"Qmx"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"uint256 Qmx\n")),(0,l.kt)("h3",{id:"qmy"},"Qmy"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"uint256 Qmy\n")),(0,l.kt)("h3",{id:"qlx"},"Qlx"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"uint256 Qlx\n")),(0,l.kt)("h3",{id:"qly"},"Qly"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"uint256 Qly\n")),(0,l.kt)("h3",{id:"qrx"},"Qrx"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"uint256 Qrx\n")),(0,l.kt)("h3",{id:"qry"},"Qry"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"uint256 Qry\n")),(0,l.kt)("h3",{id:"qox"},"Qox"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"uint256 Qox\n")),(0,l.kt)("h3",{id:"qoy"},"Qoy"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"uint256 Qoy\n")),(0,l.kt)("h3",{id:"qcx"},"Qcx"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"uint256 Qcx\n")),(0,l.kt)("h3",{id:"qcy"},"Qcy"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"uint256 Qcy\n")),(0,l.kt)("h3",{id:"s1x"},"S1x"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"uint256 S1x\n")),(0,l.kt)("h3",{id:"s1y"},"S1y"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"uint256 S1y\n")),(0,l.kt)("h3",{id:"s2x"},"S2x"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"uint256 S2x\n")),(0,l.kt)("h3",{id:"s2y"},"S2y"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"uint256 S2y\n")),(0,l.kt)("h3",{id:"s3x"},"S3x"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"uint256 S3x\n")),(0,l.kt)("h3",{id:"s3y"},"S3y"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"uint256 S3y\n")),(0,l.kt)("h3",{id:"k1"},"k1"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"uint256 k1\n")),(0,l.kt)("h3",{id:"k2"},"k2"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"uint256 k2\n")),(0,l.kt)("h3",{id:"x2x1"},"X2x1"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"uint256 X2x1\n")),(0,l.kt)("h3",{id:"x2x2"},"X2x2"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"uint256 X2x2\n")),(0,l.kt)("h3",{id:"x2y1"},"X2y1"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"uint256 X2y1\n")),(0,l.kt)("h3",{id:"x2y2"},"X2y2"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"uint256 X2y2\n")),(0,l.kt)("h3",{id:"q"},"q"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"uint256 q\n")),(0,l.kt)("h3",{id:"qf"},"qf"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"uint256 qf\n")),(0,l.kt)("h3",{id:"w1"},"w1"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"uint256 w1\n")),(0,l.kt)("h3",{id:"g1x"},"G1x"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"uint256 G1x\n")),(0,l.kt)("h3",{id:"g1y"},"G1y"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"uint256 G1y\n")),(0,l.kt)("h3",{id:"g2x1"},"G2x1"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"uint256 G2x1\n")),(0,l.kt)("h3",{id:"g2x2"},"G2x2"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"uint256 G2x2\n")),(0,l.kt)("h3",{id:"g2y1"},"G2y1"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"uint256 G2y1\n")),(0,l.kt)("h3",{id:"g2y2"},"G2y2"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"uint256 G2y2\n")),(0,l.kt)("h3",{id:"pa"},"pA"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"uint16 pA\n")),(0,l.kt)("h3",{id:"pb"},"pB"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"uint16 pB\n")),(0,l.kt)("h3",{id:"pc"},"pC"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"uint16 pC\n")),(0,l.kt)("h3",{id:"pz"},"pZ"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"uint16 pZ\n")),(0,l.kt)("h3",{id:"pt1"},"pT1"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"uint16 pT1\n")),(0,l.kt)("h3",{id:"pt2"},"pT2"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"uint16 pT2\n")),(0,l.kt)("h3",{id:"pt3"},"pT3"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"uint16 pT3\n")),(0,l.kt)("h3",{id:"pwxi"},"pWxi"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"uint16 pWxi\n")),(0,l.kt)("h3",{id:"pwxiw"},"pWxiw"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"uint16 pWxiw\n")),(0,l.kt)("h3",{id:"peval_a"},"pEval_a"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"uint16 pEval_a\n")),(0,l.kt)("h3",{id:"peval_b"},"pEval_b"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"uint16 pEval_b\n")),(0,l.kt)("h3",{id:"peval_c"},"pEval_c"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"uint16 pEval_c\n")),(0,l.kt)("h3",{id:"peval_s1"},"pEval_s1"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"uint16 pEval_s1\n")),(0,l.kt)("h3",{id:"peval_s2"},"pEval_s2"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"uint16 pEval_s2\n")),(0,l.kt)("h3",{id:"peval_zw"},"pEval_zw"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"uint16 pEval_zw\n")),(0,l.kt)("h3",{id:"peval_r"},"pEval_r"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"uint16 pEval_r\n")),(0,l.kt)("h3",{id:"palpha"},"pAlpha"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"uint16 pAlpha\n")),(0,l.kt)("h3",{id:"pbeta"},"pBeta"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"uint16 pBeta\n")),(0,l.kt)("h3",{id:"pgamma"},"pGamma"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"uint16 pGamma\n")),(0,l.kt)("h3",{id:"pxi"},"pXi"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"uint16 pXi\n")),(0,l.kt)("h3",{id:"pxin"},"pXin"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"uint16 pXin\n")),(0,l.kt)("h3",{id:"pbetaxi"},"pBetaXi"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"uint16 pBetaXi\n")),(0,l.kt)("h3",{id:"pv1"},"pV1"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"uint16 pV1\n")),(0,l.kt)("h3",{id:"pv2"},"pV2"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"uint16 pV2\n")),(0,l.kt)("h3",{id:"pv3"},"pV3"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"uint16 pV3\n")),(0,l.kt)("h3",{id:"pv4"},"pV4"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"uint16 pV4\n")),(0,l.kt)("h3",{id:"pv5"},"pV5"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"uint16 pV5\n")),(0,l.kt)("h3",{id:"pv6"},"pV6"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"uint16 pV6\n")),(0,l.kt)("h3",{id:"pu"},"pU"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"uint16 pU\n")),(0,l.kt)("h3",{id:"ppl"},"pPl"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"uint16 pPl\n")),(0,l.kt)("h3",{id:"peval_t"},"pEval_t"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"uint16 pEval_t\n")),(0,l.kt)("h3",{id:"pa1"},"pA1"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"uint16 pA1\n")),(0,l.kt)("h3",{id:"pb1"},"pB1"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"uint16 pB1\n")),(0,l.kt)("h3",{id:"pzh"},"pZh"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"uint16 pZh\n")),(0,l.kt)("h3",{id:"pzhinv"},"pZhInv"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"uint16 pZhInv\n")),(0,l.kt)("h3",{id:"peval_l1"},"pEval_l1"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"uint16 pEval_l1\n")),(0,l.kt)("h3",{id:"peval_l2"},"pEval_l2"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"uint16 pEval_l2\n")),(0,l.kt)("h3",{id:"peval_l3"},"pEval_l3"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"uint16 pEval_l3\n")),(0,l.kt)("h3",{id:"peval_l4"},"pEval_l4"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"uint16 pEval_l4\n")),(0,l.kt)("h3",{id:"peval_l5"},"pEval_l5"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"uint16 pEval_l5\n")),(0,l.kt)("h3",{id:"peval_l6"},"pEval_l6"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"uint16 pEval_l6\n")),(0,l.kt)("h3",{id:"peval_l7"},"pEval_l7"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"uint16 pEval_l7\n")),(0,l.kt)("h3",{id:"lastmem"},"lastMem"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"uint16 lastMem\n")),(0,l.kt)("h3",{id:"verifyproof-1"},"verifyProof"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function verifyProof(bytes proof, uint256[] pubSignals) public view returns (bool)\n")),(0,l.kt)("h1",{id:"solidity-api-1"},"Solidity API"),(0,l.kt)("h2",{id:"common-1"},"Common"),(0,l.kt)("h3",{id:"getcurrentblocknumber-1"},"getCurrentBlockNumber"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function getCurrentBlockNumber() external view returns (uint256)\n")),(0,l.kt)("p",null,"getCurrentBlockNumber get block number"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[0]"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"the current block number")))),(0,l.kt)("h3",{id:"iscontract-2"},"isContract"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function isContract(address addr) public view returns (bool)\n")),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"isContract detect whether the address is\nis a contract address or externally owned account")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[0]"),(0,l.kt)("td",{parentName:"tr",align:null},"bool"),(0,l.kt)("td",{parentName:"tr",align:null},"true if it is a contract address")))),(0,l.kt)("h3",{id:"provenancesignatureiscorrect-1"},"provenanceSignatureIsCorrect"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function provenanceSignatureIsCorrect(address _agentId, bytes32 _hash, bytes _signature) public pure returns (bool)\n")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_agentId"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"The address of the agent")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_hash"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32 message, the hash is the signed message. What is recovered is the signer address.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_signature"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes"),(0,l.kt)("td",{parentName:"tr",align:null},"Signatures provided by the agent")))),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[0]"),(0,l.kt)("td",{parentName:"tr",align:null},"bool"),(0,l.kt)("td",{parentName:"tr",align:null},"true if the signature correspond to the agent address")))),(0,l.kt)("h3",{id:"calculatetotalamount-1"},"calculateTotalAmount"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function calculateTotalAmount(uint256[] _amounts) public pure returns (uint256)\n")),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"Sum the total amount given an uint array")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[0]"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"the total amount")))),(0,l.kt)("h3",{id:"addresstobytes32-1"},"addressToBytes32"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function addressToBytes32(address _addr) public pure returns (bytes32)\n")),(0,l.kt)("h3",{id:"bytes32toaddress-1"},"bytes32ToAddress"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function bytes32ToAddress(bytes32 _b32) public pure returns (address)\n")),(0,l.kt)("h2",{id:"dispenser-1"},"Dispenser"),(0,l.kt)("h3",{id:"tokenrequests-1"},"tokenRequests"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"mapping(address => uint256) tokenRequests\n")),(0,l.kt)("h3",{id:"totalmintamount-1"},"totalMintAmount"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"uint256 totalMintAmount\n")),(0,l.kt)("h3",{id:"maxamount-1"},"maxAmount"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"uint256 maxAmount\n")),(0,l.kt)("h3",{id:"maxmintamount-1"},"maxMintAmount"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"uint256 maxMintAmount\n")),(0,l.kt)("h3",{id:"minperiod-1"},"minPeriod"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"uint256 minPeriod\n")),(0,l.kt)("h3",{id:"scale-1"},"scale"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"uint256 scale\n")),(0,l.kt)("h3",{id:"token-1"},"token"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"contract NeverminedToken token\n")),(0,l.kt)("h3",{id:"requestfrequencyexceeded-1"},"RequestFrequencyExceeded"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"event RequestFrequencyExceeded(address requester, uint256 minPeriod)\n")),(0,l.kt)("h3",{id:"requestlimitexceeded-1"},"RequestLimitExceeded"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"event RequestLimitExceeded(address requester, uint256 amount, uint256 maxAmount)\n")),(0,l.kt)("h3",{id:"isvalidaddress-1"},"isValidAddress"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"modifier isValidAddress(address _address)\n")),(0,l.kt)("h3",{id:"initialize-58"},"initialize"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function initialize(address _tokenAddress, address _owner) external\n")),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"Dispenser Initializer")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_tokenAddress"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"The deployed contract address of an ERC20")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_owner"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"The owner of the Dispenser Runs only on initial contract creation.")))),(0,l.kt)("h3",{id:"requesttokens-1"},"requestTokens"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function requestTokens(uint256 amount) external returns (bool tokensTransferred)\n")),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"user can request some tokens for testing")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"amount"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"the amount of tokens to be requested")))),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"tokensTransferred"),(0,l.kt)("td",{parentName:"tr",align:null},"bool"),(0,l.kt)("td",{parentName:"tr",align:null},"Boolean indication of tokens are requested")))),(0,l.kt)("h3",{id:"setminperiod-1"},"setMinPeriod"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function setMinPeriod(uint256 period) external\n")),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"the Owner can set the min period for token requests")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"period"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"the min amount of time before next request")))),(0,l.kt)("h3",{id:"setmaxamount-1"},"setMaxAmount"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function setMaxAmount(uint256 amount) external\n")),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"the Owner can set the max amount for token requests")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"amount"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"the max amount of tokens that can be requested")))),(0,l.kt)("h3",{id:"setmaxmintamount-1"},"setMaxMintAmount"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function setMaxMintAmount(uint256 amount) external\n")),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"the Owner can set the max amount for token requests")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"amount"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"the max amount of tokens that can be requested")))),(0,l.kt)("h2",{id:"hashlists-1"},"HashLists"),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"Hash lists contract is a sample list contract in which uses\nHashListLibrary.sol in order to store, retrieve, remove, and\nupdate bytes32 values in hash lists.\nThis is a reference implementation for IList interface. It is\nused for whitelisting condition. Any entity can have its own\nimplementation of the interface in which could be used for the\nsame condition.")),(0,l.kt)("h3",{id:"lists-1"},"lists"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"mapping(bytes32 => struct HashListLibrary.List) lists\n")),(0,l.kt)("h3",{id:"initialize-59"},"initialize"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function initialize(address _owner) public\n")),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"HashLists Initializer")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_owner"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"The owner of the hash list Runs only upon contract creation.")))),(0,l.kt)("h3",{id:"hash-2"},"hash"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function hash(address account) public pure returns (bytes32)\n")),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"hash ethereum accounts")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"account"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"Ethereum address")))),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[0]"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32 hash of the account")))),(0,l.kt)("h3",{id:"add-7"},"add"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function add(bytes32[] values) external returns (bool)\n")),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"put an array of elements without indexing\nthis meant to save gas in case of large arrays")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"values"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32[]"),(0,l.kt)("td",{parentName:"tr",align:null},"is an array of elements value")))),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[0]"),(0,l.kt)("td",{parentName:"tr",align:null},"bool"),(0,l.kt)("td",{parentName:"tr",align:null},"true if values are added successfully")))),(0,l.kt)("h3",{id:"add-8"},"add"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function add(bytes32 value) external returns (bool)\n")),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"add indexes an element then adds it to a list")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"value"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"is a bytes32 value")))),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[0]"),(0,l.kt)("td",{parentName:"tr",align:null},"bool"),(0,l.kt)("td",{parentName:"tr",align:null},"true if value is added successfully")))),(0,l.kt)("h3",{id:"update-5"},"update"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function update(bytes32 oldValue, bytes32 newValue) external returns (bool)\n")),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"update the value with a new value and maintain indices")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"oldValue"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"is an element value in a list")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"newValue"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"new value")))),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[0]"),(0,l.kt)("td",{parentName:"tr",align:null},"bool"),(0,l.kt)("td",{parentName:"tr",align:null},"true if value is updated successfully")))),(0,l.kt)("h3",{id:"index-3"},"index"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function index(uint256 from, uint256 to) external returns (bool)\n")),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"index is used to map each element value to its index on the list")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"from"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"index is where to 'from' indexing in the list")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"to"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"index is where to stop indexing")))),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[0]"),(0,l.kt)("td",{parentName:"tr",align:null},"bool"),(0,l.kt)("td",{parentName:"tr",align:null},"true if the sub list is indexed")))),(0,l.kt)("h3",{id:"has-6"},"has"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function has(bytes32 id, bytes32 value) external view returns (bool)\n")),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"has checks whether a value is exist")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"id"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"the list identifier (the hash of list owner's address)")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"value"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"is element value in list")))),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[0]"),(0,l.kt)("td",{parentName:"tr",align:null},"bool"),(0,l.kt)("td",{parentName:"tr",align:null},"true if the value exists")))),(0,l.kt)("h3",{id:"has-7"},"has"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function has(bytes32 value) external view returns (bool)\n")),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"has checks whether a value is exist")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"value"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"is element value in list")))),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[0]"),(0,l.kt)("td",{parentName:"tr",align:null},"bool"),(0,l.kt)("td",{parentName:"tr",align:null},"true if the value exists")))),(0,l.kt)("h3",{id:"remove-3"},"remove"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function remove(bytes32 value) external returns (bool)\n")),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"remove value from a list, updates indices, and list size")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"value"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"is an element value in a list")))),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[0]"),(0,l.kt)("td",{parentName:"tr",align:null},"bool"),(0,l.kt)("td",{parentName:"tr",align:null},"true if value is removed successfully")))),(0,l.kt)("h3",{id:"get-3"},"get"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function get(bytes32 id, uint256 _index) external view returns (bytes32)\n")),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"has value by index")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"id"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"the list identifier (the hash of list owner's address)")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_index"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"is where is value is stored in the list")))),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[0]"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"the value if exists")))),(0,l.kt)("h3",{id:"size-3"},"size"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function size(bytes32 id) external view returns (uint256)\n")),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"size gets the list size")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"id"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"the list identifier (the hash of list owner's address)")))),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[0]"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"total length of the list")))),(0,l.kt)("h3",{id:"all-3"},"all"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function all(bytes32 id) external view returns (bytes32[])\n")),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"all returns all list elements")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"id"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"the list identifier (the hash of list owner's address)")))),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[0]"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32[]"),(0,l.kt)("td",{parentName:"tr",align:null},"all list elements")))),(0,l.kt)("h3",{id:"indexof-3"},"indexOf"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function indexOf(bytes32 id, bytes32 value) external view returns (uint256)\n")),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"indexOf gets the index of a value in a list")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"id"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"the list identifier (the hash of list owner's address)")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"value"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"is element value in list")))),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[0]"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"value index in list")))),(0,l.kt)("h3",{id:"ownedby-3"},"ownedBy"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function ownedBy(bytes32 id) external view returns (address)\n")),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"ownedBy gets the list owner")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"id"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"the list identifier (the hash of list owner's address)")))),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[0]"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"list owner")))),(0,l.kt)("h3",{id:"isindexed-3"},"isIndexed"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function isIndexed(bytes32 id) external view returns (bool)\n")),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"isIndexed checks if the list is indexed")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"id"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"the list identifier (the hash of list owner's address)")))),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[0]"),(0,l.kt)("td",{parentName:"tr",align:null},"bool"),(0,l.kt)("td",{parentName:"tr",align:null},"true if the list is indexed")))),(0,l.kt)("h2",{id:"neverminedtoken-1"},"NeverminedToken"),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"Implementation of a Test Token.\nTest Token is an ERC20 token only for testing purposes")),(0,l.kt)("h3",{id:"initialize-60"},"initialize"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function initialize(address _owner, address payable _initialMinter) public\n")),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"NeverminedToken Initializer\nRuns only on initial contract creation.")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_owner"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"refers to the owner of the contract")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_initialMinter"),(0,l.kt)("td",{parentName:"tr",align:null},"address payable"),(0,l.kt)("td",{parentName:"tr",align:null},"is the first token minter added")))),(0,l.kt)("h3",{id:"_beforetokentransfer-2"},"_beforeTokenTransfer"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function _beforeTokenTransfer(address from, address to, uint256 amount) internal\n")),(0,l.kt)("p",null,"_See {ERC20-_beforeTokenTransfer}."),(0,l.kt)("p",null,"Requirements:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"minted tokens must not cause the total supply to go over the cap._")),(0,l.kt)("h3",{id:"mint-12"},"mint"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function mint(address account, uint256 amount) external returns (bool)\n")),(0,l.kt)("p",null,"_Creates ",(0,l.kt)("inlineCode",{parentName:"p"},"amount")," tokens and assigns them to ",(0,l.kt)("inlineCode",{parentName:"p"},"account"),", increasing\nthe total supply."),(0,l.kt)("p",null,"Emits a {Transfer} event with ",(0,l.kt)("inlineCode",{parentName:"p"},"from")," set to the zero address."),(0,l.kt)("p",null,"Requirements:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"to")," cannot be the zero address._")),(0,l.kt)("h2",{id:"agreementstorelibrary-1"},"AgreementStoreLibrary"),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"Implementation of the Agreement Store Library.\nThe agreement store library holds the business logic\nin which manages the life cycle of SEA agreement, each\nagreement is linked to the DID of an asset, template, and\ncondition IDs.")),(0,l.kt)("h3",{id:"agreement-1"},"Agreement"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"struct Agreement {\n  bytes32 did;\n  address templateId;\n  bytes32[] conditionIds;\n  address lastUpdatedBy;\n  uint256 blockNumberUpdated;\n}\n")),(0,l.kt)("h3",{id:"agreementlist-2"},"AgreementList"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"struct AgreementList {\n  mapping(bytes32 &#x3D;&gt; struct AgreementStoreLibrary.Agreement) agreements;\n  mapping(bytes32 &#x3D;&gt; bytes32[]) didToAgreementIds;\n  mapping(address &#x3D;&gt; bytes32[]) templateIdToAgreementIds;\n  bytes32[] agreementIds;\n}\n")),(0,l.kt)("h3",{id:"create-6"},"create"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function create(struct AgreementStoreLibrary.AgreementList _self, bytes32 _id, bytes32, address _templateId, bytes32[]) internal\n")),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"create new agreement\nchecks whether the agreement Id exists, creates new agreement\ninstance, including the template, conditions and DID.")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_self"),(0,l.kt)("td",{parentName:"tr",align:null},"struct AgreementStoreLibrary.AgreementList"),(0,l.kt)("td",{parentName:"tr",align:null},"is AgreementList storage pointer")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_id"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"agreement identifier")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null}),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null})),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_templateId"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"template identifier")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null}),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32[]"),(0,l.kt)("td",{parentName:"tr",align:null})))),(0,l.kt)("h2",{id:"template-2"},"Template"),(0,l.kt)("h3",{id:"getconditiontypes-2"},"getConditionTypes"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function getConditionTypes() external view returns (address[])\n")),(0,l.kt)("h2",{id:"agreementstoremanager-5"},"AgreementStoreManager"),(0,l.kt)("p",null,"_Implementation of the Agreement Store."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"}," The agreement store generates conditions for an agreement template.\n Agreement templates must to be approved in the Template Store\n Each agreement is linked to the DID of an asset._\n")),(0,l.kt)("h3",{id:"proxy_role-5"},"PROXY_ROLE"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"bytes32 PROXY_ROLE\n")),(0,l.kt)("h3",{id:"grantproxyrole-5"},"grantProxyRole"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function grantProxyRole(address _address) public\n")),(0,l.kt)("h3",{id:"revokeproxyrole-5"},"revokeProxyRole"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function revokeProxyRole(address _address) public\n")),(0,l.kt)("h3",{id:"agreementlist-3"},"agreementList"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"struct AgreementStoreLibrary.AgreementList agreementList\n")),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"state storage for the agreements")),(0,l.kt)("h3",{id:"conditionstoremanager-4"},"conditionStoreManager"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"contract ConditionStoreManager conditionStoreManager\n")),(0,l.kt)("h3",{id:"templatestoremanager-2"},"templateStoreManager"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"contract TemplateStoreManager templateStoreManager\n")),(0,l.kt)("h3",{id:"didregistry-19"},"didRegistry"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"contract DIDRegistry didRegistry\n")),(0,l.kt)("h3",{id:"initialize-61"},"initialize"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function initialize(address _owner, address _conditionStoreManagerAddress, address _templateStoreManagerAddress, address _didRegistryAddress) public\n")),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"initialize AgreementStoreManager Initializer\nInitializes Ownable. Only on contract creation.")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_owner"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"refers to the owner of the contract")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_conditionStoreManagerAddress"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"is the address of the connected condition store")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_templateStoreManagerAddress"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"is the address of the connected template store")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_didRegistryAddress"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"is the address of the connected DID Registry")))),(0,l.kt)("h3",{id:"fullconditionid-1"},"fullConditionId"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function fullConditionId(bytes32 _agreementId, address _condType, bytes32 _valueHash) public pure returns (bytes32)\n")),(0,l.kt)("h3",{id:"agreementid-1"},"agreementId"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function agreementId(bytes32 _agreementId, address _creator) public pure returns (bytes32)\n")),(0,l.kt)("h3",{id:"createagreement-5"},"createAgreement"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function createAgreement(bytes32 _id, bytes32 _did, address[] _conditionTypes, bytes32[] _conditionIds, uint256[] _timeLocks, uint256[] _timeOuts) public\n")),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},'Create a new agreement.\nThe agreement will create conditions of conditionType with conditionId.\nOnly "approved" templates can access this function.')),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_id"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"is the ID of the new agreement. Must be unique.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_did"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"is the bytes32 DID of the asset. The DID must be registered beforehand.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_conditionTypes"),(0,l.kt)("td",{parentName:"tr",align:null},"address[]"),(0,l.kt)("td",{parentName:"tr",align:null},"is a list of addresses that point to Condition contracts.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_conditionIds"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32[]"),(0,l.kt)("td",{parentName:"tr",align:null},"is a list of bytes32 content-addressed Condition IDs")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_timeLocks"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256[]"),(0,l.kt)("td",{parentName:"tr",align:null},"is a list of uint time lock values associated to each Condition")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_timeOuts"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256[]"),(0,l.kt)("td",{parentName:"tr",align:null},"is a list of uint time out values associated to each Condition")))),(0,l.kt)("h3",{id:"createagreementargs-1"},"CreateAgreementArgs"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"struct CreateAgreementArgs {\n  bytes32 _id;\n  bytes32 _did;\n  address[] _conditionTypes;\n  bytes32[] _conditionIds;\n  uint256[] _timeLocks;\n  uint256[] _timeOuts;\n  address _creator;\n  uint256 _idx;\n  address payable _rewardAddress;\n  address _tokenAddress;\n  uint256[] _amounts;\n  address[] _receivers;\n}\n")),(0,l.kt)("h3",{id:"createagreementandpay-2"},"createAgreementAndPay"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function createAgreementAndPay(struct AgreementStoreManager.CreateAgreementArgs args) public payable\n")),(0,l.kt)("h3",{id:"createagreementandfulfill-3"},"createAgreementAndFulfill"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function createAgreementAndFulfill(bytes32 _id, bytes32 _did, address[] _conditionTypes, bytes32[] _conditionIds, uint256[] _timeLocks, uint256[] _timeOuts, address[] _account, uint256[] _idx, bytes[] params) public payable\n")),(0,l.kt)("h3",{id:"getagreementtemplate-1"},"getAgreementTemplate"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function getAgreementTemplate(bytes32 _id) external view returns (address)\n")),(0,l.kt)("h3",{id:"getdidregistryaddress-2"},"getDIDRegistryAddress"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function getDIDRegistryAddress() public view virtual returns (address)\n")),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"getDIDRegistryAddress utility function\nused by other contracts or any EOA.")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[0]"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"the DIDRegistry address")))),(0,l.kt)("h2",{id:"accesscondition-7"},"AccessCondition"),(0,l.kt)("p",null,"_Implementation of the Access Condition"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"}," Access Secret Store Condition is special condition\n where a client or Parity secret store can encrypt/decrypt documents \n based on the on-chain granted permissions. For a given DID \n document, and agreement ID, the owner/provider of the DID \n will fulfill the condition. Consequently secret store \n will check whether the permission is granted for the consumer\n in order to encrypt/decrypt the document._\n")),(0,l.kt)("h3",{id:"condition_type-24"},"CONDITION_TYPE"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"bytes32 CONDITION_TYPE\n")),(0,l.kt)("h3",{id:"documentpermission-2"},"DocumentPermission"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"struct DocumentPermission {\n  bytes32 agreementIdDeprecated;\n  mapping(address &#x3D;&gt; bool) permission;\n}\n")),(0,l.kt)("h3",{id:"documentpermissions-1"},"documentPermissions"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"mapping(bytes32 => struct AccessCondition.DocumentPermission) documentPermissions\n")),(0,l.kt)("h3",{id:"agreementstoremanager-6"},"agreementStoreManager"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"contract AgreementStoreManager agreementStoreManager\n")),(0,l.kt)("h3",{id:"didregistry-20"},"didRegistry"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"contract DIDRegistry didRegistry\n")),(0,l.kt)("h3",{id:"fulfilled-16"},"Fulfilled"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"event Fulfilled(bytes32 _agreementId, bytes32 _documentId, address _grantee, bytes32 _conditionId)\n")),(0,l.kt)("h3",{id:"onlydidownerorprovider-3"},"onlyDIDOwnerOrProvider"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"modifier onlyDIDOwnerOrProvider(bytes32 _documentId)\n")),(0,l.kt)("h3",{id:"initialize-62"},"initialize"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function initialize(address _owner, address _conditionStoreManagerAddress, address _agreementStoreManagerAddress) external\n")),(0,l.kt)("p",null,"initialize init the\ncontract with the following parameters"),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"this function is called only once during the contract\ninitialization.")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_owner"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"contract's owner account address")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_conditionStoreManagerAddress"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"condition store manager address")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_agreementStoreManagerAddress"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"agreement store manager address")))),(0,l.kt)("h3",{id:"reinitialize-2"},"reinitialize"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function reinitialize() external\n")),(0,l.kt)("p",null,"Should be called when the contract has been upgraded."),(0,l.kt)("h3",{id:"hashvalues-35"},"hashValues"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function hashValues(bytes32 _documentId, address _grantee) public pure returns (bytes32)\n")),(0,l.kt)("p",null,"hashValues generates the hash of condition inputs\nwith the following parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_documentId"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"refers to the DID in which secret store will issue the decryption keys")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_grantee"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"is the address of the granted user or the DID provider")))),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[0]"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32 hash of all these values")))),(0,l.kt)("h3",{id:"fulfill-36"},"fulfill"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function fulfill(bytes32 _agreementId, bytes32 _documentId, address _grantee) public returns (enum ConditionStoreLibrary.ConditionState)\n")),(0,l.kt)("p",null,"fulfill access secret store condition"),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"only DID owner or DID provider can call this\nmethod. Fulfill method sets the permissions\nfor the granted consumer's address to true then\nfulfill the condition")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_agreementId"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"agreement identifier")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_documentId"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"refers to the DID in which secret store will issue the decryption keys")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_grantee"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"is the address of the granted user or the DID provider")))),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[0]"),(0,l.kt)("td",{parentName:"tr",align:null},"enum ConditionStoreLibrary.ConditionState"),(0,l.kt)("td",{parentName:"tr",align:null},"condition state (Fulfilled/Aborted)")))),(0,l.kt)("h3",{id:"grantpermission-4"},"grantPermission"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function grantPermission(address _grantee, bytes32 _documentId) public\n")),(0,l.kt)("p",null,"grantPermission is called only by DID owner or provider"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_grantee"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"is the address of the granted user or the DID provider")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_documentId"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"refers to the DID in which secret store will issue the decryption keys")))),(0,l.kt)("h3",{id:"renouncepermission-2"},"renouncePermission"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function renouncePermission(address _grantee, bytes32 _documentId) public\n")),(0,l.kt)("p",null,"renouncePermission is called only by DID owner or provider"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_grantee"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"is the address of the granted user or the DID provider")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_documentId"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"refers to the DID in which secret store will issue the decryption keys")))),(0,l.kt)("h3",{id:"checkpermissions-3"},"checkPermissions"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function checkPermissions(address _grantee, bytes32 _documentId) external view returns (bool permissionGranted)\n")),(0,l.kt)("p",null,"checkPermissions is called by Parity secret store"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_grantee"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"is the address of the granted user or the DID provider")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_documentId"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"refers to the DID in which secret store will issue the decryption keys")))),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"permissionGranted"),(0,l.kt)("td",{parentName:"tr",align:null},"bool"),(0,l.kt)("td",{parentName:"tr",align:null},"true if the access was granted")))),(0,l.kt)("h2",{id:"idisputemanager-1"},"IDisputeManager"),(0,l.kt)("h3",{id:"verifyproof-2"},"verifyProof"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function verifyProof(bytes proof, uint256[] pubSignals) external view returns (bool)\n")),(0,l.kt)("h2",{id:"accessproofcondition-1"},"AccessProofCondition"),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"Implementation of the Access Condition with transfer proof.\nThe idea is that the hash of the decryption key is known before hand, and the key matching this hash\nis passed from data provider to the buyer using this smart contract. Using ZK proof the key is kept\nhidden from outsiders. For the protocol to work, both the provider and buyer need to have public keys\nin the babyjub curve. To initiate the deal, buyer will pass the key hash and the public keys of participants.\nThe provider needs to pass the cipher text encrypted using MIMC (symmetric encryption). The secret key for MIMC\nis computed using ECDH (requires one public key and one secret key for the curve). The hash function that is\nused is Poseidon.")),(0,l.kt)("h3",{id:"condition_type-25"},"CONDITION_TYPE"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"bytes32 CONDITION_TYPE\n")),(0,l.kt)("h3",{id:"agreementstoremanager-7"},"agreementStoreManager"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"contract AgreementStoreManager agreementStoreManager\n")),(0,l.kt)("h3",{id:"disputemanager-1"},"disputeManager"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"contract IDisputeManager disputeManager\n")),(0,l.kt)("h3",{id:"fulfilled-17"},"Fulfilled"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"event Fulfilled(bytes32 _agreementId, uint256 _origHash, uint256[2] _buyer, uint256[2] _provider, uint256[2] _cipher, bytes _proof, bytes32 _conditionId)\n")),(0,l.kt)("h3",{id:"initialize-63"},"initialize"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function initialize(address _owner, address _conditionStoreManagerAddress, address _agreementStoreManagerAddress, address _disputeManagerAddress) external\n")),(0,l.kt)("p",null,"initialize init the\ncontract with the following parameters"),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"this function is called only once during the contract\ninitialization.")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_owner"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"contract's owner account address")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_conditionStoreManagerAddress"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"condition store manager address")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_agreementStoreManagerAddress"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"agreement store manager address")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_disputeManagerAddress"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"dispute manager address")))),(0,l.kt)("h3",{id:"changedisputemanager-1"},"changeDisputeManager"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function changeDisputeManager(address _disputeManagerAddress) external\n")),(0,l.kt)("h3",{id:"hashvalues-36"},"hashValues"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function hashValues(uint256 _origHash, uint256[2] _buyer, uint256[2] _provider) public pure returns (bytes32)\n")),(0,l.kt)("p",null,"hashValues generates the hash of condition inputs\nwith the following parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_origHash"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"is the hash of the key")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_buyer"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256","[2]"),(0,l.kt)("td",{parentName:"tr",align:null},"buyer public key")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_provider"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256","[2]"),(0,l.kt)("td",{parentName:"tr",align:null},"provider public key")))),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[0]"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32 hash of all these values")))),(0,l.kt)("h3",{id:"fulfill-37"},"fulfill"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function fulfill(bytes32 _agreementId, uint256 _origHash, uint256[2] _buyer, uint256[2] _provider, uint256[2] _cipher, bytes _proof) public returns (enum ConditionStoreLibrary.ConditionState)\n")),(0,l.kt)("p",null,"fulfill key transfer"),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"The key with hash _origHash is transferred to the _buyer from _provider.")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_agreementId"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"associated agreement")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_origHash"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"is the hash of data to access")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_buyer"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256","[2]"),(0,l.kt)("td",{parentName:"tr",align:null},"buyer public key")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_provider"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256","[2]"),(0,l.kt)("td",{parentName:"tr",align:null},"provider public key")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_cipher"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256","[2]"),(0,l.kt)("td",{parentName:"tr",align:null},"encrypted version of the key")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_proof"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes"),(0,l.kt)("td",{parentName:"tr",align:null},"SNARK proof that the cipher text can be decrypted by buyer to give the key with hash _origHash")))),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[0]"),(0,l.kt)("td",{parentName:"tr",align:null},"enum ConditionStoreLibrary.ConditionState"),(0,l.kt)("td",{parentName:"tr",align:null},"condition state (Fulfilled/Aborted)")))),(0,l.kt)("h2",{id:"computeexecutioncondition-2"},"ComputeExecutionCondition"),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"Implementation of the Compute Execution Condition\nThis condition is meant to be a signal in which triggers\nthe execution of a compute service. The compute service is fully described\nin the associated DID document. The provider of the compute service will\nsend this signal to its workers by fulfilling the condition where\nthey are listening to the fulfilled event.")),(0,l.kt)("h3",{id:"condition_type-26"},"CONDITION_TYPE"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"bytes32 CONDITION_TYPE\n")),(0,l.kt)("h3",{id:"computeexecutionstatus-1"},"computeExecutionStatus"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"mapping(bytes32 => mapping(address => bool)) computeExecutionStatus\n")),(0,l.kt)("h3",{id:"agreementstoremanager-8"},"agreementStoreManager"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"contract AgreementStoreManager agreementStoreManager\n")),(0,l.kt)("h3",{id:"fulfilled-18"},"Fulfilled"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"event Fulfilled(bytes32 _agreementId, bytes32 _did, address _computeConsumer, bytes32 _conditionId)\n")),(0,l.kt)("h3",{id:"onlydidownerorprovider-4"},"onlyDIDOwnerOrProvider"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"modifier onlyDIDOwnerOrProvider(bytes32 _did)\n")),(0,l.kt)("h3",{id:"initialize-64"},"initialize"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function initialize(address _owner, address _conditionStoreManagerAddress, address _agreementStoreManagerAddress) external\n")),(0,l.kt)("p",null,"initialize init the\ncontract with the following parameters"),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"this function is called only once during the contract\ninitialization.")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_owner"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"contract's owner account address")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_conditionStoreManagerAddress"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"condition store manager address")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_agreementStoreManagerAddress"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"agreement store manager address")))),(0,l.kt)("h3",{id:"hashvalues-37"},"hashValues"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function hashValues(bytes32 _did, address _computeConsumer) public pure returns (bytes32)\n")),(0,l.kt)("p",null,"hashValues generates the hash of condition inputs\nwith the following parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_did"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"Decentralized Identifier (unique compute/asset resolver) describes the compute service")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_computeConsumer"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"is the consumer's address")))),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[0]"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32 hash of all these values")))),(0,l.kt)("h3",{id:"fulfill-38"},"fulfill"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function fulfill(bytes32 _agreementId, bytes32 _did, address _computeConsumer) public returns (enum ConditionStoreLibrary.ConditionState)\n")),(0,l.kt)("p",null,"fulfill compute execution condition"),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"only the compute provider can fulfill this condition. By fulfilling this\ncondition the compute provider will trigger the execution of\nthe offered job/compute. The compute service is described in a DID document.")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_agreementId"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"agreement identifier")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_did"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"Decentralized Identifier (unique compute/asset resolver) describes the compute service")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_computeConsumer"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"is the consumer's address")))),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[0]"),(0,l.kt)("td",{parentName:"tr",align:null},"enum ConditionStoreLibrary.ConditionState"),(0,l.kt)("td",{parentName:"tr",align:null},"condition state (Fulfilled/Aborted)")))),(0,l.kt)("h3",{id:"wascomputetriggered-1"},"wasComputeTriggered"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function wasComputeTriggered(bytes32 _did, address _computeConsumer) public view returns (bool)\n")),(0,l.kt)("p",null,"wasComputeTriggered checks whether the compute is triggered or not."),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_did"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"Decentralized Identifier (unique compute/asset resolver) describes the compute service")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_computeConsumer"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"is the compute consumer's address")))),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[0]"),(0,l.kt)("td",{parentName:"tr",align:null},"bool"),(0,l.kt)("td",{parentName:"tr",align:null},"true if the compute is triggered")))),(0,l.kt)("h2",{id:"condition-2"},"Condition"),(0,l.kt)("p",null,"_Implementation of the Condition"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"}," Each condition has a validation function that returns either FULFILLED, \n ABORTED or UNFULFILLED. When a condition is successfully solved, we call \n it FULFILLED. If a condition cannot be FULFILLED anymore due to a timeout \n or other types of counter-proofs, the condition is ABORTED. UNFULFILLED \n values imply that a condition has not been provably FULFILLED or ABORTED. \n All initialized conditions start out as UNFULFILLED._\n")),(0,l.kt)("h3",{id:"conditionstoremanager-5"},"conditionStoreManager"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"contract ConditionStoreManager conditionStoreManager\n")),(0,l.kt)("h3",{id:"generateid-1"},"generateId"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function generateId(bytes32 _agreementId, bytes32 _valueHash) public view returns (bytes32)\n")),(0,l.kt)("p",null,"generateId condition Id from the following\nparameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_agreementId"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"SEA agreement ID")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_valueHash"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"hash of all the condition input values")))),(0,l.kt)("h3",{id:"fulfill-39"},"fulfill"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function fulfill(bytes32 _id, enum ConditionStoreLibrary.ConditionState _newState) internal returns (enum ConditionStoreLibrary.ConditionState)\n")),(0,l.kt)("p",null,"fulfill set the condition state to Fulfill | Abort"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_id"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"condition identifier")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_newState"),(0,l.kt)("td",{parentName:"tr",align:null},"enum ConditionStoreLibrary.ConditionState"),(0,l.kt)("td",{parentName:"tr",align:null},"new condition state (Fulfill/Abort)")))),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[0]"),(0,l.kt)("td",{parentName:"tr",align:null},"enum ConditionStoreLibrary.ConditionState"),(0,l.kt)("td",{parentName:"tr",align:null},"the updated condition state")))),(0,l.kt)("h3",{id:"abortbytimeout-1"},"abortByTimeOut"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function abortByTimeOut(bytes32 _id) external returns (enum ConditionStoreLibrary.ConditionState)\n")),(0,l.kt)("p",null,"abortByTimeOut set condition state to Aborted\nif the condition is timed out"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_id"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"condition identifier")))),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[0]"),(0,l.kt)("td",{parentName:"tr",align:null},"enum ConditionStoreLibrary.ConditionState"),(0,l.kt)("td",{parentName:"tr",align:null},"the updated condition state")))),(0,l.kt)("h2",{id:"conditionstorelibrary-1"},"ConditionStoreLibrary"),(0,l.kt)("p",null,"_Implementation of the Condition Store Library."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"}," Condition is a key component in the service execution agreement. \n This library holds the logic for creating and updating condition \n Any Condition has only four state transitions starts with Uninitialized,\n Unfulfilled, Fulfilled, and Aborted. Condition state transition goes only \n forward from Unintialized -> Unfulfilled -> {Fulfilled || Aborted}_\n")),(0,l.kt)("h3",{id:"conditionstate-1"},"ConditionState"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"enum ConditionState {\n  Uninitialized,\n  Unfulfilled,\n  Fulfilled,\n  Aborted\n}\n")),(0,l.kt)("h3",{id:"condition-3"},"Condition"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"struct Condition {\n  address typeRef;\n  enum ConditionStoreLibrary.ConditionState state;\n  address createdBy;\n  address lastUpdatedBy;\n  uint256 blockNumberUpdated;\n}\n")),(0,l.kt)("h3",{id:"conditionlist-2"},"ConditionList"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"struct ConditionList {\n  mapping(bytes32 &#x3D;&gt; struct ConditionStoreLibrary.Condition) conditions;\n  mapping(bytes32 &#x3D;&gt; mapping(bytes32 &#x3D;&gt; bytes32)) map;\n  bytes32[] conditionIds;\n}\n")),(0,l.kt)("h3",{id:"create-7"},"create"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function create(struct ConditionStoreLibrary.ConditionList _self, bytes32 _id, address _typeRef) internal\n")),(0,l.kt)("p",null,"create new condition"),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"check whether the condition exists, assigns\ncondition type, condition state, last updated by,\nand update at (which is the current block number)")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_self"),(0,l.kt)("td",{parentName:"tr",align:null},"struct ConditionStoreLibrary.ConditionList"),(0,l.kt)("td",{parentName:"tr",align:null},"is the ConditionList storage pointer")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_id"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"valid condition identifier")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_typeRef"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"condition contract address")))),(0,l.kt)("h3",{id:"updatestate-1"},"updateState"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function updateState(struct ConditionStoreLibrary.ConditionList _self, bytes32 _id, enum ConditionStoreLibrary.ConditionState _newState) internal\n")),(0,l.kt)("p",null,"updateState update the condition state"),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"check whether the condition state transition is right,\nassign the new state, update last updated by and\nupdated at.")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_self"),(0,l.kt)("td",{parentName:"tr",align:null},"struct ConditionStoreLibrary.ConditionList"),(0,l.kt)("td",{parentName:"tr",align:null},"is the ConditionList storage pointer")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_id"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"condition identifier")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_newState"),(0,l.kt)("td",{parentName:"tr",align:null},"enum ConditionStoreLibrary.ConditionState"),(0,l.kt)("td",{parentName:"tr",align:null},"the new state of the condition")))),(0,l.kt)("h3",{id:"updatekeyvalue-1"},"updateKeyValue"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function updateKeyValue(struct ConditionStoreLibrary.ConditionList _self, bytes32 _id, bytes32 _key, bytes32 _value) internal\n")),(0,l.kt)("h2",{id:"conditionstoremanager-6"},"ConditionStoreManager"),(0,l.kt)("p",null,"_Implementation of the Condition Store Manager."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"}," Condition store manager is responsible for enforcing the \n the business logic behind creating/updating the condition state\n based on the assigned role to each party. Only specific type of\n contracts are allowed to call this contract, therefore there are \n two types of roles, create role that in which is able to create conditions.\n The second role is the update role, which is can update the condition state.\n Also, it support delegating the roles to other contract(s)/account(s)._\n")),(0,l.kt)("h3",{id:"proxy_role-6"},"PROXY_ROLE"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"bytes32 PROXY_ROLE\n")),(0,l.kt)("h3",{id:"roletype-1"},"RoleType"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"enum RoleType {\n  Create,\n  Update\n}\n")),(0,l.kt)("h3",{id:"createrole-1"},"createRole"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"address createRole\n")),(0,l.kt)("h3",{id:"conditionlist-3"},"conditionList"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"struct ConditionStoreLibrary.ConditionList conditionList\n")),(0,l.kt)("h3",{id:"epochlist-3"},"epochList"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"struct EpochLibrary.EpochList epochList\n")),(0,l.kt)("h3",{id:"nvmconfigaddress-1"},"nvmConfigAddress"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"address nvmConfigAddress\n")),(0,l.kt)("h3",{id:"conditioncreated-1"},"ConditionCreated"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"event ConditionCreated(bytes32 _id, address _typeRef, address _who)\n")),(0,l.kt)("h3",{id:"conditionupdated-1"},"ConditionUpdated"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"event ConditionUpdated(bytes32 _id, address _typeRef, enum ConditionStoreLibrary.ConditionState _state, address _who)\n")),(0,l.kt)("h3",{id:"onlycreaterole-1"},"onlyCreateRole"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"modifier onlyCreateRole()\n")),(0,l.kt)("h3",{id:"onlyupdaterole-1"},"onlyUpdateRole"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"modifier onlyUpdateRole(bytes32 _id)\n")),(0,l.kt)("h3",{id:"onlyvalidtype-1"},"onlyValidType"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"modifier onlyValidType(address typeRef)\n")),(0,l.kt)("h3",{id:"initialize-65"},"initialize"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function initialize(address _creator, address _owner, address _nvmConfigAddress) public\n")),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"initialize ConditionStoreManager Initializer\nInitialize Ownable. Only on contract creation,")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_creator"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"refers to the creator of the contract")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_owner"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"refers to the owner of the contract")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_nvmConfigAddress"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"refers to the contract address of ",(0,l.kt)("inlineCode",{parentName:"td"},"NeverminedConfig"))))),(0,l.kt)("h3",{id:"getcreaterole-1"},"getCreateRole"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function getCreateRole() external view returns (address)\n")),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"getCreateRole get the address of contract\nwhich has the create role")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[0]"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"create condition role address")))),(0,l.kt)("h3",{id:"getnvmconfigaddress-1"},"getNvmConfigAddress"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function getNvmConfigAddress() external view returns (address)\n")),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"getNvmConfigAddress get the address of the NeverminedConfig contract")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[0]"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"NeverminedConfig contract address")))),(0,l.kt)("h3",{id:"setnvmconfigaddress-1"},"setNvmConfigAddress"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function setNvmConfigAddress(address _addr) external\n")),(0,l.kt)("h3",{id:"delegatecreaterole-1"},"delegateCreateRole"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function delegateCreateRole(address delegatee) external\n")),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"delegateCreateRole only owner can delegate the\ncreate condition role to a different address")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"delegatee"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"delegatee address")))),(0,l.kt)("h3",{id:"delegateupdaterole-1"},"delegateUpdateRole"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function delegateUpdateRole(bytes32 _id, address delegatee) external\n")),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"delegateUpdateRole only owner can delegate\nthe update role to a different address for\nspecific condition Id which has the create role")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_id"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null})),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"delegatee"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"delegatee address")))),(0,l.kt)("h3",{id:"grantproxyrole-6"},"grantProxyRole"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function grantProxyRole(address _address) public\n")),(0,l.kt)("h3",{id:"revokeproxyrole-6"},"revokeProxyRole"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function revokeProxyRole(address _address) public\n")),(0,l.kt)("h3",{id:"createcondition-3"},"createCondition"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function createCondition(bytes32 _id, address _typeRef) external\n")),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"createCondition only called by create role address\nthe condition should use a valid condition contract\naddress, valid time lock and timeout. Moreover, it\nenforce the condition state transition from\nUninitialized to Unfulfilled.")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_id"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"unique condition identifier")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_typeRef"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"condition contract address")))),(0,l.kt)("h3",{id:"createcondition2-1"},"createCondition2"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function createCondition2(bytes32 _id, address _typeRef) external\n")),(0,l.kt)("h3",{id:"createcondition-4"},"createCondition"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function createCondition(bytes32 _id, address _typeRef, uint256 _timeLock, uint256 _timeOut) public\n")),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"createCondition only called by create role address\nthe condition should use a valid condition contract\naddress, valid time lock and timeout. Moreover, it\nenforce the condition state transition from\nUninitialized to Unfulfilled.")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_id"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"unique condition identifier")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_typeRef"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"condition contract address")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_timeLock"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"start of the time window")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_timeOut"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"end of the time window")))),(0,l.kt)("h3",{id:"updateconditionstate-1"},"updateConditionState"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function updateConditionState(bytes32 _id, enum ConditionStoreLibrary.ConditionState _newState) external returns (enum ConditionStoreLibrary.ConditionState)\n")),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"updateConditionState only called by update role address.\nIt enforce the condition state transition to either\nFulfill or Aborted state")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_id"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"unique condition identifier")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_newState"),(0,l.kt)("td",{parentName:"tr",align:null},"enum ConditionStoreLibrary.ConditionState"),(0,l.kt)("td",{parentName:"tr",align:null})))),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[0]"),(0,l.kt)("td",{parentName:"tr",align:null},"enum ConditionStoreLibrary.ConditionState"),(0,l.kt)("td",{parentName:"tr",align:null},"the current condition state")))),(0,l.kt)("h3",{id:"updateconditionmapping-1"},"updateConditionMapping"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function updateConditionMapping(bytes32 _id, bytes32 _key, bytes32 _value) external\n")),(0,l.kt)("h3",{id:"updateconditionmappingproxy-1"},"updateConditionMappingProxy"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function updateConditionMappingProxy(bytes32 _id, bytes32 _key, bytes32 _value) external\n")),(0,l.kt)("h3",{id:"getcondition-1"},"getCondition"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function getCondition(bytes32 _id) external view returns (address typeRef, enum ConditionStoreLibrary.ConditionState state, uint256 timeLock, uint256 timeOut, uint256 blockNumber)\n")),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"getCondition")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"typeRef"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"the type reference")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"state"),(0,l.kt)("td",{parentName:"tr",align:null},"enum ConditionStoreLibrary.ConditionState"),(0,l.kt)("td",{parentName:"tr",align:null},"condition state")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"timeLock"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"the time lock")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"timeOut"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"time out")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"blockNumber"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"block number")))),(0,l.kt)("h3",{id:"getconditionstate-2"},"getConditionState"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function getConditionState(bytes32 _id) external view virtual returns (enum ConditionStoreLibrary.ConditionState)\n")),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"getConditionState")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[0]"),(0,l.kt)("td",{parentName:"tr",align:null},"enum ConditionStoreLibrary.ConditionState"),(0,l.kt)("td",{parentName:"tr",align:null},"condition state")))),(0,l.kt)("h3",{id:"getconditiontyperef-1"},"getConditionTypeRef"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function getConditionTypeRef(bytes32 _id) external view virtual returns (address)\n")),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"getConditionTypeRef")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[0]"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"condition typeRef")))),(0,l.kt)("h3",{id:"getmappingvalue-1"},"getMappingValue"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function getMappingValue(bytes32 _id, bytes32 _key) external view virtual returns (bytes32)\n")),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"getConditionState")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[0]"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"condition state")))),(0,l.kt)("h3",{id:"isconditiontimelocked-1"},"isConditionTimeLocked"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function isConditionTimeLocked(bytes32 _id) public view returns (bool)\n")),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"isConditionTimeLocked")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[0]"),(0,l.kt)("td",{parentName:"tr",align:null},"bool"),(0,l.kt)("td",{parentName:"tr",align:null},"whether the condition is timedLock ended")))),(0,l.kt)("h3",{id:"isconditiontimedout-1"},"isConditionTimedOut"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function isConditionTimedOut(bytes32 _id) public view returns (bool)\n")),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"isConditionTimedOut")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[0]"),(0,l.kt)("td",{parentName:"tr",align:null},"bool"),(0,l.kt)("td",{parentName:"tr",align:null},"whether the condition is timed out")))),(0,l.kt)("h2",{id:"hashlockcondition-1"},"HashLockCondition"),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"Implementation of the Hash Lock Condition")),(0,l.kt)("h3",{id:"condition_type-27"},"CONDITION_TYPE"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"bytes32 CONDITION_TYPE\n")),(0,l.kt)("h3",{id:"initialize-66"},"initialize"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function initialize(address _owner, address _conditionStoreManagerAddress) external\n")),(0,l.kt)("p",null,"initialize init the\ncontract with the following parameters"),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"this function is called only once during the contract\ninitialization.")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_owner"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"contract's owner account address")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_conditionStoreManagerAddress"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"condition store manager address")))),(0,l.kt)("h3",{id:"hashvalues-38"},"hashValues"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function hashValues(uint256 _preimage) public pure returns (bytes32)\n")),(0,l.kt)("p",null,"hashValues generates the hash of condition inputs\nwith the following parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_preimage"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"refers uint value of the hash pre-image.")))),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[0]"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32 hash of all these values")))),(0,l.kt)("h3",{id:"hashvalues-39"},"hashValues"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function hashValues(string _preimage) public pure returns (bytes32)\n")),(0,l.kt)("p",null,"hashValues generates the hash of condition inputs\nwith the following parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_preimage"),(0,l.kt)("td",{parentName:"tr",align:null},"string"),(0,l.kt)("td",{parentName:"tr",align:null},"refers string value of the hash pre-image.")))),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[0]"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32 hash of all these values")))),(0,l.kt)("h3",{id:"hashvalues-40"},"hashValues"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function hashValues(bytes32 _preimage) public pure returns (bytes32)\n")),(0,l.kt)("p",null,"hashValues generates the hash of condition inputs\nwith the following parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_preimage"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"refers bytes32 value of the hash pre-image.")))),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[0]"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32 hash of all these values")))),(0,l.kt)("h3",{id:"fulfill-40"},"fulfill"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function fulfill(bytes32 _agreementId, uint256 _preimage) external returns (enum ConditionStoreLibrary.ConditionState)\n")),(0,l.kt)("p",null,"fulfill the condition by calling check the\nthe hash and the pre-image uint value"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_agreementId"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"SEA agreement identifier")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_preimage"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null})))),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[0]"),(0,l.kt)("td",{parentName:"tr",align:null},"enum ConditionStoreLibrary.ConditionState"),(0,l.kt)("td",{parentName:"tr",align:null},"condition state")))),(0,l.kt)("h3",{id:"fulfill-41"},"fulfill"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function fulfill(bytes32 _agreementId, string _preimage) public returns (enum ConditionStoreLibrary.ConditionState)\n")),(0,l.kt)("p",null,"fulfill the condition by calling check the\nthe hash and the pre-image string value"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_agreementId"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"SEA agreement identifier")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_preimage"),(0,l.kt)("td",{parentName:"tr",align:null},"string"),(0,l.kt)("td",{parentName:"tr",align:null})))),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[0]"),(0,l.kt)("td",{parentName:"tr",align:null},"enum ConditionStoreLibrary.ConditionState"),(0,l.kt)("td",{parentName:"tr",align:null},"condition state")))),(0,l.kt)("h3",{id:"fulfill-42"},"fulfill"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function fulfill(bytes32 _agreementId, bytes32 _preimage) external returns (enum ConditionStoreLibrary.ConditionState)\n")),(0,l.kt)("p",null,"fulfill the condition by calling check the\nthe hash and the pre-image bytes32 value"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_agreementId"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"SEA agreement identifier")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_preimage"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null})))),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[0]"),(0,l.kt)("td",{parentName:"tr",align:null},"enum ConditionStoreLibrary.ConditionState"),(0,l.kt)("td",{parentName:"tr",align:null},"condition state")))),(0,l.kt)("h3",{id:"_fulfill-1"},"_fulfill"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function _fulfill(bytes32 _generatedId) private returns (enum ConditionStoreLibrary.ConditionState)\n")),(0,l.kt)("p",null,"_fulfill calls super fulfil method"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_generatedId"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"SEA agreement identifier")))),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[0]"),(0,l.kt)("td",{parentName:"tr",align:null},"enum ConditionStoreLibrary.ConditionState"),(0,l.kt)("td",{parentName:"tr",align:null},"condition state")))),(0,l.kt)("h2",{id:"icondition-1"},"ICondition"),(0,l.kt)("h3",{id:"fulfillproxy-4"},"fulfillProxy"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function fulfillProxy(address _account, bytes32 _agreementId, bytes params) external payable\n")),(0,l.kt)("h2",{id:"ilockpayment-1"},"ILockPayment"),(0,l.kt)("h3",{id:"fulfilled-19"},"Fulfilled"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"event Fulfilled(bytes32 _agreementId, bytes32 _did, bytes32 _conditionId, address _rewardAddress, address _tokenAddress, address[] _receivers, uint256[] _amounts)\n")),(0,l.kt)("h3",{id:"hashvalues-41"},"hashValues"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function hashValues(bytes32 _did, address _rewardAddress, address _tokenAddress, uint256[] _amounts, address[] _receivers) external pure returns (bytes32)\n")),(0,l.kt)("p",null,"hashValues generates the hash of condition inputs\nwith the following parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_did"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"the asset decentralized identifier")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_rewardAddress"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"the contract address where the reward is locked")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_tokenAddress"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"the ERC20 contract address to use during the lock payment.         If the address is 0x0 means we won't use a ERC20 but ETH for payment")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_amounts"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256[]"),(0,l.kt)("td",{parentName:"tr",align:null},"token amounts to be locked/released")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_receivers"),(0,l.kt)("td",{parentName:"tr",align:null},"address[]"),(0,l.kt)("td",{parentName:"tr",align:null},"receiver's addresses")))),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[0]"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32 hash of all these values")))),(0,l.kt)("h3",{id:"fulfill-43"},"fulfill"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function fulfill(bytes32 _agreementId, bytes32 _did, address payable _rewardAddress, address _tokenAddress, uint256[] _amounts, address[] _receivers) external payable returns (enum ConditionStoreLibrary.ConditionState)\n")),(0,l.kt)("p",null,"fulfill requires valid token transfer in order\nto lock the amount of tokens based on the SEA"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_agreementId"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"the agreement identifier")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_did"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"the asset decentralized identifier")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_rewardAddress"),(0,l.kt)("td",{parentName:"tr",align:null},"address payable"),(0,l.kt)("td",{parentName:"tr",align:null},"the contract address where the reward is locked")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_tokenAddress"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"the ERC20 contract address to use during the lock payment.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_amounts"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256[]"),(0,l.kt)("td",{parentName:"tr",align:null},"token amounts to be locked/released")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_receivers"),(0,l.kt)("td",{parentName:"tr",align:null},"address[]"),(0,l.kt)("td",{parentName:"tr",align:null},"receiver's addresses")))),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[0]"),(0,l.kt)("td",{parentName:"tr",align:null},"enum ConditionStoreLibrary.ConditionState"),(0,l.kt)("td",{parentName:"tr",align:null},"condition state")))),(0,l.kt)("h2",{id:"lockpaymentcondition-6"},"LockPaymentCondition"),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"Implementation of the Lock Payment Condition\nThis condition allows to lock payment for multiple receivers taking\ninto account the royalties to be paid to the original creators in a secondary market.")),(0,l.kt)("h3",{id:"didregistry-21"},"didRegistry"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"contract DIDRegistry didRegistry\n")),(0,l.kt)("h3",{id:"nvmconfig-1"},"nvmConfig"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"contract INVMConfig nvmConfig\n")),(0,l.kt)("h3",{id:"condition_type-28"},"CONDITION_TYPE"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"bytes32 CONDITION_TYPE\n")),(0,l.kt)("h3",{id:"key_asset_receiver-1"},"KEY_ASSET_RECEIVER"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"bytes32 KEY_ASSET_RECEIVER\n")),(0,l.kt)("h3",{id:"proxy_role-7"},"PROXY_ROLE"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"bytes32 PROXY_ROLE\n")),(0,l.kt)("h3",{id:"allowed_external_contract_role-1"},"ALLOWED_EXTERNAL_CONTRACT_ROLE"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"bytes32 ALLOWED_EXTERNAL_CONTRACT_ROLE\n")),(0,l.kt)("h3",{id:"grantproxyrole-7"},"grantProxyRole"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function grantProxyRole(address _address) public\n")),(0,l.kt)("h3",{id:"revokeproxyrole-7"},"revokeProxyRole"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function revokeProxyRole(address _address) public\n")),(0,l.kt)("h3",{id:"grantexternalcontractrole-1"},"grantExternalContractRole"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function grantExternalContractRole(address _address) public\n")),(0,l.kt)("h3",{id:"revokeexternalcontractrole-1"},"revokeExternalContractRole"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function revokeExternalContractRole(address _address) public\n")),(0,l.kt)("h3",{id:"initialize-67"},"initialize"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function initialize(address _owner, address _conditionStoreManagerAddress, address _didRegistryAddress) external\n")),(0,l.kt)("p",null,"initialize init the contract with the following parameters"),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"this function is called only once during the contract initialization.")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_owner"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"contract's owner account address")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_conditionStoreManagerAddress"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"condition store manager address")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_didRegistryAddress"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"DID Registry address")))),(0,l.kt)("h3",{id:"reinitialize-3"},"reinitialize"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function reinitialize() external\n")),(0,l.kt)("p",null,"Should be called when the contract has been upgraded."),(0,l.kt)("h3",{id:"hashvalues-42"},"hashValues"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function hashValues(bytes32 _did, address _rewardAddress, address _tokenAddress, uint256[] _amounts, address[] _receivers) public pure returns (bytes32)\n")),(0,l.kt)("p",null,"hashValues generates the hash of condition inputs\nwith the following parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_did"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"the asset decentralized identifier")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_rewardAddress"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"the contract address where the reward is locked")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_tokenAddress"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"the ERC20 contract address to use during the lock payment.         If the address is 0x0 means we won't use a ERC20 but ETH for payment")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_amounts"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256[]"),(0,l.kt)("td",{parentName:"tr",align:null},"token amounts to be locked/released")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_receivers"),(0,l.kt)("td",{parentName:"tr",align:null},"address[]"),(0,l.kt)("td",{parentName:"tr",align:null},"receiver's addresses")))),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[0]"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32 hash of all these values")))),(0,l.kt)("h3",{id:"fulfill-44"},"fulfill"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function fulfill(bytes32 _agreementId, bytes32 _did, address payable _rewardAddress, address _tokenAddress, uint256[] _amounts, address[] _receivers) external payable returns (enum ConditionStoreLibrary.ConditionState)\n")),(0,l.kt)("p",null,"fulfill requires valid token transfer in order\nto lock the amount of tokens based on the SEA"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_agreementId"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"the agreement identifier")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_did"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"the asset decentralized identifier")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_rewardAddress"),(0,l.kt)("td",{parentName:"tr",align:null},"address payable"),(0,l.kt)("td",{parentName:"tr",align:null},"the contract address where the reward is locked")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_tokenAddress"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"the ERC20 contract address to use during the lock payment.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_amounts"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256[]"),(0,l.kt)("td",{parentName:"tr",align:null},"token amounts to be locked/released")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_receivers"),(0,l.kt)("td",{parentName:"tr",align:null},"address[]"),(0,l.kt)("td",{parentName:"tr",align:null},"receiver's addresses")))),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[0]"),(0,l.kt)("td",{parentName:"tr",align:null},"enum ConditionStoreLibrary.ConditionState"),(0,l.kt)("td",{parentName:"tr",align:null},"condition state")))),(0,l.kt)("h3",{id:"fulfillexternal-1"},"fulfillExternal"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function fulfillExternal(bytes32 _agreementId, bytes32 _did, address payable _rewardAddress, address _externalContract, bytes32 _remoteId, uint256[] _amounts, address[] _receivers) external payable returns (enum ConditionStoreLibrary.ConditionState)\n")),(0,l.kt)("p",null,"fulfill lock condition using the funds locked in an external contract\n(auction, bonding curve, lottery, etc)"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_agreementId"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"the agreement identifier")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_did"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"the asset decentralized identifier")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_rewardAddress"),(0,l.kt)("td",{parentName:"tr",align:null},"address payable"),(0,l.kt)("td",{parentName:"tr",align:null},"the contract address where the reward is locked")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_externalContract"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"the address of the contract with the lock funds are locked")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_remoteId"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"the id used to identify into the external contract")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_amounts"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256[]"),(0,l.kt)("td",{parentName:"tr",align:null},"token amounts to be locked/released")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_receivers"),(0,l.kt)("td",{parentName:"tr",align:null},"address[]"),(0,l.kt)("td",{parentName:"tr",align:null},"receiver's addresses")))),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[0]"),(0,l.kt)("td",{parentName:"tr",align:null},"enum ConditionStoreLibrary.ConditionState"),(0,l.kt)("td",{parentName:"tr",align:null},"condition state")))),(0,l.kt)("h3",{id:"encodeparams-4"},"encodeParams"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function encodeParams(bytes32 _did, address payable _rewardAddress, address _tokenAddress, uint256[] _amounts, address[] _receivers) external pure returns (bytes)\n")),(0,l.kt)("h3",{id:"fulfillinternal-3"},"fulfillInternal"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function fulfillInternal(address _account, bytes32 _agreementId, bytes32 _did, address payable _rewardAddress, address _tokenAddress, uint256[] _amounts, address[] _receivers) internal returns (enum ConditionStoreLibrary.ConditionState)\n")),(0,l.kt)("h3",{id:"fulfillproxy-5"},"fulfillProxy"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function fulfillProxy(address _account, bytes32 _agreementId, bytes params) external payable\n")),(0,l.kt)("h3",{id:"_transfererc20proxy-1"},"_transferERC20Proxy"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function _transferERC20Proxy(address _senderAddress, address _rewardAddress, address _tokenAddress, uint256 _amount) internal\n")),(0,l.kt)("p",null,"_transferERC20Proxy transfer ERC20 tokens"),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"Will throw if transfer fails")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_senderAddress"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"the address to send the tokens from")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_rewardAddress"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"the address to receive the tokens")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_tokenAddress"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"the ERC20 contract address to use during the payment")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_amount"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"token amount to be locked/released")))),(0,l.kt)("h3",{id:"_transfereth-1"},"_transferETH"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function _transferETH(address payable _rewardAddress, uint256 _amount) internal\n")),(0,l.kt)("p",null,"_transferETH transfer ETH"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_rewardAddress"),(0,l.kt)("td",{parentName:"tr",align:null},"address payable"),(0,l.kt)("td",{parentName:"tr",align:null},"the address to receive the ETH")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_amount"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"ETH amount to be locked/released")))),(0,l.kt)("h3",{id:"allowedexternalcontract-1"},"allowedExternalContract"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"modifier allowedExternalContract(address _externalContractAddress)\n")),(0,l.kt)("h3",{id:"aremarketplacefeesincluded-1"},"areMarketplaceFeesIncluded"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function areMarketplaceFeesIncluded(uint256[] _amounts, address[] _receivers) internal view returns (bool)\n")),(0,l.kt)("h2",{id:"distributenftcollateralcondition-1"},"DistributeNFTCollateralCondition"),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"Implementation of a condition allowing to transfer a NFT\nto an account or another depending on the final state of a lock condition")),(0,l.kt)("h3",{id:"condition_type-29"},"CONDITION_TYPE"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"bytes32 CONDITION_TYPE\n")),(0,l.kt)("h3",{id:"aavecreditvault-6"},"aaveCreditVault"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"contract AaveCreditVault aaveCreditVault\n")),(0,l.kt)("h3",{id:"_lockconditionaddress-2"},"_lockConditionAddress"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"address _lockConditionAddress\n")),(0,l.kt)("h3",{id:"fulfilled-20"},"Fulfilled"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"event Fulfilled(bytes32 _agreementId, bytes32 _did, address _receiver, bytes32 _conditionId, address _contract)\n")),(0,l.kt)("h3",{id:"initialize-68"},"initialize"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function initialize(address _owner, address _conditionStoreManagerAddress, address _lockNFTConditionAddress) external\n")),(0,l.kt)("p",null,"initialize init the contract with the following parameters"),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"this function is called only once during the contract\ninitialization.")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_owner"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"contract's owner account address")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_conditionStoreManagerAddress"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"condition store manager address")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_lockNFTConditionAddress"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"Lock NFT Condition address")))),(0,l.kt)("h3",{id:"hashvalues-43"},"hashValues"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function hashValues(bytes32 _did, address _vaultAddress, address _nftContractAddress) public pure returns (bytes32)\n")),(0,l.kt)("p",null,"hashValues generates the hash of condition inputs\nwith the following parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_did"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"refers to the DID in which secret store will issue the decryption keys")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_vaultAddress"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"The contract address of the vault")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_nftContractAddress"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"NFT contract to use")))),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[0]"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32 hash of all these values")))),(0,l.kt)("h3",{id:"fulfill-45"},"fulfill"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function fulfill(bytes32 _agreementId, bytes32 _did, address _vaultAddress, address _nftContractAddress) public returns (enum ConditionStoreLibrary.ConditionState)\n")),(0,l.kt)("p",null,"fulfill the transfer NFT condition"),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"Fulfill method transfer a certain amount of NFTs\nto the _nftReceiver address.\nWhen true then fulfill the condition")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_agreementId"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"agreement identifier")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_did"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"refers to the DID in which secret store will issue the decryption keys")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_vaultAddress"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"The contract address of the vault")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_nftContractAddress"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"NFT contract to use")))),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[0]"),(0,l.kt)("td",{parentName:"tr",align:null},"enum ConditionStoreLibrary.ConditionState"),(0,l.kt)("td",{parentName:"tr",align:null},"condition state (Fulfilled/Aborted)")))),(0,l.kt)("h2",{id:"inftaccess-1"},"INFTAccess"),(0,l.kt)("h3",{id:"fulfilled-21"},"Fulfilled"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"event Fulfilled(bytes32 _agreementId, bytes32 _documentId, address _grantee, bytes32 _conditionId)\n")),(0,l.kt)("h3",{id:"hashvalues-44"},"hashValues"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function hashValues(bytes32 _documentId, address _grantee, address _contractAddress) external pure returns (bytes32)\n")),(0,l.kt)("p",null,"hashValues generates the hash of condition inputs\nwith the following parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_documentId"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"refers to the DID in which secret store will issue the decryption keys")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_grantee"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"is the address of the granted user or the DID provider")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_contractAddress"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"contract address holding the NFT (ERC-721) or the NFT Factory (ERC-1155)")))),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[0]"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32 hash of all these values")))),(0,l.kt)("h3",{id:"fulfill-46"},"fulfill"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function fulfill(bytes32 _agreementId, bytes32 _documentId, address _grantee, address _contractAddress) external returns (enum ConditionStoreLibrary.ConditionState)\n")),(0,l.kt)("p",null,"fulfill NFT Access conditions"),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"only DID owner or DID provider can call this\nmethod. Fulfill method sets the permissions\nfor the granted consumer's address to true then\nfulfill the condition")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_agreementId"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"agreement identifier")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_documentId"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"refers to the DID in which secret store will issue the decryption keys")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_grantee"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"is the address of the granted user or the DID provider")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_contractAddress"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"contract address holding the NFT (ERC-721) or the NFT Factory (ERC-1155)")))),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[0]"),(0,l.kt)("td",{parentName:"tr",align:null},"enum ConditionStoreLibrary.ConditionState"),(0,l.kt)("td",{parentName:"tr",align:null},"condition state (Fulfilled/Aborted)")))),(0,l.kt)("h2",{id:"inftholder-1"},"INFTHolder"),(0,l.kt)("h3",{id:"fulfilled-22"},"Fulfilled"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"event Fulfilled(bytes32 _agreementId, bytes32 _did, address _address, bytes32 _conditionId, uint256 _amount)\n")),(0,l.kt)("h3",{id:"hashvalues-45"},"hashValues"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function hashValues(bytes32 _did, address _holderAddress, uint256 _amount, address _contractAddress) external pure returns (bytes32)\n")),(0,l.kt)("p",null,"hashValues generates the hash of condition inputs\nwith the following parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_did"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"the Decentralized Identifier of the asset")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_holderAddress"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"the address of the NFT holder")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_amount"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"is the amount NFTs that need to be hold by the holder")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_contractAddress"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"contract address holding the NFT (ERC-721) or the NFT Factory (ERC-1155)")))),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[0]"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32 hash of all these values")))),(0,l.kt)("h3",{id:"fulfill-47"},"fulfill"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function fulfill(bytes32 _agreementId, bytes32 _did, address _holderAddress, uint256 _amount, address _contractAddress) external returns (enum ConditionStoreLibrary.ConditionState)\n")),(0,l.kt)("p",null,"fulfill requires a validation that holder has enough\nNFTs for a specific DID"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_agreementId"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"SEA agreement identifier")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_did"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"the Decentralized Identifier of the asset")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_holderAddress"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"the contract address where the reward is locked")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_amount"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"is the amount of NFT to be hold")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_contractAddress"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"contract address holding the NFT (ERC-721) or the NFT Factory (ERC-1155)")))),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[0]"),(0,l.kt)("td",{parentName:"tr",align:null},"enum ConditionStoreLibrary.ConditionState"),(0,l.kt)("td",{parentName:"tr",align:null},"condition state")))),(0,l.kt)("h2",{id:"inftlock-1"},"INFTLock"),(0,l.kt)("h3",{id:"fulfilled-23"},"Fulfilled"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"event Fulfilled(bytes32 _agreementId, bytes32 _did, address _lockAddress, bytes32 _conditionId, uint256 _amount, address _receiver, address _nftContractAddress)\n")),(0,l.kt)("h3",{id:"hashvalues-46"},"hashValues"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function hashValues(bytes32 _did, address _lockAddress, uint256 _amount, address _nftContractAddress) external pure returns (bytes32)\n")),(0,l.kt)("p",null,"hashValues generates the hash of condition inputs\nwith the following parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_did"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"the DID of the asset with NFTs attached to lock")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_lockAddress"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"the contract address where the NFT will be locked")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_amount"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"is the amount of the NFTs locked")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_nftContractAddress"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"Is the address of the NFT (ERC-721, ERC-1155) contract to use")))),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[0]"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32 hash of all these values")))),(0,l.kt)("h3",{id:"hashvaluesmarked-3"},"hashValuesMarked"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function hashValuesMarked(bytes32 _did, address _lockAddress, uint256 _amount, address _receiver, address _nftContractAddress) external pure returns (bytes32)\n")),(0,l.kt)("h3",{id:"fulfill-48"},"fulfill"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function fulfill(bytes32 _agreementId, bytes32 _did, address _lockAddress, uint256 _amount, address _nftContractAddress) external returns (enum ConditionStoreLibrary.ConditionState)\n")),(0,l.kt)("p",null,"fulfill the transfer NFT condition"),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"Fulfill method transfer a certain amount of NFTs\nto the _nftReceiver address.\nWhen true then fulfill the condition")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_agreementId"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"agreement identifier")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_did"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"refers to the DID in which secret store will issue the decryption keys")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_lockAddress"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"the contract address where the NFT will be locked")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_amount"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"is the amount of the locked tokens")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_nftContractAddress"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"Is the address of the NFT (ERC-721) contract to use")))),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[0]"),(0,l.kt)("td",{parentName:"tr",align:null},"enum ConditionStoreLibrary.ConditionState"),(0,l.kt)("td",{parentName:"tr",align:null},"condition state (Fulfilled/Aborted)")))),(0,l.kt)("h3",{id:"fulfillmarked-3"},"fulfillMarked"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function fulfillMarked(bytes32 _agreementId, bytes32 _did, address _lockAddress, uint256 _amount, address _receiver, address _nftContractAddress) external returns (enum ConditionStoreLibrary.ConditionState)\n")),(0,l.kt)("h2",{id:"itransfernft-1"},"ITransferNFT"),(0,l.kt)("h3",{id:"fulfilled-24"},"Fulfilled"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"event Fulfilled(bytes32 _agreementId, bytes32 _did, address _receiver, uint256 _amount, bytes32 _conditionId, address _contract)\n")),(0,l.kt)("h3",{id:"hashvalues-47"},"hashValues"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function hashValues(bytes32 _did, address _nftHolder, address _nftReceiver, uint256 _nftAmount, bytes32 _lockCondition, address _contract, bool _transfer) external pure returns (bytes32)\n")),(0,l.kt)("p",null,"hashValues generates the hash of condition inputs\nwith the following parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_did"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"refers to the DID in which secret store will issue the decryption keys")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_nftHolder"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null})),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_nftReceiver"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"is the address of the granted user or the DID provider")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_nftAmount"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"amount of NFTs to transfer")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_lockCondition"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"lock condition identifier")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_contract"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null})),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_transfer"),(0,l.kt)("td",{parentName:"tr",align:null},"bool"),(0,l.kt)("td",{parentName:"tr",align:null},"Indicates if the NFT will be transferred (true) or minted (false)")))),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[0]"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32 hash of all these values")))),(0,l.kt)("h3",{id:"fulfill-49"},"fulfill"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function fulfill(bytes32 _agreementId, bytes32 _did, address _nftReceiver, uint256 _nftAmount, bytes32 _lockPaymentCondition, address _contract, bool _transfer) external returns (enum ConditionStoreLibrary.ConditionState)\n")),(0,l.kt)("p",null,"fulfill the transfer NFT condition"),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"Fulfill method transfer a certain amount of NFTs\nto the _nftReceiver address.\nWhen true then fulfill the condition")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_agreementId"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"agreement identifier")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_did"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"refers to the DID in which secret store will issue the decryption keys")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_nftReceiver"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"is the address of the account to receive the NFT")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_nftAmount"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"amount of NFTs to transfer")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_lockPaymentCondition"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"lock payment condition identifier")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_contract"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null})),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_transfer"),(0,l.kt)("td",{parentName:"tr",align:null},"bool"),(0,l.kt)("td",{parentName:"tr",align:null},"Indicates if the NFT will be transferred (true) or minted (false)")))),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[0]"),(0,l.kt)("td",{parentName:"tr",align:null},"enum ConditionStoreLibrary.ConditionState"),(0,l.kt)("td",{parentName:"tr",align:null},"condition state (Fulfilled/Aborted)")))),(0,l.kt)("h3",{id:"getnftdefaultaddress-3"},"getNFTDefaultAddress"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function getNFTDefaultAddress() external view returns (address)\n")),(0,l.kt)("p",null,"returns if the default NFT contract address"),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"The default NFT contract address was given to the Transfer Condition during\nthe contract initialization")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[0]"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"the NFT contract address used by default in the transfer condition")))),(0,l.kt)("h2",{id:"nft721holdercondition-1"},"NFT721HolderCondition"),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"Implementation of the Nft Holder Condition")),(0,l.kt)("h3",{id:"condition_type-30"},"CONDITION_TYPE"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"bytes32 CONDITION_TYPE\n")),(0,l.kt)("h3",{id:"initialize-69"},"initialize"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function initialize(address _owner, address _conditionStoreManagerAddress) external\n")),(0,l.kt)("p",null,"initialize init the\ncontract with the following parameters"),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"this function is called only once during the contract\ninitialization.")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_owner"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"contract's owner account address")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_conditionStoreManagerAddress"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"condition store manager address")))),(0,l.kt)("h3",{id:"hashvalues-48"},"hashValues"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function hashValues(bytes32 _did, address _holderAddress, uint256 _amount, address _contractAddress) public pure returns (bytes32)\n")),(0,l.kt)("p",null,"hashValues generates the hash of condition inputs\nwith the following parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_did"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"the Decentralized Identifier of the asset")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_holderAddress"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"the address of the NFT holder")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_amount"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"is the amount NFTs that need to be hold by the holder")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_contractAddress"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"contract address holding the NFT (ERC-721) or the NFT Factory (ERC-1155)")))),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[0]"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32 hash of all these values")))),(0,l.kt)("h3",{id:"fulfill-50"},"fulfill"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function fulfill(bytes32 _agreementId, bytes32 _did, address _holderAddress, uint256 _amount, address _contractAddress) external returns (enum ConditionStoreLibrary.ConditionState)\n")),(0,l.kt)("p",null,"fulfill requires a validation that holder has enough\nNFTs for a specific DID"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_agreementId"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"SEA agreement identifier")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_did"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"the Decentralized Identifier of the asset")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_holderAddress"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"the contract address where the reward is locked")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_amount"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"is the amount of NFT to be hold")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_contractAddress"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"contract address holding the NFT (ERC-721) or the NFT Factory (ERC-1155)")))),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[0]"),(0,l.kt)("td",{parentName:"tr",align:null},"enum ConditionStoreLibrary.ConditionState"),(0,l.kt)("td",{parentName:"tr",align:null},"condition state")))),(0,l.kt)("h2",{id:"nft721lockcondition-1"},"NFT721LockCondition"),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"Implementation of the NFT Lock Condition for ERC-721 based NFTs")),(0,l.kt)("h3",{id:"condition_type-31"},"CONDITION_TYPE"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"bytes32 CONDITION_TYPE\n")),(0,l.kt)("h3",{id:"initialize-70"},"initialize"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function initialize(address _owner, address _conditionStoreManagerAddress) external\n")),(0,l.kt)("p",null,"initialize init the  contract with the following parameters"),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"this function is called only once during the contract\ninitialization.")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_owner"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"contract's owner account address")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_conditionStoreManagerAddress"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"condition store manager address")))),(0,l.kt)("h3",{id:"hashvalues-49"},"hashValues"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function hashValues(bytes32 _did, address _lockAddress, uint256 _amount, address _nftContractAddress) public pure returns (bytes32)\n")),(0,l.kt)("p",null,"hashValues generates the hash of condition inputs\nwith the following parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_did"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"the DID of the asset with NFTs attached to lock")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_lockAddress"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"the contract address where the NFT will be locked")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_amount"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"is the amount of the locked tokens")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_nftContractAddress"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"Is the address of the NFT (ERC-721) contract to use")))),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[0]"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32 hash of all these values")))),(0,l.kt)("h3",{id:"hashvaluesmarked-4"},"hashValuesMarked"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function hashValuesMarked(bytes32 _did, address _lockAddress, uint256 _amount, address _receiver, address _nftContractAddress) public pure returns (bytes32)\n")),(0,l.kt)("h3",{id:"fulfillmarked-4"},"fulfillMarked"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function fulfillMarked(bytes32 _agreementId, bytes32 _did, address _lockAddress, uint256 _amount, address _receiver, address _nftContractAddress) public returns (enum ConditionStoreLibrary.ConditionState)\n")),(0,l.kt)("p",null,"fulfill the transfer NFT condition"),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"Fulfill method lock a NFT into the ",(0,l.kt)("inlineCode",{parentName:"em"},"_lockAddress"),".")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_agreementId"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"agreement identifier")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_did"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"refers to the DID in which secret store will issue the decryption keys")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_lockAddress"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"the contract address where the NFT will be locked")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_amount"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"is the amount of the locked tokens (1)")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_receiver"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null})),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_nftContractAddress"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"Is the address of the NFT (ERC-721) contract to use")))),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[0]"),(0,l.kt)("td",{parentName:"tr",align:null},"enum ConditionStoreLibrary.ConditionState"),(0,l.kt)("td",{parentName:"tr",align:null},"condition state (Fulfilled/Aborted)")))),(0,l.kt)("h3",{id:"fulfill-51"},"fulfill"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function fulfill(bytes32 _agreementId, bytes32 _did, address _lockAddress, uint256 _amount, address _nftContractAddress) external returns (enum ConditionStoreLibrary.ConditionState)\n")),(0,l.kt)("p",null,"fulfill the transfer NFT condition"),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"Fulfill method transfer a certain amount of NFTs\nto the _nftReceiver address.\nWhen true then fulfill the condition")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_agreementId"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"agreement identifier")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_did"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"refers to the DID in which secret store will issue the decryption keys")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_lockAddress"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"the contract address where the NFT will be locked")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_amount"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"is the amount of the locked tokens")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_nftContractAddress"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"Is the address of the NFT (ERC-721) contract to use")))),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[0]"),(0,l.kt)("td",{parentName:"tr",align:null},"enum ConditionStoreLibrary.ConditionState"),(0,l.kt)("td",{parentName:"tr",align:null},"condition state (Fulfilled/Aborted)")))),(0,l.kt)("h3",{id:"onerc721received-3"},"onERC721Received"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function onERC721Received(address, address, uint256, bytes) public virtual returns (bytes4)\n")),(0,l.kt)("p",null,"Always returns ",(0,l.kt)("inlineCode",{parentName:"p"},"IERC721Receiver.onERC721Received.selector"),"."),(0,l.kt)("h2",{id:"nftaccesscondition-1"},"NFTAccessCondition"),(0,l.kt)("p",null,"_Implementation of the Access Condition specific for NFTs"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"}," NFT Access Condition is special condition used to give access \n to a specific NFT related to a DID._\n")),(0,l.kt)("h3",{id:"condition_type-32"},"CONDITION_TYPE"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"bytes32 CONDITION_TYPE\n")),(0,l.kt)("h3",{id:"documentpermission-3"},"DocumentPermission"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"struct DocumentPermission {\n  bytes32 agreementIdDeprecated;\n  mapping(address &#x3D;&gt; bool) permission;\n}\n")),(0,l.kt)("h3",{id:"nftpermissions-1"},"nftPermissions"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"mapping(bytes32 => struct NFTAccessCondition.DocumentPermission) nftPermissions\n")),(0,l.kt)("h3",{id:"didregistry-22"},"didRegistry"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"contract DIDRegistry didRegistry\n")),(0,l.kt)("h3",{id:"onlydidownerorprovider-5"},"onlyDIDOwnerOrProvider"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"modifier onlyDIDOwnerOrProvider(bytes32 _documentId)\n")),(0,l.kt)("h3",{id:"initialize-71"},"initialize"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function initialize(address _owner, address _conditionStoreManagerAddress, address _didRegistryAddress) external\n")),(0,l.kt)("p",null,"initialize init the\ncontract with the following parameters"),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"this function is called only once during the contract\ninitialization.")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_owner"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"contract's owner account address")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_conditionStoreManagerAddress"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"condition store manager address")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_didRegistryAddress"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"DID registry address")))),(0,l.kt)("h3",{id:"hashvalues-50"},"hashValues"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function hashValues(bytes32 _documentId, address _grantee) public view returns (bytes32)\n")),(0,l.kt)("p",null,"hashValues generates the hash of condition inputs\nwith the following parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_documentId"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"refers to the DID in which secret store will issue the decryption keys")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_grantee"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"is the address of the granted user or the DID provider")))),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[0]"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32 hash of all these values")))),(0,l.kt)("h3",{id:"hashvalues-51"},"hashValues"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function hashValues(bytes32 _documentId, address _grantee, address _contractAddress) public pure returns (bytes32)\n")),(0,l.kt)("p",null,"hashValues generates the hash of condition inputs\nwith the following parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_documentId"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"refers to the DID in which secret store will issue the decryption keys")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_grantee"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"is the address of the granted user or the DID provider")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_contractAddress"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"contract address holding the NFT (ERC-721) or the NFT Factory (ERC-1155)")))),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[0]"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32 hash of all these values")))),(0,l.kt)("h3",{id:"fulfill-52"},"fulfill"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function fulfill(bytes32 _agreementId, bytes32 _documentId, address _grantee) public returns (enum ConditionStoreLibrary.ConditionState)\n")),(0,l.kt)("p",null,"fulfill NFT Access condition"),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"only DID owner or DID provider can call this\nmethod. Fulfill method sets the permissions\nfor the granted consumer's address to true then\nfulfill the condition")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_agreementId"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"agreement identifier")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_documentId"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"refers to the DID in which secret store will issue the decryption keys")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_grantee"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"is the address of the granted user or the DID provider")))),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[0]"),(0,l.kt)("td",{parentName:"tr",align:null},"enum ConditionStoreLibrary.ConditionState"),(0,l.kt)("td",{parentName:"tr",align:null},"condition state (Fulfilled/Aborted)")))),(0,l.kt)("h3",{id:"fulfill-53"},"fulfill"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function fulfill(bytes32 _agreementId, bytes32 _documentId, address _grantee, address _contractAddress) public returns (enum ConditionStoreLibrary.ConditionState)\n")),(0,l.kt)("p",null,"fulfill NFT Access condition"),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"only DID owner or DID provider can call this\nmethod. Fulfill method sets the permissions\nfor the granted consumer's address to true then\nfulfill the condition")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_agreementId"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"agreement identifier")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_documentId"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"refers to the DID in which secret store will issue the decryption keys")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_grantee"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"is the address of the granted user or the DID provider")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_contractAddress"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"is the contract address of the NFT implementation (ERC-1155 or ERC-721)")))),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[0]"),(0,l.kt)("td",{parentName:"tr",align:null},"enum ConditionStoreLibrary.ConditionState"),(0,l.kt)("td",{parentName:"tr",align:null},"condition state (Fulfilled/Aborted)")))),(0,l.kt)("h3",{id:"grantpermission-5"},"grantPermission"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function grantPermission(address _grantee, bytes32 _documentId) public\n")),(0,l.kt)("p",null,"grantPermission is called only by DID owner or provider"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_grantee"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"is the address of the granted user or the DID provider")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_documentId"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"refers to the DID in which secret store will issue the decryption keys")))),(0,l.kt)("h3",{id:"checkpermissions-4"},"checkPermissions"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function checkPermissions(address _grantee, bytes32 _documentId) external view returns (bool permissionGranted)\n")),(0,l.kt)("p",null,"checkPermissions is called to validate the permissions of user related to the NFT attached to an asset"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_grantee"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"is the address of the granted user or the DID provider")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_documentId"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"refers to the DID")))),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"permissionGranted"),(0,l.kt)("td",{parentName:"tr",align:null},"bool"),(0,l.kt)("td",{parentName:"tr",align:null},"true if the access was granted")))),(0,l.kt)("h2",{id:"nftholdercondition-3"},"NFTHolderCondition"),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"Implementation of the Nft Holder Condition")),(0,l.kt)("h3",{id:"erc1155-4"},"erc1155"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"contract ERC1155BurnableUpgradeable erc1155\n")),(0,l.kt)("h3",{id:"condition_type-33"},"CONDITION_TYPE"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"bytes32 CONDITION_TYPE\n")),(0,l.kt)("h3",{id:"initialize-72"},"initialize"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function initialize(address _owner, address _conditionStoreManagerAddress, address _ercAddress) external\n")),(0,l.kt)("p",null,"initialize init the\ncontract with the following parameters"),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"this function is called only once during the contract\ninitialization.")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_owner"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"contract's owner account address")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_conditionStoreManagerAddress"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"condition store manager address")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_ercAddress"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"Nevermined ERC-1155 address")))),(0,l.kt)("h3",{id:"hashvalues-52"},"hashValues"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function hashValues(bytes32 _did, address _holderAddress, uint256 _amount) public view returns (bytes32)\n")),(0,l.kt)("p",null,"hashValues generates the hash of condition inputs\nwith the following parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_did"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"the Decentralized Identifier of the asset")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_holderAddress"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"the address of the NFT holder")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_amount"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"is the amount NFTs that need to be hold by the holder")))),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[0]"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32 hash of all these values")))),(0,l.kt)("h3",{id:"hashvalues-53"},"hashValues"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function hashValues(bytes32 _did, address _holderAddress, uint256 _amount, address _contractAddress) public pure returns (bytes32)\n")),(0,l.kt)("p",null,"hashValues generates the hash of condition inputs\nwith the following parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_did"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"the Decentralized Identifier of the asset")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_holderAddress"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"the address of the NFT holder")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_amount"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"is the amount NFTs that need to be hold by the holder")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_contractAddress"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"contract address holding the NFT (ERC-721) or the NFT Factory (ERC-1155)")))),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[0]"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32 hash of all these values")))),(0,l.kt)("h3",{id:"fulfill-54"},"fulfill"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function fulfill(bytes32 _agreementId, bytes32 _did, address _holderAddress, uint256 _amount) public returns (enum ConditionStoreLibrary.ConditionState)\n")),(0,l.kt)("p",null,"fulfill requires a validation that holder has enough\nNFTs for a specific DID"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_agreementId"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"SEA agreement identifier")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_did"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"the Decentralized Identifier of the asset")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_holderAddress"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"the contract address where the reward is locked")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_amount"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"is the amount of NFT to be hold")))),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[0]"),(0,l.kt)("td",{parentName:"tr",align:null},"enum ConditionStoreLibrary.ConditionState"),(0,l.kt)("td",{parentName:"tr",align:null},"condition state")))),(0,l.kt)("h3",{id:"fulfill-55"},"fulfill"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function fulfill(bytes32 _agreementId, bytes32 _did, address _holderAddress, uint256 _amount, address _contractAddress) public returns (enum ConditionStoreLibrary.ConditionState)\n")),(0,l.kt)("p",null,"fulfill requires a validation that holder has enough\nNFTs for a specific DID"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_agreementId"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"SEA agreement identifier")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_did"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"the Decentralized Identifier of the asset")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_holderAddress"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"the contract address where the reward is locked")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_amount"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"is the amount of NFT to be hold")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_contractAddress"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"contract address holding the NFT (ERC-721) or the NFT Factory (ERC-1155)")))),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[0]"),(0,l.kt)("td",{parentName:"tr",align:null},"enum ConditionStoreLibrary.ConditionState"),(0,l.kt)("td",{parentName:"tr",align:null},"condition state")))),(0,l.kt)("h2",{id:"nftlockcondition-2"},"NFTLockCondition"),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"Implementation of the NFT Lock Condition")),(0,l.kt)("h3",{id:"erc1155-5"},"erc1155"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"contract IERC1155Upgradeable erc1155\n")),(0,l.kt)("h3",{id:"condition_type-34"},"CONDITION_TYPE"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"bytes32 CONDITION_TYPE\n")),(0,l.kt)("h3",{id:"erc1155_accepted-2"},"ERC1155_ACCEPTED"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"bytes4 ERC1155_ACCEPTED\n")),(0,l.kt)("h3",{id:"erc1155_batch_accepted-2"},"ERC1155_BATCH_ACCEPTED"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"bytes4 ERC1155_BATCH_ACCEPTED\n")),(0,l.kt)("h3",{id:"initialize-73"},"initialize"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function initialize(address _owner, address _conditionStoreManagerAddress, address _ercAddress) external\n")),(0,l.kt)("p",null,"initialize init the  contract with the following parameters"),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"this function is called only once during the contract\ninitialization.")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_owner"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"contract's owner account address")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_conditionStoreManagerAddress"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"condition store manager address")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_ercAddress"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"Nevermined ERC-1155 address")))),(0,l.kt)("h3",{id:"hashvalues-54"},"hashValues"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function hashValues(bytes32 _did, address _lockAddress, uint256 _amount) public view returns (bytes32)\n")),(0,l.kt)("p",null,"hashValues generates the hash of condition inputs\nwith the following parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_did"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"the DID of the asset with NFTs attached to lock")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_lockAddress"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"the contract address where the NFT will be locked")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_amount"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"is the amount of the locked tokens")))),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[0]"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32 hash of all these values")))),(0,l.kt)("h3",{id:"hashvalues-55"},"hashValues"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function hashValues(bytes32 _did, address _lockAddress, uint256 _amount, address _nftContractAddress) public pure returns (bytes32)\n")),(0,l.kt)("p",null,"hashValues generates the hash of condition inputs\nwith the following parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_did"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"the DID of the asset with NFTs attached to lock")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_lockAddress"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"the contract address where the NFT will be locked")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_amount"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"is the amount of the locked tokens")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_nftContractAddress"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"Is the address of the NFT (ERC-1155) contract to use")))),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[0]"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32 hash of all these values")))),(0,l.kt)("h3",{id:"hashvaluesmarked-5"},"hashValuesMarked"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function hashValuesMarked(bytes32 _did, address _lockAddress, uint256 _amount, address _receiver, address _nftContractAddress) public pure returns (bytes32)\n")),(0,l.kt)("h3",{id:"fulfill-56"},"fulfill"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function fulfill(bytes32 _agreementId, bytes32 _did, address _lockAddress, uint256 _amount) public returns (enum ConditionStoreLibrary.ConditionState)\n")),(0,l.kt)("p",null,"fulfill the transfer NFT condition"),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"Fulfill method transfer a certain amount of NFTs\nto the _nftReceiver address.\nWhen true then fulfill the condition")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_agreementId"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"agreement identifier")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_did"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"refers to the DID in which secret store will issue the decryption keys")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_lockAddress"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"the contract address where the NFT will be locked")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_amount"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"is the amount of the locked tokens")))),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[0]"),(0,l.kt)("td",{parentName:"tr",align:null},"enum ConditionStoreLibrary.ConditionState"),(0,l.kt)("td",{parentName:"tr",align:null},"condition state (Fulfilled/Aborted)")))),(0,l.kt)("h3",{id:"fulfill-57"},"fulfill"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function fulfill(bytes32 _agreementId, bytes32 _did, address _lockAddress, uint256 _amount, address _nft) public returns (enum ConditionStoreLibrary.ConditionState)\n")),(0,l.kt)("h3",{id:"fulfillmarked-5"},"fulfillMarked"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function fulfillMarked(bytes32 _agreementId, bytes32 _did, address _lockAddress, uint256 _amount, address _receiver, address _nftContractAddress) public returns (enum ConditionStoreLibrary.ConditionState)\n")),(0,l.kt)("p",null,"fulfill the transfer NFT condition"),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"Fulfill method transfer a certain amount of NFTs\nto the _nftReceiver address.\nWhen true then fulfill the condition")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_agreementId"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"agreement identifier")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_did"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"refers to the DID in which secret store will issue the decryption keys")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_lockAddress"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"the contract address where the NFT will be locked")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_amount"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"is the amount of the locked tokens")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_receiver"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null})),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_nftContractAddress"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"Is the address of the NFT (ERC-1155) contract to use")))),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[0]"),(0,l.kt)("td",{parentName:"tr",align:null},"enum ConditionStoreLibrary.ConditionState"),(0,l.kt)("td",{parentName:"tr",align:null},"condition state (Fulfilled/Aborted)")))),(0,l.kt)("h3",{id:"onerc1155received-2"},"onERC1155Received"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function onERC1155Received(address, address, uint256, uint256, bytes) external pure returns (bytes4)\n")),(0,l.kt)("h3",{id:"onerc1155batchreceived-2"},"onERC1155BatchReceived"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function onERC1155BatchReceived(address, address, uint256[], uint256[], bytes) external pure returns (bytes4)\n")),(0,l.kt)("h3",{id:"supportsinterface-5"},"supportsInterface"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function supportsInterface(bytes4 interfaceId) external pure returns (bool)\n")),(0,l.kt)("p",null,"_Returns true if this contract implements the interface defined by\n",(0,l.kt)("inlineCode",{parentName:"p"},"interfaceId"),". See the corresponding\n",(0,l.kt)("a",{parentName:"p",href:"https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified%5BEIP"},"https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP")," section]\nto learn more about how these ids are created."),(0,l.kt)("p",null,"This function call must use less than 30 000 gas._"),(0,l.kt)("h2",{id:"transfernft721condition-1"},"TransferNFT721Condition"),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"Implementation of condition allowing to transfer an NFT\nbetween the original owner and a receiver")),(0,l.kt)("h3",{id:"condition_type-35"},"CONDITION_TYPE"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"bytes32 CONDITION_TYPE\n")),(0,l.kt)("h3",{id:"market_role-2"},"MARKET_ROLE"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"bytes32 MARKET_ROLE\n")),(0,l.kt)("h3",{id:"erc721-2"},"erc721"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"contract NFT721Upgradeable erc721\n")),(0,l.kt)("h3",{id:"_lockconditionaddress-3"},"_lockConditionAddress"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"address _lockConditionAddress\n")),(0,l.kt)("h3",{id:"proxy_role-8"},"PROXY_ROLE"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"bytes32 PROXY_ROLE\n")),(0,l.kt)("h3",{id:"didregistry-23"},"didRegistry"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"contract DIDRegistry didRegistry\n")),(0,l.kt)("h3",{id:"grantproxyrole-8"},"grantProxyRole"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function grantProxyRole(address _address) public\n")),(0,l.kt)("h3",{id:"revokeproxyrole-8"},"revokeProxyRole"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function revokeProxyRole(address _address) public\n")),(0,l.kt)("h3",{id:"initialize-74"},"initialize"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function initialize(address _owner, address _conditionStoreManagerAddress, address _didRegistryAddress, address _ercAddress, address _lockNFTConditionAddress) external\n")),(0,l.kt)("p",null,"initialize init the contract with the following parameters"),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"this function is called only once during the contract\ninitialization.")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_owner"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"contract's owner account address")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_conditionStoreManagerAddress"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"condition store manager address")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_didRegistryAddress"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"DID Registry address")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_ercAddress"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"Nevermined ERC-721 address")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_lockNFTConditionAddress"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null})))),(0,l.kt)("h3",{id:"getnftdefaultaddress-4"},"getNFTDefaultAddress"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function getNFTDefaultAddress() external view returns (address)\n")),(0,l.kt)("p",null,"returns if the default NFT contract address"),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"The default NFT contract address was given to the Transfer Condition during\nthe contract initialization")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[0]"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"the NFT contract address used by default in the transfer condition")))),(0,l.kt)("h3",{id:"hashvalues-56"},"hashValues"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function hashValues(bytes32 _did, address _nftHolder, address _nftReceiver, uint256 _nftAmount, bytes32 _lockCondition, address _contract, bool _transfer) public pure returns (bytes32)\n")),(0,l.kt)("p",null,"hashValues generates the hash of condition inputs\nwith the following parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_did"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"refers to the DID in which secret store will issue the decryption keys")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_nftHolder"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null})),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_nftReceiver"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"is the address of the granted user or the DID provider")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_nftAmount"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"amount of NFTs to transfer")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_lockCondition"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"lock condition identifier")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_contract"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"NFT contract to use")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_transfer"),(0,l.kt)("td",{parentName:"tr",align:null},"bool"),(0,l.kt)("td",{parentName:"tr",align:null})))),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[0]"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32 hash of all these values")))),(0,l.kt)("h3",{id:"encodeparams-5"},"encodeParams"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function encodeParams(bytes32 _did, address _nftHolder, address _nftReceiver, uint256 _nftAmount, bytes32 _lockPaymentCondition, address _nftContractAddress, bool _transfer) external pure returns (bytes)\n")),(0,l.kt)("p",null,"Encodes/serialize all the parameters received"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_did"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"refers to the DID in which secret store will issue the decryption keys")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_nftHolder"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"is the address of the account to receive the NFT")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_nftReceiver"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"is the address of the account to receive the NFT")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_nftAmount"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"amount of NFTs to transfer")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_lockPaymentCondition"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"lock payment condition identifier")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_nftContractAddress"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"the NFT contract to use")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_transfer"),(0,l.kt)("td",{parentName:"tr",align:null},"bool"),(0,l.kt)("td",{parentName:"tr",align:null},"if yes it does a transfer if false it mints the NFT")))),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[0]"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes"),(0,l.kt)("td",{parentName:"tr",align:null},"the encoded parameters")))),(0,l.kt)("h3",{id:"fulfill-58"},"fulfill"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function fulfill(bytes32 _agreementId, bytes32 _did, address _nftReceiver, uint256 _nftAmount, bytes32 _lockPaymentCondition, address _contract, bool _transfer) public returns (enum ConditionStoreLibrary.ConditionState)\n")),(0,l.kt)("p",null,"fulfill the transfer NFT condition"),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"Fulfill method transfer a certain amount of NFTs\nto the _nftReceiver address.\nWhen true then fulfill the condition")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_agreementId"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"agreement identifier")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_did"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"refers to the DID in which secret store will issue the decryption keys")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_nftReceiver"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"is the address of the account to receive the NFT")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_nftAmount"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"amount of NFTs to transfer")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_lockPaymentCondition"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"lock payment condition identifier")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_contract"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"NFT contract to use")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_transfer"),(0,l.kt)("td",{parentName:"tr",align:null},"bool"),(0,l.kt)("td",{parentName:"tr",align:null},"Indicates if the NFT will be transferred (true) or minted (false)")))),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[0]"),(0,l.kt)("td",{parentName:"tr",align:null},"enum ConditionStoreLibrary.ConditionState"),(0,l.kt)("td",{parentName:"tr",align:null},"condition state (Fulfilled/Aborted)")))),(0,l.kt)("h3",{id:"fulfillproxy-6"},"fulfillProxy"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function fulfillProxy(address _account, bytes32 _agreementId, bytes _params) external payable\n")),(0,l.kt)("p",null,"fulfill the transfer NFT condition by a proxy"),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"Fulfill method transfer a certain amount of NFTs")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_account"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"NFT Holder")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_agreementId"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"agreement identifier")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_params"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes"),(0,l.kt)("td",{parentName:"tr",align:null},"encoded parameters")))),(0,l.kt)("h3",{id:"fulfillinternal-4"},"fulfillInternal"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function fulfillInternal(address _account, bytes32 _agreementId, bytes32 _did, address _nftReceiver, uint256 _nftAmount, bytes32 _lockPaymentCondition, address _contract, bool _transfer, uint256 _expirationBlock) internal returns (enum ConditionStoreLibrary.ConditionState)\n")),(0,l.kt)("h3",{id:"fulfillfordelegate-4"},"fulfillForDelegate"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function fulfillForDelegate(bytes32 _agreementId, bytes32 _did, address _nftHolder, address _nftReceiver, uint256 _nftAmount, bytes32 _lockPaymentCondition, bool _transfer) public returns (enum ConditionStoreLibrary.ConditionState)\n")),(0,l.kt)("p",null,"fulfill the transfer NFT condition"),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"Fulfill method transfer a certain amount of NFTs\nto the _nftReceiver address in the DIDRegistry contract.\nWhen true then fulfill the condition")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_agreementId"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"agreement identifier")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_did"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"refers to the DID in which secret store will issue the decryption keys")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_nftHolder"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"is the address of the account to receive the NFT")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_nftReceiver"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"is the address of the account to receive the NFT")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_nftAmount"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"amount of NFTs to transfer")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_lockPaymentCondition"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"lock payment condition identifier")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_transfer"),(0,l.kt)("td",{parentName:"tr",align:null},"bool"),(0,l.kt)("td",{parentName:"tr",align:null},"if yes it does a transfer if false it mints the NFT")))),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[0]"),(0,l.kt)("td",{parentName:"tr",align:null},"enum ConditionStoreLibrary.ConditionState"),(0,l.kt)("td",{parentName:"tr",align:null},"condition state (Fulfilled/Aborted)")))),(0,l.kt)("h3",{id:"fulfillfordelegate-5"},"fulfillForDelegate"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function fulfillForDelegate(bytes32 _agreementId, bytes32 _did, address _nftHolder, address _nftReceiver, uint256 _nftAmount, bytes32 _lockPaymentCondition, bool _transfer, address _nftContractAddress, uint256 _expirationBlock) public returns (enum ConditionStoreLibrary.ConditionState)\n")),(0,l.kt)("p",null,"fulfill the transfer NFT condition"),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"Fulfill method transfer a certain amount of NFTs\nto the _nftReceiver address in the DIDRegistry contract.\nWhen true then fulfill the condition")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_agreementId"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"agreement identifier")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_did"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"refers to the DID in which secret store will issue the decryption keys")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_nftHolder"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"is the address of the account to receive the NFT")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_nftReceiver"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"is the address of the account to receive the NFT")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_nftAmount"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"amount of NFTs to transfer")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_lockPaymentCondition"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"lock payment condition identifier")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_transfer"),(0,l.kt)("td",{parentName:"tr",align:null},"bool"),(0,l.kt)("td",{parentName:"tr",align:null},"if yes it does a transfer if false it mints the NFT")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_nftContractAddress"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"the address of the ERC-721 NFT contract")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_expirationBlock"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"in which block the nft expires, if 0 it doesn't expire")))),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[0]"),(0,l.kt)("td",{parentName:"tr",align:null},"enum ConditionStoreLibrary.ConditionState"),(0,l.kt)("td",{parentName:"tr",align:null},"condition state (Fulfilled/Aborted)")))),(0,l.kt)("h2",{id:"transfernftcondition-1"},"TransferNFTCondition"),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"Implementation of condition allowing to transfer an NFT\nbetween the original owner and a receiver")),(0,l.kt)("h3",{id:"condition_type-36"},"CONDITION_TYPE"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"bytes32 CONDITION_TYPE\n")),(0,l.kt)("h3",{id:"market_role-3"},"MARKET_ROLE"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"bytes32 MARKET_ROLE\n")),(0,l.kt)("h3",{id:"erc1155-6"},"erc1155"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"contract NFTUpgradeable erc1155\n")),(0,l.kt)("h3",{id:"didregistry-24"},"didRegistry"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"contract DIDRegistry didRegistry\n")),(0,l.kt)("h3",{id:"proxy_role-9"},"PROXY_ROLE"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"bytes32 PROXY_ROLE\n")),(0,l.kt)("h3",{id:"grantproxyrole-9"},"grantProxyRole"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function grantProxyRole(address _address) public\n")),(0,l.kt)("h3",{id:"revokeproxyrole-9"},"revokeProxyRole"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function revokeProxyRole(address _address) public\n")),(0,l.kt)("h3",{id:"initialize-75"},"initialize"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function initialize(address _owner, address _conditionStoreManagerAddress, address _didRegistryAddress, address _ercAddress, address _nftContractAddress) external\n")),(0,l.kt)("p",null,"initialize init the contract with the following parameters"),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"this function is called only once during the contract\ninitialization.")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_owner"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"contract's owner account address")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_conditionStoreManagerAddress"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"condition store manager address")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_didRegistryAddress"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"DID Registry address")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_ercAddress"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"Nevermined ERC-1155 address")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_nftContractAddress"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"Market address")))),(0,l.kt)("h3",{id:"grantmarketrole-1"},"grantMarketRole"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function grantMarketRole(address _nftContractAddress) public\n")),(0,l.kt)("h3",{id:"revokemarketrole-1"},"revokeMarketRole"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function revokeMarketRole(address _nftContractAddress) public\n")),(0,l.kt)("h3",{id:"getnftdefaultaddress-5"},"getNFTDefaultAddress"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function getNFTDefaultAddress() external view returns (address)\n")),(0,l.kt)("p",null,"returns if the default NFT contract address"),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"The default NFT contract address was given to the Transfer Condition during\nthe contract initialization")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[0]"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"the NFT contract address used by default in the transfer condition")))),(0,l.kt)("h3",{id:"hashvalues-57"},"hashValues"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function hashValues(bytes32 _did, address _nftHolder, address _nftReceiver, uint256 _nftAmount, bytes32 _lockCondition) public view returns (bytes32)\n")),(0,l.kt)("p",null,"hashValues generates the hash of condition inputs\nwith the following parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_did"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"refers to the DID in which secret store will issue the decryption keys")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_nftHolder"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null})),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_nftReceiver"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"is the address of the granted user or the DID provider")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_nftAmount"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"amount of NFTs to transfer")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_lockCondition"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"lock condition identifier")))),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[0]"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32 hash of all these values")))),(0,l.kt)("h3",{id:"hashvalues-58"},"hashValues"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function hashValues(bytes32 _did, address _nftHolder, address _nftReceiver, uint256 _nftAmount, bytes32 _lockCondition, address _nftContractAddress, bool _transfer) public pure returns (bytes32)\n")),(0,l.kt)("p",null,"hashValues generates the hash of condition inputs\nwith the following parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_did"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"refers to the DID in which secret store will issue the decryption keys")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_nftHolder"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null})),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_nftReceiver"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"is the address of the granted user or the DID provider")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_nftAmount"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"amount of NFTs to transfer")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_lockCondition"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"lock condition identifier")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_nftContractAddress"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"NFT contract to use")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_transfer"),(0,l.kt)("td",{parentName:"tr",align:null},"bool"),(0,l.kt)("td",{parentName:"tr",align:null},"Indicates if the NFT will be transferred (true) or minted (false)")))),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[0]"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32 hash of all these values")))),(0,l.kt)("h3",{id:"fulfill-59"},"fulfill"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function fulfill(bytes32 _agreementId, bytes32 _did, address _nftReceiver, uint256 _nftAmount, bytes32 _lockPaymentCondition) public returns (enum ConditionStoreLibrary.ConditionState)\n")),(0,l.kt)("h3",{id:"encodeparams-6"},"encodeParams"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function encodeParams(bytes32 _did, address _nftHolder, address _nftReceiver, uint256 _nftAmount, bytes32 _lockPaymentCondition, address _nftContractAddress, bool _transfer) external pure returns (bytes)\n")),(0,l.kt)("p",null,"Encodes/serialize all the parameters received"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_did"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"refers to the DID in which secret store will issue the decryption keys")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_nftHolder"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"is the address of the account to receive the NFT")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_nftReceiver"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"is the address of the account to receive the NFT")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_nftAmount"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"amount of NFTs to transfer")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_lockPaymentCondition"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"lock payment condition identifier")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_nftContractAddress"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"the NFT contract to use")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_transfer"),(0,l.kt)("td",{parentName:"tr",align:null},"bool"),(0,l.kt)("td",{parentName:"tr",align:null},"if yes it does a transfer if false it mints the NFT")))),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[0]"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes"),(0,l.kt)("td",{parentName:"tr",align:null},"the encoded parameters")))),(0,l.kt)("h3",{id:"fulfillproxy-7"},"fulfillProxy"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function fulfillProxy(address _account, bytes32 _agreementId, bytes _params) external payable\n")),(0,l.kt)("p",null,"fulfill the transfer NFT condition by a proxy"),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"Fulfill method transfer a certain amount of NFTs")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_account"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"NFT Holder")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_agreementId"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"agreement identifier")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_params"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes"),(0,l.kt)("td",{parentName:"tr",align:null},"encoded parameters")))),(0,l.kt)("h3",{id:"fulfill-60"},"fulfill"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function fulfill(bytes32 _agreementId, bytes32 _did, address _nftReceiver, uint256 _nftAmount, bytes32 _lockPaymentCondition, address _nftContractAddress, bool _transfer) public returns (enum ConditionStoreLibrary.ConditionState)\n")),(0,l.kt)("p",null,"fulfill the transfer NFT condition"),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"Fulfill method transfer a certain amount of NFTs\nto the _nftReceiver address.\nWhen true then fulfill the condition")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_agreementId"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"agreement identifier")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_did"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"refers to the DID in which secret store will issue the decryption keys")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_nftReceiver"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"is the address of the account to receive the NFT")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_nftAmount"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"amount of NFTs to transfer")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_lockPaymentCondition"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"lock payment condition identifier")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_nftContractAddress"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"NFT contract to use")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_transfer"),(0,l.kt)("td",{parentName:"tr",align:null},"bool"),(0,l.kt)("td",{parentName:"tr",align:null},"Indicates if the NFT will be transferred (true) or minted (false)")))),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[0]"),(0,l.kt)("td",{parentName:"tr",align:null},"enum ConditionStoreLibrary.ConditionState"),(0,l.kt)("td",{parentName:"tr",align:null},"condition state (Fulfilled/Aborted)")))),(0,l.kt)("h3",{id:"fulfillinternal-5"},"fulfillInternal"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function fulfillInternal(address _account, bytes32 _agreementId, bytes32 _did, address _nftReceiver, uint256 _nftAmount, bytes32 _lockPaymentCondition, address _nftContractAddress, bool _transfer) internal returns (enum ConditionStoreLibrary.ConditionState)\n")),(0,l.kt)("h3",{id:"fulfillfordelegate-6"},"fulfillForDelegate"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function fulfillForDelegate(bytes32 _agreementId, bytes32 _did, address _nftHolder, address _nftReceiver, uint256 _nftAmount, bytes32 _lockPaymentCondition, bool _transfer) public returns (enum ConditionStoreLibrary.ConditionState)\n")),(0,l.kt)("p",null,"fulfill the transfer NFT condition"),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"Fulfill method transfer a certain amount of NFTs\nto the _nftReceiver address in the DIDRegistry contract.\nWhen true then fulfill the condition")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_agreementId"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"agreement identifier")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_did"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"refers to the DID in which secret store will issue the decryption keys")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_nftHolder"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"is the address of the account to receive the NFT")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_nftReceiver"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"is the address of the account to receive the NFT")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_nftAmount"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"amount of NFTs to transfer")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_lockPaymentCondition"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"lock payment condition identifier")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_transfer"),(0,l.kt)("td",{parentName:"tr",align:null},"bool"),(0,l.kt)("td",{parentName:"tr",align:null},"if yes it does a transfer if false it mints the NFT")))),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[0]"),(0,l.kt)("td",{parentName:"tr",align:null},"enum ConditionStoreLibrary.ConditionState"),(0,l.kt)("td",{parentName:"tr",align:null},"condition state (Fulfilled/Aborted)")))),(0,l.kt)("h3",{id:"fulfillfordelegate-7"},"fulfillForDelegate"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function fulfillForDelegate(bytes32 _agreementId, bytes32 _did, address _nftHolder, address _nftReceiver, uint256 _nftAmount, bytes32 _lockPaymentCondition, address _nftContractAddress, bool _transfer) public returns (enum ConditionStoreLibrary.ConditionState)\n")),(0,l.kt)("p",null,"fulfill the transfer NFT condition"),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"Fulfill method transfer a certain amount of NFTs\nto the _nftReceiver address in the DIDRegistry contract.\nWhen true then fulfill the condition")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_agreementId"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"agreement identifier")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_did"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"refers to the DID in which secret store will issue the decryption keys")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_nftHolder"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"is the address of the account to receive the NFT")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_nftReceiver"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"is the address of the account to receive the NFT")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_nftAmount"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"amount of NFTs to transfer")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_lockPaymentCondition"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"lock payment condition identifier")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_nftContractAddress"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"the address of the ERC-721 NFT contract")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_transfer"),(0,l.kt)("td",{parentName:"tr",align:null},"bool"),(0,l.kt)("td",{parentName:"tr",align:null},"if yes it does a transfer if false it mints the NFT")))),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[0]"),(0,l.kt)("td",{parentName:"tr",align:null},"enum ConditionStoreLibrary.ConditionState"),(0,l.kt)("td",{parentName:"tr",align:null},"condition state (Fulfilled/Aborted)")))),(0,l.kt)("h2",{id:"signcondition-1"},"SignCondition"),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"Implementation of the Sign Condition")),(0,l.kt)("h3",{id:"condition_type-37"},"CONDITION_TYPE"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"bytes32 CONDITION_TYPE\n")),(0,l.kt)("h3",{id:"initialize-76"},"initialize"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function initialize(address _owner, address _conditionStoreManagerAddress) external\n")),(0,l.kt)("p",null,"initialize init the\ncontract with the following parameters"),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"this function is called only once during the contract\ninitialization.")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_owner"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"contract's owner account address")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_conditionStoreManagerAddress"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"condition store manager address")))),(0,l.kt)("h3",{id:"hashvalues-59"},"hashValues"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function hashValues(bytes32 _message, address _publicKey) public pure returns (bytes32)\n")),(0,l.kt)("p",null,"hashValues generates the hash of condition inputs\nwith the following parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_message"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"the message to be signed")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_publicKey"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"the public key of the signing address")))),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[0]"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32 hash of all these values")))),(0,l.kt)("h3",{id:"fulfill-61"},"fulfill"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function fulfill(bytes32 _agreementId, bytes32 _message, address _publicKey, bytes _signature) public returns (enum ConditionStoreLibrary.ConditionState)\n")),(0,l.kt)("p",null,"fulfill validate the signed message and fulfill the condition"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_agreementId"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"SEA agreement identifier")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_message"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"the message to be signed")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_publicKey"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"the public key of the signing address")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_signature"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes"),(0,l.kt)("td",{parentName:"tr",align:null},"signature of the signed message using the public key")))),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[0]"),(0,l.kt)("td",{parentName:"tr",align:null},"enum ConditionStoreLibrary.ConditionState"),(0,l.kt)("td",{parentName:"tr",align:null},"condition state")))),(0,l.kt)("h2",{id:"thresholdcondition-1"},"ThresholdCondition"),(0,l.kt)("p",null,"_Implementation of the Threshold Condition"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"}," Threshold condition acts as a filter for a set of input condition(s) in which sends \n a signal whether to complete the flow execution or abort it. This type of conditions \n works as intermediary conditions where they wire SEA conditions in order to support  \n more complex scenarios._\n")),(0,l.kt)("h3",{id:"condition_type-38"},"CONDITION_TYPE"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"bytes32 CONDITION_TYPE\n")),(0,l.kt)("h3",{id:"initialize-77"},"initialize"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function initialize(address _owner, address _conditionStoreManagerAddress) external\n")),(0,l.kt)("p",null,"initialize init the\ncontract with the following parameters"),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"this function is called only once during the contract\ninitialization.")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_owner"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"contract's owner account address")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_conditionStoreManagerAddress"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"condition store manager address")))),(0,l.kt)("h3",{id:"hashvalues-60"},"hashValues"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function hashValues(bytes32[] inputConditions, uint256 threshold) public pure returns (bytes32)\n")),(0,l.kt)("p",null,"hashValues generates the hash of condition inputs\nwith the following parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"inputConditions"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32[]"),(0,l.kt)("td",{parentName:"tr",align:null},"array of input conditions IDs")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"threshold"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"the required number of fulfilled input conditions")))),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[0]"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32 hash of all these values")))),(0,l.kt)("h3",{id:"fulfill-62"},"fulfill"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function fulfill(bytes32 _agreementId, bytes32[] _inputConditions, uint256 threshold) external returns (enum ConditionStoreLibrary.ConditionState)\n")),(0,l.kt)("p",null,"fulfill threshold condition"),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"the fulfill method check whether input conditions are\nfulfilled or not.")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_agreementId"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"agreement identifier")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_inputConditions"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32[]"),(0,l.kt)("td",{parentName:"tr",align:null},"array of input conditions IDs")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"threshold"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"the required number of fulfilled input conditions")))),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[0]"),(0,l.kt)("td",{parentName:"tr",align:null},"enum ConditionStoreLibrary.ConditionState"),(0,l.kt)("td",{parentName:"tr",align:null},"condition state (Fulfilled/Aborted)")))),(0,l.kt)("h3",{id:"canfulfill-1"},"canFulfill"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function canFulfill(bytes32[] _inputConditions, uint256 threshold) private view returns (bool _fulfill)\n")),(0,l.kt)("p",null,"canFulfill check if condition can be fulfilled"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_inputConditions"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32[]"),(0,l.kt)("td",{parentName:"tr",align:null},"array of input conditions IDs")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"threshold"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"the required number of fulfilled input conditions")))),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_fulfill"),(0,l.kt)("td",{parentName:"tr",align:null},"bool"),(0,l.kt)("td",{parentName:"tr",align:null},"true if can fulfill")))),(0,l.kt)("h2",{id:"transferdidownershipcondition-1"},"TransferDIDOwnershipCondition"),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"Implementation of condition allowing to transfer the ownership\nbetween the original owner and a receiver")),(0,l.kt)("h3",{id:"condition_type-39"},"CONDITION_TYPE"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"bytes32 CONDITION_TYPE\n")),(0,l.kt)("h3",{id:"didregistry-25"},"didRegistry"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"contract DIDRegistry didRegistry\n")),(0,l.kt)("h3",{id:"fulfilled-25"},"Fulfilled"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"event Fulfilled(bytes32 _agreementId, bytes32 _did, address _receiver, bytes32 _conditionId)\n")),(0,l.kt)("h3",{id:"initialize-78"},"initialize"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function initialize(address _owner, address _conditionStoreManagerAddress, address _didRegistryAddress) external\n")),(0,l.kt)("p",null,"initialize init the contract with the following parameters"),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"this function is called only once during the contract\ninitialization.")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_owner"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"contract's owner account address")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_conditionStoreManagerAddress"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"condition store manager address")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_didRegistryAddress"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"DID Registry address")))),(0,l.kt)("h3",{id:"hashvalues-61"},"hashValues"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function hashValues(bytes32 _did, address _receiver) public pure returns (bytes32)\n")),(0,l.kt)("p",null,"hashValues generates the hash of condition inputs\nwith the following parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_did"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"refers to the DID in which secret store will issue the decryption keys")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_receiver"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"is the address of the granted user or the DID provider")))),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[0]"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32 hash of all these values")))),(0,l.kt)("h3",{id:"fulfill-63"},"fulfill"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function fulfill(bytes32 _agreementId, bytes32 _did, address _receiver) public returns (enum ConditionStoreLibrary.ConditionState)\n")),(0,l.kt)("p",null,"fulfill the transfer DID ownership condition"),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"only DID owner or DID provider can call this\nmethod. Fulfill method transfer full ownership permissions\nto to _receiver address.\nWhen true then fulfill the condition")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_agreementId"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"agreement identifier")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_did"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"refers to the DID in which secret store will issue the decryption keys")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_receiver"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"is the address of the granted user")))),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[0]"),(0,l.kt)("td",{parentName:"tr",align:null},"enum ConditionStoreLibrary.ConditionState"),(0,l.kt)("td",{parentName:"tr",align:null},"condition state (Fulfilled/Aborted)")))),(0,l.kt)("h2",{id:"whitelistingcondition-1"},"WhitelistingCondition"),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"Implementation of the Whitelisting Condition")),(0,l.kt)("h3",{id:"condition_type-40"},"CONDITION_TYPE"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"bytes32 CONDITION_TYPE\n")),(0,l.kt)("h3",{id:"initialize-79"},"initialize"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function initialize(address _owner, address _conditionStoreManagerAddress) external\n")),(0,l.kt)("p",null,"initialize init the\ncontract with the following parameters"),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"this function is called only once during the contract\ninitialization.")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_owner"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"contract's owner account address")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_conditionStoreManagerAddress"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"condition store manager address")))),(0,l.kt)("h3",{id:"hashvalues-62"},"hashValues"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function hashValues(address _listAddress, bytes32 _item) public pure returns (bytes32)\n")),(0,l.kt)("p",null,"hashValues generates the hash of condition inputs\nwith the following parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_listAddress"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"list contract address")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_item"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"item in the list")))),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[0]"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32 hash of all these values")))),(0,l.kt)("h3",{id:"fulfill-64"},"fulfill"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function fulfill(bytes32 _agreementId, address _listAddress, bytes32 _item) public returns (enum ConditionStoreLibrary.ConditionState)\n")),(0,l.kt)("p",null,"fulfill check whether address is whitelisted\nin order to fulfill the condition. This method will be\ncalled by any one in this whitelist."),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_agreementId"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"SEA agreement identifier")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_listAddress"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"list contract address")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_item"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"item in the list")))),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[0]"),(0,l.kt)("td",{parentName:"tr",align:null},"enum ConditionStoreLibrary.ConditionState"),(0,l.kt)("td",{parentName:"tr",align:null},"condition state")))),(0,l.kt)("h2",{id:"aaveborrowcondition-1"},"AaveBorrowCondition"),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"Implementation of the Aave Borrow Credit Condition")),(0,l.kt)("h3",{id:"aavecreditvault-7"},"aaveCreditVault"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"contract AaveCreditVault aaveCreditVault\n")),(0,l.kt)("h3",{id:"condition_type-41"},"CONDITION_TYPE"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"bytes32 CONDITION_TYPE\n")),(0,l.kt)("h3",{id:"fulfilled-26"},"Fulfilled"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"event Fulfilled(bytes32 _agreementId, bytes32 _did, bytes32 _conditionId)\n")),(0,l.kt)("h3",{id:"initialize-80"},"initialize"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function initialize(address _owner, address _conditionStoreManagerAddress) external\n")),(0,l.kt)("p",null,"initialize init the contract with the following parameters"),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"this function is called only once during the contract initialization.")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_owner"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"contract's owner account address")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_conditionStoreManagerAddress"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"condition store manager address")))),(0,l.kt)("h3",{id:"hashvalues-63"},"hashValues"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function hashValues(bytes32 _did, address _vaultAddress, address _assetToBorrow, uint256 _amount, uint256 _interestRateMode) public pure returns (bytes32)\n")),(0,l.kt)("p",null,"hashValues generates the hash of condition inputs\nwith the following parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_did"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"the DID of the asset")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_vaultAddress"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"the address of vault locking the deposited collateral and the asset")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_assetToBorrow"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"the address of the asset to borrow (i.e DAI)")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_amount"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"the amount of the ERC-20 the assets to borrow (i.e 50 DAI)")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_interestRateMode"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"interest rate type stable 1, variable 2")))),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[0]"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32 hash of all these values")))),(0,l.kt)("h3",{id:"fulfill-65"},"fulfill"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function fulfill(bytes32 _agreementId, bytes32 _did, address _vaultAddress, address _assetToBorrow, uint256 _amount, uint256 _interestRateMode) external returns (enum ConditionStoreLibrary.ConditionState)\n")),(0,l.kt)("p",null,"It allows the borrower to borrow the asset deposited by the lender"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_agreementId"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"the identifier of the agreement")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_did"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"the DID of the asset")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_vaultAddress"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"the address of vault locking the deposited collateral and the asset")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_assetToBorrow"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"the address of the asset to borrow (i.e DAI)")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_amount"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"the amount of the ERC-20 the assets to borrow (i.e 50 DAI)")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_interestRateMode"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"interest rate type stable 1, variable 2")))),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[0]"),(0,l.kt)("td",{parentName:"tr",align:null},"enum ConditionStoreLibrary.ConditionState"),(0,l.kt)("td",{parentName:"tr",align:null},"ConditionStoreLibrary.ConditionState the state of the condition (Fulfilled if everything went good)")))),(0,l.kt)("h2",{id:"aavecollateraldepositcondition-1"},"AaveCollateralDepositCondition"),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"Implementation of the Aave Collateral Deposit Condition\nThis condition allows a Lender to deposit the collateral that\ninto account the royalties to be paid to the original creators in a secondary market.")),(0,l.kt)("h3",{id:"aavecreditvault-8"},"aaveCreditVault"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"contract AaveCreditVault aaveCreditVault\n")),(0,l.kt)("h3",{id:"condition_type-42"},"CONDITION_TYPE"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"bytes32 CONDITION_TYPE\n")),(0,l.kt)("h3",{id:"fulfilled-27"},"Fulfilled"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"event Fulfilled(bytes32 _agreementId, bytes32 _did, bytes32 _conditionId)\n")),(0,l.kt)("h3",{id:"initialize-81"},"initialize"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function initialize(address _owner, address _conditionStoreManagerAddress) external\n")),(0,l.kt)("p",null,"initialize init the contract with the following parameters"),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"this function is called only once during the contract initialization.")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_owner"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"contract's owner account address")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_conditionStoreManagerAddress"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"condition store manager address")))),(0,l.kt)("h3",{id:"hashvalues-64"},"hashValues"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function hashValues(bytes32 _did, address _vaultAddress, address _collateralAsset, uint256 _collateralAmount, address _delegatedAsset, uint256 _delegatedAmount, uint256 _interestRateMode) public pure returns (bytes32)\n")),(0,l.kt)("p",null,"hashValues generates the hash of condition inputs\nwith the following parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_did"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"the DID of the asset")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_vaultAddress"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"Address of the vault")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_collateralAsset"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"the address of the ERC-20 that will be used as collateral (i.e WETH)")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_collateralAmount"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"the amount of the ERC-20 that will be used as collateral (i.e 10 WETH)")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_delegatedAsset"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"the address of the ERC-20 that will be delegated to the borrower (i.e DAI)")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_delegatedAmount"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"the amount of the ERC-20 that will be delegated to the borrower (i.e 500 DAI)")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_interestRateMode"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"interest rate type stable 1, variable 2")))),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[0]"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32 hash of all these values")))),(0,l.kt)("h3",{id:"fulfill-66"},"fulfill"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function fulfill(bytes32 _agreementId, bytes32 _did, address _vaultAddress, address _collateralAsset, uint256 _collateralAmount, address _delegatedAsset, uint256 _delegatedAmount, uint256 _interestRateMode) external payable returns (enum ConditionStoreLibrary.ConditionState)\n")),(0,l.kt)("p",null,"It fulfills the condition if the collateral can be deposited into the vault"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_agreementId"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"the identifier of the agreement")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_did"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"the DID of the asset")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_vaultAddress"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"Address of the vault")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_collateralAsset"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"the address of the ERC-20 that will be used as collateral (i.e WETH)")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_collateralAmount"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"the amount of the ERC-20 that will be used as collateral (i.e 10 WETH)")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_delegatedAsset"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"the address of the ERC-20 that will be delegated to the borrower (i.e DAI)")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_delegatedAmount"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"the amount of the ERC-20 that will be delegated to the borrower (i.e 500 DAI)")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_interestRateMode"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"interest rate type stable 1, variable 2")))),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[0]"),(0,l.kt)("td",{parentName:"tr",align:null},"enum ConditionStoreLibrary.ConditionState"),(0,l.kt)("td",{parentName:"tr",align:null},"ConditionStoreLibrary.ConditionState the state of the condition (Fulfilled if everything went good)")))),(0,l.kt)("h2",{id:"aavecollateralwithdrawcondition-1"},"AaveCollateralWithdrawCondition"),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"Implementation of the Collateral Withdraw Condition\nThis condition allows to credit delegator withdraw the collateral and fees\nafter the agreement expiration")),(0,l.kt)("h3",{id:"aavecreditvault-9"},"aaveCreditVault"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"contract AaveCreditVault aaveCreditVault\n")),(0,l.kt)("h3",{id:"condition_type-43"},"CONDITION_TYPE"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"bytes32 CONDITION_TYPE\n")),(0,l.kt)("h3",{id:"fulfilled-28"},"Fulfilled"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"event Fulfilled(bytes32 _agreementId, bytes32 _did, bytes32 _conditionId)\n")),(0,l.kt)("h3",{id:"initialize-82"},"initialize"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function initialize(address _owner, address _conditionStoreManagerAddress) external\n")),(0,l.kt)("p",null,"initialize init the contract with the following parameters"),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"this function is called only once during the contract initialization.")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_owner"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"contract's owner account address")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_conditionStoreManagerAddress"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"condition store manager address")))),(0,l.kt)("h3",{id:"hashvalues-65"},"hashValues"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function hashValues(bytes32 _did, address _vaultAddress, address _collateralAsset) public pure returns (bytes32)\n")),(0,l.kt)("p",null,"hashValues generates the hash of condition inputs\nwith the following parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_did"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"the DID of the asset")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_vaultAddress"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"Address of the vault")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_collateralAsset"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"the address of the asset used as collateral (i.e DAI)")))),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[0]"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32 hash of all these values")))),(0,l.kt)("h3",{id:"fulfill-67"},"fulfill"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function fulfill(bytes32 _agreementId, bytes32 _did, address _vaultAddress, address _collateralAsset) external payable returns (enum ConditionStoreLibrary.ConditionState)\n")),(0,l.kt)("p",null,"It allows the borrower to repay the loan"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_agreementId"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"the identifier of the agreement")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_did"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"the DID of the asset")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_vaultAddress"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"Address of the vault")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_collateralAsset"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"the address of the asset used as collateral (i.e DAI)")))),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[0]"),(0,l.kt)("td",{parentName:"tr",align:null},"enum ConditionStoreLibrary.ConditionState"),(0,l.kt)("td",{parentName:"tr",align:null},"ConditionStoreLibrary.ConditionState the state of the condition (Fulfilled if everything went good)")))),(0,l.kt)("h2",{id:"aavecreditvault-10"},"AaveCreditVault"),(0,l.kt)("h3",{id:"lendingpool-1"},"lendingPool"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"contract ILendingPool lendingPool\n")),(0,l.kt)("h3",{id:"dataprovider-1"},"dataProvider"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"contract IProtocolDataProvider dataProvider\n")),(0,l.kt)("h3",{id:"weth-1"},"weth"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"contract IWETHGateway weth\n")),(0,l.kt)("h3",{id:"addressprovider-1"},"addressProvider"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"contract ILendingPoolAddressesProvider addressProvider\n")),(0,l.kt)("h3",{id:"priceoracle-1"},"priceOracle"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"contract IPriceOracleGetter priceOracle\n")),(0,l.kt)("h3",{id:"borrowedasset-1"},"borrowedAsset"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"address borrowedAsset\n")),(0,l.kt)("h3",{id:"borrowedamount-1"},"borrowedAmount"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"uint256 borrowedAmount\n")),(0,l.kt)("h3",{id:"nvmfee-2"},"nvmFee"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"uint256 nvmFee\n")),(0,l.kt)("h3",{id:"agreementfee-1"},"agreementFee"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"uint256 agreementFee\n")),(0,l.kt)("h3",{id:"fee_base-1"},"FEE_BASE"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"uint256 FEE_BASE\n")),(0,l.kt)("h3",{id:"treasuryaddress-1"},"treasuryAddress"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"address treasuryAddress\n")),(0,l.kt)("h3",{id:"borrower-1"},"borrower"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"address borrower\n")),(0,l.kt)("h3",{id:"lender-1"},"lender"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"address lender\n")),(0,l.kt)("h3",{id:"repayconditionid-1"},"repayConditionId"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"bytes32 repayConditionId\n")),(0,l.kt)("h3",{id:"nftid-1"},"nftId"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"uint256 nftId\n")),(0,l.kt)("h3",{id:"nftaddress-1"},"nftAddress"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"address nftAddress\n")),(0,l.kt)("h3",{id:"borrower_role-1"},"BORROWER_ROLE"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"bytes32 BORROWER_ROLE\n")),(0,l.kt)("h3",{id:"lender_role-1"},"LENDER_ROLE"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"bytes32 LENDER_ROLE\n")),(0,l.kt)("h3",{id:"condition_role-1"},"CONDITION_ROLE"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"bytes32 CONDITION_ROLE\n")),(0,l.kt)("h3",{id:"initialize-83"},"initialize"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function initialize(address _lendingPool, address _dataProvider, address _weth, uint256 _nvmFee, uint256 _agreementFee, address _treasuryAddress, address _borrower, address _lender, address[] _conditions) public\n")),(0,l.kt)("p",null,"Vault constructor, creates a unique vault for each agreement"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_lendingPool"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"Aave lending pool address")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_dataProvider"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"Aave data provider address")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_weth"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"WETH address")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_nvmFee"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"Nevermined fee that will apply to this agreeement")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_agreementFee"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"Agreement fee that lender will receive on agreement maturity")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_treasuryAddress"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"Address of nevermined contract to store fees")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_borrower"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null})),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_lender"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null})),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_conditions"),(0,l.kt)("td",{parentName:"tr",align:null},"address[]"),(0,l.kt)("td",{parentName:"tr",align:null})))),(0,l.kt)("h3",{id:"islender-1"},"isLender"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function isLender(address _address) public view returns (bool)\n")),(0,l.kt)("h3",{id:"isborrower-1"},"isBorrower"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function isBorrower(address _address) public view returns (bool)\n")),(0,l.kt)("h3",{id:"deposit-3"},"deposit"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function deposit(address _collateralAsset, uint256 _amount) public payable\n")),(0,l.kt)("p",null,"Deposit function. Receives the funds from the delegator and deposits the funds\nin the Aave contracts"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_collateralAsset"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"collateral asset that will be deposit on Aave")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_amount"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"Amount of collateral to deposit")))),(0,l.kt)("h3",{id:"approveborrower-1"},"approveBorrower"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function approveBorrower(address _borrower, uint256 _amount, address _asset, uint256 _interestRateMode) public\n")),(0,l.kt)("p",null,"Appproves delegatee to borrow funds from Aave on behalf of delegator"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_borrower"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"delegatee that will borrow the funds")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_amount"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"Amount of funds to delegate")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_asset"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"Asset to delegate the borrow")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_interestRateMode"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"interest rate type stable 1, variable 2")))),(0,l.kt)("h3",{id:"delegatedamount-1"},"delegatedAmount"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function delegatedAmount(address _borrower, address _asset, uint256 _interestRateMode) public view returns (uint256)\n")),(0,l.kt)("p",null,"Return the actual delegated amount for the borrower in the specific asset"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_borrower"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"The borrower of the funds (i.e. delgatee)")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_asset"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"The asset they are allowed to borrow")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_interestRateMode"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"interest rate type stable 1, variable 2")))),(0,l.kt)("h3",{id:"borrow-3"},"borrow"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function borrow(address _assetToBorrow, uint256 _amount, address _delgatee, uint256 _interestRateMode) public\n")),(0,l.kt)("p",null,"Borrower can call this function to borrow the delegated funds"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_assetToBorrow"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"The asset they are allowed to borrow")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_amount"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"Amount to borrow")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_delgatee"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"Address where the funds will be transfered")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_interestRateMode"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"interest rate type stable 1, variable 2")))),(0,l.kt)("h3",{id:"repay-3"},"repay"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function repay(address _asset, uint256 _interestRateMode, bytes32 _repayConditionId) public\n")),(0,l.kt)("p",null,"Repay an uncollaterised loan"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_asset"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"The asset to be repaid")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_interestRateMode"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"interest rate type stable 1, variable 2")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_repayConditionId"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"identifier of the condition id working as lock for other vault methods")))),(0,l.kt)("h3",{id:"setrepayconditionid-1"},"setRepayConditionId"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function setRepayConditionId(bytes32 _repayConditionId) public\n")),(0,l.kt)("h3",{id:"getborrowedamount-1"},"getBorrowedAmount"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function getBorrowedAmount() public view returns (uint256)\n")),(0,l.kt)("p",null,"Returns the borrowed amount from the delegatee on this agreement"),(0,l.kt)("h3",{id:"getassetprice-2"},"getAssetPrice"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function getAssetPrice(address _asset) public view returns (uint256)\n")),(0,l.kt)("p",null,"Returns the priceof the asset in the Aave oracles"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_asset"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"The asset to get the actual price")))),(0,l.kt)("h3",{id:"getcreditassetdebt-1"},"getCreditAssetDebt"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function getCreditAssetDebt() public view returns (uint256)\n")),(0,l.kt)("p",null,"Returns the total debt of the credit in the Aave protocol expressed in token units"),(0,l.kt)("h3",{id:"getactualcreditdebt-1"},"getActualCreditDebt"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function getActualCreditDebt() public view returns (uint256)\n")),(0,l.kt)("p",null,"Returns the total debt of the credit in the Aave protocol expressed in ETH units"),(0,l.kt)("h3",{id:"gettotalactualdebt-1"},"getTotalActualDebt"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function getTotalActualDebt() public view returns (uint256)\n")),(0,l.kt)("p",null,"Returns the total actual debt of the agreement credit + fees in token units"),(0,l.kt)("h3",{id:"withdrawcollateral-1"},"withdrawCollateral"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function withdrawCollateral(address _asset, address _delegator) public\n")),(0,l.kt)("p",null,"Withdraw all of a collateral as the underlying asset, if no outstanding loans delegated"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_asset"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"The underlying asset to withdraw")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_delegator"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"Delegator address that deposited the collateral")))),(0,l.kt)("h3",{id:"transfernft-1"},"transferNFT"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function transferNFT(uint256 _tokenId, address _receiver) public\n")),(0,l.kt)("p",null,"Transfer a NFT (ERC-721) locked into the vault to a receiver address"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_tokenId"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"the token id")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_receiver"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"the receiver adddress")))),(0,l.kt)("h3",{id:"_transfererc20-1"},"_transferERC20"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function _transferERC20(address _collateralAsset, uint256 _amount) internal\n")),(0,l.kt)("p",null,"Transfers the ERC20 token deposited to the Aave contracts"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_collateralAsset"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"collateral asset that will be deposit on Aave")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_amount"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"Amount of collateral to deposit")))),(0,l.kt)("h3",{id:"onerc721received-4"},"onERC721Received"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function onERC721Received(address, address, uint256 _tokenId, bytes) public virtual returns (bytes4)\n")),(0,l.kt)("p",null,"Handle the receipt of an NFT"),(0,l.kt)("p",null,"_The ERC721 smart contract calls this function on the recipient\nafter a {IERC721-safeTransferFrom}. This function MUST return the function selector,\notherwise the caller will revert the transaction. "),(0,l.kt)("p",null,"Note: the ERC721 contract address is always the message sender.\n(param not used): operator The address which called ",(0,l.kt)("inlineCode",{parentName:"p"},"safeTransferFrom")," function\n(param not used): from The address which previously owned the token_"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null}),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null})),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null}),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null})),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_tokenId"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"The NFT identifier which is being transferred (param not used): data Additional data with no specified format")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null}),(0,l.kt)("td",{parentName:"tr",align:null},"bytes"),(0,l.kt)("td",{parentName:"tr",align:null})))),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[0]"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes4"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes4 ",(0,l.kt)("inlineCode",{parentName:"td"},'bytes4(keccak256("onERC721Received(address,address,uint256,bytes)"))'))))),(0,l.kt)("h2",{id:"aaverepaycondition-1"},"AaveRepayCondition"),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"Implementation of the Aave Repay Condition\nThis condition allows to a borrower to repay a credit as part of a credit template")),(0,l.kt)("h3",{id:"aavecreditvault-11"},"aaveCreditVault"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"contract AaveCreditVault aaveCreditVault\n")),(0,l.kt)("h3",{id:"condition_type-44"},"CONDITION_TYPE"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"bytes32 CONDITION_TYPE\n")),(0,l.kt)("h3",{id:"fulfilled-29"},"Fulfilled"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"event Fulfilled(bytes32 _agreementId, bytes32 _did, bytes32 _conditionId)\n")),(0,l.kt)("h3",{id:"initialize-84"},"initialize"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function initialize(address _owner, address _conditionStoreManagerAddress) external\n")),(0,l.kt)("p",null,"initialize init the contract with the following parameters"),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"this function is called only once during the contract initialization.")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_owner"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"contract's owner account address")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_conditionStoreManagerAddress"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"condition store manager address")))),(0,l.kt)("h3",{id:"hashvalues-66"},"hashValues"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function hashValues(bytes32 _did, address _vaultAddress, address _assetToRepay, uint256 _amountToRepay, uint256 _interestRateMode) public pure returns (bytes32)\n")),(0,l.kt)("p",null,"hashValues generates the hash of condition inputs\nwith the following parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_did"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"the DID of the asset")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_vaultAddress"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"the address of vault locking the deposited collateral and the asset")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_assetToRepay"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"the address of the asset to repay (i.e DAI)")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_amountToRepay"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"Amount to repay")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_interestRateMode"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"interest rate type stable 1, variable 2")))),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[0]"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32 hash of all these values")))),(0,l.kt)("h3",{id:"fulfill-68"},"fulfill"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function fulfill(bytes32 _agreementId, bytes32 _did, address _vaultAddress, address _assetToRepay, uint256 _amountToRepay, uint256 _interestRateMode) external returns (enum ConditionStoreLibrary.ConditionState)\n")),(0,l.kt)("p",null,"It allows the borrower to repay the loan"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_agreementId"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"the identifier of the agreement")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_did"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"the DID of the asset")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_vaultAddress"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"the address of vault locking the deposited collateral and the asset")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_assetToRepay"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"the address of the asset to repay (i.e DAI)")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_amountToRepay"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"Amount to repay")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_interestRateMode"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"interest rate type stable 1, variable 2")))),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[0]"),(0,l.kt)("td",{parentName:"tr",align:null},"enum ConditionStoreLibrary.ConditionState"),(0,l.kt)("td",{parentName:"tr",align:null},"ConditionStoreLibrary.ConditionState the state of the condition (Fulfilled if everything went good)")))),(0,l.kt)("h2",{id:"escrowpaymentcondition-1"},"EscrowPaymentCondition"),(0,l.kt)("p",null,"_Implementation of the Escrow Payment Condition"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"}," The Escrow payment is reward condition in which only \n can release reward if lock and release conditions\n are fulfilled._\n")),(0,l.kt)("h3",{id:"condition_type-45"},"CONDITION_TYPE"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"bytes32 CONDITION_TYPE\n")),(0,l.kt)("h3",{id:"used_payment_id-1"},"USED_PAYMENT_ID"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"bytes32 USED_PAYMENT_ID\n")),(0,l.kt)("h3",{id:"fulfilled-30"},"Fulfilled"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"event Fulfilled(bytes32 _agreementId, address _tokenAddress, address[] _receivers, bytes32 _conditionId, uint256[] _amounts)\n")),(0,l.kt)("h3",{id:"received-3"},"Received"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"event Received(address _from, uint256 _value)\n")),(0,l.kt)("h3",{id:"receive-4"},"receive"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"receive() external payable\n")),(0,l.kt)("h3",{id:"initialize-85"},"initialize"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function initialize(address _owner, address _conditionStoreManagerAddress) external\n")),(0,l.kt)("p",null,"initialize init the\ncontract with the following parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_owner"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"contract's owner account address")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_conditionStoreManagerAddress"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"condition store manager address")))),(0,l.kt)("h3",{id:"hashvaluesmulti-1"},"hashValuesMulti"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function hashValuesMulti(bytes32 _did, uint256[] _amounts, address[] _receivers, address _returnAddress, address _lockPaymentAddress, address _tokenAddress, bytes32 _lockCondition, bytes32[] _releaseConditions) public pure returns (bytes32)\n")),(0,l.kt)("p",null,"hashValues generates the hash of condition inputs\nwith the following parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_did"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"asset decentralized identifier")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_amounts"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256[]"),(0,l.kt)("td",{parentName:"tr",align:null},"token amounts to be locked/released")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_receivers"),(0,l.kt)("td",{parentName:"tr",align:null},"address[]"),(0,l.kt)("td",{parentName:"tr",align:null},"receiver's addresses")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_returnAddress"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null})),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_lockPaymentAddress"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"lock payment contract address")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_tokenAddress"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"the ERC20 contract address to use during the payment")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_lockCondition"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"lock condition identifier")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_releaseConditions"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32[]"),(0,l.kt)("td",{parentName:"tr",align:null},"release condition identifier")))),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[0]"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32 hash of all these values")))),(0,l.kt)("h3",{id:"encodeparams-7"},"encodeParams"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function encodeParams(bytes32 _did, uint256[] _amounts, address[] _receivers, address _returnAddress, address _lockPaymentAddress, address _tokenAddress, bytes32 _lockCondition, bytes32[] _releaseConditions) public pure returns (bytes)\n")),(0,l.kt)("h3",{id:"hashvalues-67"},"hashValues"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function hashValues(bytes32 _did, uint256[] _amounts, address[] _receivers, address _returnAddress, address _lockPaymentAddress, address _tokenAddress, bytes32 _lockCondition, bytes32 _releaseCondition) public pure returns (bytes32)\n")),(0,l.kt)("h3",{id:"hashvalueslockpayment-3"},"hashValuesLockPayment"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function hashValuesLockPayment(bytes32 _did, address _rewardAddress, address _tokenAddress, uint256[] _amounts, address[] _receivers) public pure returns (bytes32)\n")),(0,l.kt)("p",null,"hashValuesLockPayment generates the hash of condition inputs\nwith the following parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_did"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"the asset decentralized identifier")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_rewardAddress"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"the contract address where the reward is locked")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_tokenAddress"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"the ERC20 contract address to use during the lock payment.         If the address is 0x0 means we won't use a ERC20 but ETH for payment")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_amounts"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256[]"),(0,l.kt)("td",{parentName:"tr",align:null},"token amounts to be locked/released")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_receivers"),(0,l.kt)("td",{parentName:"tr",align:null},"address[]"),(0,l.kt)("td",{parentName:"tr",align:null},"receiver's addresses")))),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[0]"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32 hash of all these values")))),(0,l.kt)("h3",{id:"fulfillmulti-1"},"fulfillMulti"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function fulfillMulti(bytes32 _agreementId, bytes32 _did, uint256[] _amounts, address[] _receivers, address _returnAddress, address _lockPaymentAddress, address _tokenAddress, bytes32 _lockCondition, bytes32[] _releaseConditions) public returns (enum ConditionStoreLibrary.ConditionState)\n")),(0,l.kt)("p",null,"fulfill escrow reward condition"),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"fulfill method checks whether the lock and\nrelease conditions are fulfilled in order to\nrelease/refund the reward to receiver/sender\nrespectively.")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_agreementId"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"agreement identifier")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_did"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"asset decentralized identifier")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_amounts"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256[]"),(0,l.kt)("td",{parentName:"tr",align:null},"token amounts to be locked/released")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_receivers"),(0,l.kt)("td",{parentName:"tr",align:null},"address[]"),(0,l.kt)("td",{parentName:"tr",align:null},"receiver's address")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_returnAddress"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null})),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_lockPaymentAddress"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"lock payment contract address")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_tokenAddress"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"the ERC20 contract address to use during the payment")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_lockCondition"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"lock condition identifier")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_releaseConditions"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32[]"),(0,l.kt)("td",{parentName:"tr",align:null},"release condition identifier")))),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[0]"),(0,l.kt)("td",{parentName:"tr",align:null},"enum ConditionStoreLibrary.ConditionState"),(0,l.kt)("td",{parentName:"tr",align:null},"condition state (Fulfilled/Aborted)")))),(0,l.kt)("h3",{id:"args-3"},"Args"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"struct Args {\n  bytes32 _agreementId;\n  bytes32 _did;\n  uint256[] _amounts;\n  address[] _receivers;\n  address _returnAddress;\n  address _lockPaymentAddress;\n  address _tokenAddress;\n  bytes32 _lockCondition;\n  bytes32[] _releaseConditions;\n}\n")),(0,l.kt)("h3",{id:"fulfillkludge-3"},"fulfillKludge"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function fulfillKludge(struct EscrowPaymentCondition.Args a) internal returns (enum ConditionStoreLibrary.ConditionState)\n")),(0,l.kt)("h3",{id:"fulfill-69"},"fulfill"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function fulfill(bytes32 _agreementId, bytes32 _did, uint256[] _amounts, address[] _receivers, address _returnAddress, address _lockPaymentAddress, address _tokenAddress, bytes32 _lockCondition, bytes32 _releaseCondition) external returns (enum ConditionStoreLibrary.ConditionState)\n")),(0,l.kt)("h3",{id:"_transferandfulfillerc20-1"},"_transferAndFulfillERC20"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function _transferAndFulfillERC20(bytes32 _id, address _tokenAddress, address[] _receivers, uint256[] _amounts) private returns (enum ConditionStoreLibrary.ConditionState)\n")),(0,l.kt)("p",null,"_transferAndFulfill transfer ERC20 tokens and\nfulfill the condition"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_id"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"condition identifier")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_tokenAddress"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"the ERC20 contract address to use during the payment")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_receivers"),(0,l.kt)("td",{parentName:"tr",align:null},"address[]"),(0,l.kt)("td",{parentName:"tr",align:null},"receiver's address")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_amounts"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256[]"),(0,l.kt)("td",{parentName:"tr",align:null},"token amount to be locked/released")))),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[0]"),(0,l.kt)("td",{parentName:"tr",align:null},"enum ConditionStoreLibrary.ConditionState"),(0,l.kt)("td",{parentName:"tr",align:null},"condition state (Fulfilled/Aborted)")))),(0,l.kt)("h3",{id:"_transferandfulfilleth-1"},"_transferAndFulfillETH"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function _transferAndFulfillETH(bytes32 _id, address[] _receivers, uint256[] _amounts) private returns (enum ConditionStoreLibrary.ConditionState)\n")),(0,l.kt)("p",null,"_transferAndFulfill transfer ETH and\nfulfill the condition"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_id"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"condition identifier")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_receivers"),(0,l.kt)("td",{parentName:"tr",align:null},"address[]"),(0,l.kt)("td",{parentName:"tr",align:null},"receiver's address")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_amounts"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256[]"),(0,l.kt)("td",{parentName:"tr",align:null},"token amount to be locked/released")))),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[0]"),(0,l.kt)("td",{parentName:"tr",align:null},"enum ConditionStoreLibrary.ConditionState"),(0,l.kt)("td",{parentName:"tr",align:null},"condition state (Fulfilled/Aborted)")))),(0,l.kt)("h2",{id:"inftescrow-1"},"INFTEscrow"),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"Common interface for ERC-721 and ERC-1155")),(0,l.kt)("h3",{id:"fulfilled-31"},"Fulfilled"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"event Fulfilled(bytes32 _agreementId, address _tokenAddress, bytes32 _did, address _receivers, bytes32 _conditionId, uint256 _amounts)\n")),(0,l.kt)("h2",{id:"nft721escrowpaymentcondition-1"},"NFT721EscrowPaymentCondition"),(0,l.kt)("p",null,"_Implementation of the Escrow Payment Condition"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"}," The Escrow payment is reward condition in which only \n can release reward if lock and release conditions\n are fulfilled._\n")),(0,l.kt)("h3",{id:"condition_type-46"},"CONDITION_TYPE"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"bytes32 CONDITION_TYPE\n")),(0,l.kt)("h3",{id:"received-4"},"Received"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"event Received(address _from, uint256 _value)\n")),(0,l.kt)("h3",{id:"receive-5"},"receive"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"receive() external payable\n")),(0,l.kt)("h3",{id:"initialize-86"},"initialize"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function initialize(address _owner, address _conditionStoreManagerAddress) external\n")),(0,l.kt)("p",null,"initialize init the\ncontract with the following parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_owner"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"contract's owner account address")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_conditionStoreManagerAddress"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"condition store manager address")))),(0,l.kt)("h3",{id:"hashvalues-68"},"hashValues"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function hashValues(bytes32 _did, uint256 _amounts, address _receivers, address _returnAddress, address _lockPaymentAddress, address _tokenAddress, bytes32 _lockCondition, bytes32[] _releaseConditions) public pure returns (bytes32)\n")),(0,l.kt)("p",null,"hashValues generates the hash of condition inputs\nwith the following parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_did"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"asset decentralized identifier")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_amounts"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"token amounts to be locked/released")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_receivers"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"receiver's addresses")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_returnAddress"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null})),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_lockPaymentAddress"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"lock payment contract address")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_tokenAddress"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"the ERC20 contract address to use during the payment")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_lockCondition"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"lock condition identifier")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_releaseConditions"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32[]"),(0,l.kt)("td",{parentName:"tr",align:null},"release condition identifier")))),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[0]"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32 hash of all these values")))),(0,l.kt)("h3",{id:"hashvalueslockpayment-4"},"hashValuesLockPayment"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function hashValuesLockPayment(bytes32 _did, address _lockAddress, address _nftContractAddress, uint256 _amount, address _receiver) public pure returns (bytes32)\n")),(0,l.kt)("p",null,"hashValuesLockPayment generates the hash of condition inputs\nwith the following parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_did"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"the asset decentralized identifier")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_lockAddress"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"the contract address where the reward is locked")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_nftContractAddress"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"the ERC20 contract address to use during the lock payment.         If the address is 0x0 means we won't use a ERC20 but ETH for payment")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_amount"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"token amounts to be locked/released")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_receiver"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"receiver's addresses")))),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[0]"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32 hash of all these values")))),(0,l.kt)("h3",{id:"fulfill-70"},"fulfill"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function fulfill(bytes32 _agreementId, bytes32 _did, uint256 _amount, address _receiver, address _returnAddress, address _lockPaymentAddress, address _tokenAddress, bytes32 _lockCondition, bytes32[] _releaseConditions) external returns (enum ConditionStoreLibrary.ConditionState)\n")),(0,l.kt)("p",null,"fulfill escrow reward condition"),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"fulfill method checks whether the lock and\nrelease conditions are fulfilled in order to\nrelease/refund the reward to receiver/sender\nrespectively.")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_agreementId"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"agreement identifier")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_did"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"asset decentralized identifier")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_amount"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"token amounts to be locked/released")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_receiver"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"receiver's address")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_returnAddress"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null})),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_lockPaymentAddress"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"lock payment contract address")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_tokenAddress"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"the ERC20 contract address to use during the payment")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_lockCondition"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"lock condition identifier")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_releaseConditions"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32[]"),(0,l.kt)("td",{parentName:"tr",align:null},"release condition identifier")))),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[0]"),(0,l.kt)("td",{parentName:"tr",align:null},"enum ConditionStoreLibrary.ConditionState"),(0,l.kt)("td",{parentName:"tr",align:null},"condition state (Fulfilled/Aborted)")))),(0,l.kt)("h3",{id:"args-4"},"Args"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"struct Args {\n  bytes32 _agreementId;\n  bytes32 _did;\n  uint256 _amount;\n  address _receiver;\n  address _returnAddress;\n  address _lockPaymentAddress;\n  address _tokenAddress;\n  bytes32 _lockCondition;\n  bytes32[] _releaseConditions;\n}\n")),(0,l.kt)("h3",{id:"fulfillkludge-4"},"fulfillKludge"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function fulfillKludge(struct NFT721EscrowPaymentCondition.Args a) internal returns (enum ConditionStoreLibrary.ConditionState)\n")),(0,l.kt)("h3",{id:"_transferandfulfillnft-2"},"_transferAndFulfillNFT"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function _transferAndFulfillNFT(bytes32 _agreementId, bytes32 _id, bytes32 _did, address _tokenAddress, address _receiver, uint256 _amount) private returns (enum ConditionStoreLibrary.ConditionState)\n")),(0,l.kt)("p",null,"_transferAndFulfill transfer ERC20 tokens and\nfulfill the condition"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_agreementId"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null})),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_id"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"condition identifier")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_did"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null})),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_tokenAddress"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"the ERC20 contract address to use during the payment")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_receiver"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"receiver's address")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_amount"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"token amount to be locked/released")))),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[0]"),(0,l.kt)("td",{parentName:"tr",align:null},"enum ConditionStoreLibrary.ConditionState"),(0,l.kt)("td",{parentName:"tr",align:null},"condition state (Fulfilled/Aborted)")))),(0,l.kt)("h3",{id:"onerc721received-5"},"onERC721Received"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function onERC721Received(address, address, uint256, bytes) public virtual returns (bytes4)\n")),(0,l.kt)("h2",{id:"nftescrowpaymentcondition-1"},"NFTEscrowPaymentCondition"),(0,l.kt)("p",null,"_Implementation of the Escrow Payment Condition"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"}," The Escrow payment is reward condition in which only \n can release reward if lock and release conditions\n are fulfilled._\n")),(0,l.kt)("h3",{id:"condition_type-47"},"CONDITION_TYPE"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"bytes32 CONDITION_TYPE\n")),(0,l.kt)("h3",{id:"lock_condition_type-1"},"LOCK_CONDITION_TYPE"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"bytes32 LOCK_CONDITION_TYPE\n")),(0,l.kt)("h3",{id:"received-5"},"Received"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"event Received(address _from, uint256 _value)\n")),(0,l.kt)("h3",{id:"receive-6"},"receive"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"receive() external payable\n")),(0,l.kt)("h3",{id:"initialize-87"},"initialize"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function initialize(address _owner, address _conditionStoreManagerAddress) external\n")),(0,l.kt)("p",null,"initialize init the\ncontract with the following parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_owner"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"contract's owner account address")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_conditionStoreManagerAddress"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"condition store manager address")))),(0,l.kt)("h3",{id:"hashvalues-69"},"hashValues"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function hashValues(bytes32 _did, uint256 _amounts, address _receivers, address _returnAddress, address _lockPaymentAddress, address _tokenAddress, bytes32 _lockCondition, bytes32[] _releaseConditions) public pure returns (bytes32)\n")),(0,l.kt)("p",null,"hashValues generates the hash of condition inputs\nwith the following parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_did"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"asset decentralized identifier")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_amounts"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"token amounts to be locked/released")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_receivers"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"receiver's addresses")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_returnAddress"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null})),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_lockPaymentAddress"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"lock payment contract address")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_tokenAddress"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"the ERC20 contract address to use during the payment")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_lockCondition"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"lock condition identifier")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_releaseConditions"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32[]"),(0,l.kt)("td",{parentName:"tr",align:null},"release condition identifier")))),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[0]"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32 hash of all these values")))),(0,l.kt)("h3",{id:"hashvalueslockpayment-5"},"hashValuesLockPayment"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function hashValuesLockPayment(bytes32 _did, address _lockAddress, address _nftContractAddress, uint256 _amount, address _receiver) public pure returns (bytes32)\n")),(0,l.kt)("p",null,"hashValuesLockPayment generates the hash of condition inputs\nwith the following parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_did"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"the asset decentralized identifier")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_lockAddress"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"the contract address where the reward is locked")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_nftContractAddress"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"the ERC20 contract address to use during the lock payment.         If the address is 0x0 means we won't use a ERC20 but ETH for payment")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_amount"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"token amounts to be locked/released")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_receiver"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"receiver's addresses")))),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[0]"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32 hash of all these values")))),(0,l.kt)("h3",{id:"fulfill-71"},"fulfill"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function fulfill(bytes32 _agreementId, bytes32 _did, uint256 _amount, address _receiver, address _returnAddress, address _lockPaymentAddress, address _tokenAddress, bytes32 _lockCondition, bytes32[] _releaseConditions) external returns (enum ConditionStoreLibrary.ConditionState)\n")),(0,l.kt)("p",null,"fulfill escrow reward condition"),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"fulfill method checks whether the lock and\nrelease conditions are fulfilled in order to\nrelease/refund the reward to receiver/sender\nrespectively.")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_agreementId"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"agreement identifier")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_did"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"asset decentralized identifier")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_amount"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"token amounts to be locked/released")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_receiver"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"receiver's address")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_returnAddress"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null})),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_lockPaymentAddress"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"lock payment contract address")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_tokenAddress"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"the ERC20 contract address to use during the payment")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_lockCondition"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"lock condition identifier")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_releaseConditions"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32[]"),(0,l.kt)("td",{parentName:"tr",align:null},"release condition identifier")))),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[0]"),(0,l.kt)("td",{parentName:"tr",align:null},"enum ConditionStoreLibrary.ConditionState"),(0,l.kt)("td",{parentName:"tr",align:null},"condition state (Fulfilled/Aborted)")))),(0,l.kt)("h3",{id:"args-5"},"Args"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"struct Args {\n  bytes32 _agreementId;\n  bytes32 _did;\n  uint256 _amount;\n  address _receiver;\n  address _returnAddress;\n  address _lockPaymentAddress;\n  address _tokenAddress;\n  bytes32 _lockCondition;\n  bytes32[] _releaseConditions;\n}\n")),(0,l.kt)("h3",{id:"fulfillkludge-5"},"fulfillKludge"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function fulfillKludge(struct NFTEscrowPaymentCondition.Args a) internal returns (enum ConditionStoreLibrary.ConditionState)\n")),(0,l.kt)("h3",{id:"_transferandfulfillnft-3"},"_transferAndFulfillNFT"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function _transferAndFulfillNFT(bytes32 _agreementId, bytes32 _id, bytes32 _did, address _tokenAddress, address _receiver, uint256 _amount) private returns (enum ConditionStoreLibrary.ConditionState)\n")),(0,l.kt)("p",null,"_transferAndFulfill transfer ERC20 tokens and\nfulfill the condition"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_agreementId"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null})),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_id"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"condition identifier")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_did"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null})),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_tokenAddress"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"the ERC20 contract address to use during the payment")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_receiver"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"receiver's address")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_amount"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"token amount to be locked/released")))),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[0]"),(0,l.kt)("td",{parentName:"tr",align:null},"enum ConditionStoreLibrary.ConditionState"),(0,l.kt)("td",{parentName:"tr",align:null},"condition state (Fulfilled/Aborted)")))),(0,l.kt)("h3",{id:"erc1155_accepted-3"},"ERC1155_ACCEPTED"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"bytes4 ERC1155_ACCEPTED\n")),(0,l.kt)("h3",{id:"erc1155_batch_accepted-3"},"ERC1155_BATCH_ACCEPTED"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"bytes4 ERC1155_BATCH_ACCEPTED\n")),(0,l.kt)("h3",{id:"onerc1155received-3"},"onERC1155Received"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function onERC1155Received(address, address, uint256, uint256, bytes) external pure returns (bytes4)\n")),(0,l.kt)("h3",{id:"onerc1155batchreceived-3"},"onERC1155BatchReceived"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function onERC1155BatchReceived(address, address, uint256[], uint256[], bytes) external pure returns (bytes4)\n")),(0,l.kt)("h3",{id:"supportsinterface-6"},"supportsInterface"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function supportsInterface(bytes4 interfaceId) external pure returns (bool)\n")),(0,l.kt)("p",null,"_Returns true if this contract implements the interface defined by\n",(0,l.kt)("inlineCode",{parentName:"p"},"interfaceId"),". See the corresponding\n",(0,l.kt)("a",{parentName:"p",href:"https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified%5BEIP"},"https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP")," section]\nto learn more about how these ids are created."),(0,l.kt)("p",null,"This function call must use less than 30 000 gas._"),(0,l.kt)("h2",{id:"reward-1"},"Reward"),(0,l.kt)("p",null,"_Implementation of the Reward."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"}," Generic reward condition_\n")),(0,l.kt)("h2",{id:"invmconfig-1"},"INVMConfig"),(0,l.kt)("h3",{id:"governor_role-1"},"GOVERNOR_ROLE"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"bytes32 GOVERNOR_ROLE\n")),(0,l.kt)("h3",{id:"neverminedconfigchange-1"},"NeverminedConfigChange"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"event NeverminedConfigChange(address _whoChanged, bytes32 _parameter)\n")),(0,l.kt)("p",null,"Event that is emitted when a parameter is changed"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_whoChanged"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"the address of the governor changing the parameter")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_parameter"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"the hash of the name of the parameter changed")))),(0,l.kt)("h3",{id:"initialize-88"},"initialize"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function initialize(address _owner, address _governor) external virtual\n")),(0,l.kt)("p",null,"Used to initialize the contract during delegator constructor"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_owner"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"The owner of the contract")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_governor"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"The address to be granted with the ",(0,l.kt)("inlineCode",{parentName:"td"},"GOVERNOR_ROLE"))))),(0,l.kt)("h3",{id:"setmarketplacefees-4"},"setMarketplaceFees"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function setMarketplaceFees(uint256 _marketplaceFee, address _feeReceiver) external virtual\n")),(0,l.kt)("p",null,"The governor can update the Nevermined Marketplace fees"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_marketplaceFee"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"new marketplace fee")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_feeReceiver"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"The address receiving the fee")))),(0,l.kt)("h3",{id:"isgovernor-2"},"isGovernor"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function isGovernor(address _address) external view virtual returns (bool)\n")),(0,l.kt)("p",null,"Indicates if an address is a having the GOVERNOR role"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_address"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"The address to validate")))),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[0]"),(0,l.kt)("td",{parentName:"tr",align:null},"bool"),(0,l.kt)("td",{parentName:"tr",align:null},"true if is a governor")))),(0,l.kt)("h3",{id:"getmarketplacefee-2"},"getMarketplaceFee"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function getMarketplaceFee() external view virtual returns (uint256)\n")),(0,l.kt)("p",null,"Returns the marketplace fee"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[0]"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"the marketplace fee")))),(0,l.kt)("h3",{id:"getfeereceiver-2"},"getFeeReceiver"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function getFeeReceiver() external view virtual returns (address)\n")),(0,l.kt)("p",null,"Returns the receiver address of the marketplace fee"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[0]"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"the receiver address")))),(0,l.kt)("h2",{id:"neverminedconfig-1"},"NeverminedConfig"),(0,l.kt)("h3",{id:"marketplacefee-1"},"marketplaceFee"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"uint256 marketplaceFee\n")),(0,l.kt)("h3",{id:"feereceiver-1"},"feeReceiver"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"address feeReceiver\n")),(0,l.kt)("h3",{id:"initialize-89"},"initialize"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function initialize(address _owner, address _governor) public\n")),(0,l.kt)("p",null,"Used to initialize the contract during delegator constructor"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_owner"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"The owner of the contract")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_governor"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"The address to be granted with the ",(0,l.kt)("inlineCode",{parentName:"td"},"GOVERNOR_ROLE"))))),(0,l.kt)("h3",{id:"setmarketplacefees-5"},"setMarketplaceFees"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function setMarketplaceFees(uint256 _marketplaceFee, address _feeReceiver) external virtual\n")),(0,l.kt)("p",null,"The governor can update the Nevermined Marketplace fees"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_marketplaceFee"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"new marketplace fee")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_feeReceiver"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"The address receiving the fee")))),(0,l.kt)("h3",{id:"setgovernor-1"},"setGovernor"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function setGovernor(address _address) external\n")),(0,l.kt)("h3",{id:"isgovernor-3"},"isGovernor"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function isGovernor(address _address) external view returns (bool)\n")),(0,l.kt)("p",null,"Indicates if an address is a having the GOVERNOR role"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_address"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"The address to validate")))),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[0]"),(0,l.kt)("td",{parentName:"tr",align:null},"bool"),(0,l.kt)("td",{parentName:"tr",align:null},"true if is a governor")))),(0,l.kt)("h3",{id:"getmarketplacefee-3"},"getMarketplaceFee"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function getMarketplaceFee() external view returns (uint256)\n")),(0,l.kt)("p",null,"Returns the marketplace fee"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[0]"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"the marketplace fee")))),(0,l.kt)("h3",{id:"getfeereceiver-3"},"getFeeReceiver"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function getFeeReceiver() external view returns (address)\n")),(0,l.kt)("p",null,"Returns the receiver address of the marketplace fee"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[0]"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"the receiver address")))),(0,l.kt)("h3",{id:"onlygovernor-1"},"onlyGovernor"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"modifier onlyGovernor(address _address)\n")),(0,l.kt)("h2",{id:"ierc20-1"},"IERC20"),(0,l.kt)("h3",{id:"totalsupply-1"},"totalSupply"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function totalSupply() external view returns (uint256)\n")),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"Returns the amount of tokens in existence.")),(0,l.kt)("h3",{id:"balanceof-2"},"balanceOf"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function balanceOf(address account) external view returns (uint256)\n")),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"Returns the amount of tokens owned by ",(0,l.kt)("inlineCode",{parentName:"em"},"account"),".")),(0,l.kt)("h3",{id:"transfer-3"},"transfer"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function transfer(address recipient, uint256 amount) external returns (bool)\n")),(0,l.kt)("p",null,"_Moves ",(0,l.kt)("inlineCode",{parentName:"p"},"amount")," tokens from the caller's account to ",(0,l.kt)("inlineCode",{parentName:"p"},"recipient"),"."),(0,l.kt)("p",null,"Returns a boolean value indicating whether the operation succeeded."),(0,l.kt)("p",null,"Emits a {Transfer} event._"),(0,l.kt)("h3",{id:"allowance-1"},"allowance"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function allowance(address owner, address spender) external view returns (uint256)\n")),(0,l.kt)("p",null,"_Returns the remaining number of tokens that ",(0,l.kt)("inlineCode",{parentName:"p"},"spender")," will be\nallowed to spend on behalf of ",(0,l.kt)("inlineCode",{parentName:"p"},"owner")," through {transferFrom}. This is\nzero by default."),(0,l.kt)("p",null,"This value changes when {approve} or {transferFrom} are called._"),(0,l.kt)("h3",{id:"approve-2"},"approve"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function approve(address spender, uint256 amount) external returns (bool)\n")),(0,l.kt)("p",null,"_Sets ",(0,l.kt)("inlineCode",{parentName:"p"},"amount")," as the allowance of ",(0,l.kt)("inlineCode",{parentName:"p"},"spender")," over the caller's tokens."),(0,l.kt)("p",null,"Returns a boolean value indicating whether the operation succeeded."),(0,l.kt)("p",null,"IMPORTANT: Beware that changing an allowance with this method brings the risk\nthat someone may use both the old and the new allowance by unfortunate\ntransaction ordering. One possible solution to mitigate this race\ncondition is to first reduce the spender's allowance to 0 and set the\ndesired value afterwards:\n",(0,l.kt)("a",{parentName:"p",href:"https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729"},"https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729")),(0,l.kt)("p",null,"Emits an {Approval} event._"),(0,l.kt)("h3",{id:"transferfrom-1"},"transferFrom"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function transferFrom(address sender, address recipient, uint256 amount) external returns (bool)\n")),(0,l.kt)("p",null,"_Moves ",(0,l.kt)("inlineCode",{parentName:"p"},"amount")," tokens from ",(0,l.kt)("inlineCode",{parentName:"p"},"sender")," to ",(0,l.kt)("inlineCode",{parentName:"p"},"recipient")," using the\nallowance mechanism. ",(0,l.kt)("inlineCode",{parentName:"p"},"amount")," is then deducted from the caller's\nallowance."),(0,l.kt)("p",null,"Returns a boolean value indicating whether the operation succeeded."),(0,l.kt)("p",null,"Emits a {Transfer} event._"),(0,l.kt)("h3",{id:"transfer-4"},"Transfer"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"event Transfer(address from, address to, uint256 value)\n")),(0,l.kt)("p",null,"_Emitted when ",(0,l.kt)("inlineCode",{parentName:"p"},"value")," tokens are moved from one account (",(0,l.kt)("inlineCode",{parentName:"p"},"from"),") to\nanother (",(0,l.kt)("inlineCode",{parentName:"p"},"to"),")."),(0,l.kt)("p",null,"Note that ",(0,l.kt)("inlineCode",{parentName:"p"},"value")," may be zero._"),(0,l.kt)("h3",{id:"approval-1"},"Approval"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"event Approval(address owner, address spender, uint256 value)\n")),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"Emitted when the allowance of a ",(0,l.kt)("inlineCode",{parentName:"em"},"spender")," for an ",(0,l.kt)("inlineCode",{parentName:"em"},"owner")," is set by\na call to {approve}. ",(0,l.kt)("inlineCode",{parentName:"em"},"value")," is the new allowance.")),(0,l.kt)("h2",{id:"ipriceoraclegetter-1"},"IPriceOracleGetter"),(0,l.kt)("p",null,"Interface for the Aave price oracle."),(0,l.kt)("h3",{id:"getassetprice-3"},"getAssetPrice"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function getAssetPrice(address asset) external view returns (uint256)\n")),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"returns the asset price in ETH")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"asset"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"the address of the asset")))),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[0]"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"the ETH price of the asset")))),(0,l.kt)("h2",{id:"iprotocoldataprovider-1"},"IProtocolDataProvider"),(0,l.kt)("h3",{id:"tokendata-1"},"TokenData"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"struct TokenData {\n  string symbol;\n  address tokenAddress;\n}\n")),(0,l.kt)("h3",{id:"addresses_provider-1"},"ADDRESSES_PROVIDER"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function ADDRESSES_PROVIDER() external view returns (contract ILendingPoolAddressesProvider)\n")),(0,l.kt)("h3",{id:"getallreservestokens-1"},"getAllReservesTokens"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function getAllReservesTokens() external view returns (struct IProtocolDataProvider.TokenData[])\n")),(0,l.kt)("h3",{id:"getallatokens-1"},"getAllATokens"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function getAllATokens() external view returns (struct IProtocolDataProvider.TokenData[])\n")),(0,l.kt)("h3",{id:"getreserveconfigurationdata-1"},"getReserveConfigurationData"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function getReserveConfigurationData(address asset) external view returns (uint256 decimals, uint256 ltv, uint256 liquidationThreshold, uint256 liquidationBonus, uint256 reserveFactor, bool usageAsCollateralEnabled, bool borrowingEnabled, bool stableBorrowRateEnabled, bool isActive, bool isFrozen)\n")),(0,l.kt)("h3",{id:"getreservedata-2"},"getReserveData"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function getReserveData(address asset) external view returns (uint256 availableLiquidity, uint256 totalStableDebt, uint256 totalVariableDebt, uint256 liquidityRate, uint256 variableBorrowRate, uint256 stableBorrowRate, uint256 averageStableBorrowRate, uint256 liquidityIndex, uint256 variableBorrowIndex, uint40 lastUpdateTimestamp)\n")),(0,l.kt)("h3",{id:"getuserreservedata-1"},"getUserReserveData"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function getUserReserveData(address asset, address user) external view returns (uint256 currentATokenBalance, uint256 currentStableDebt, uint256 currentVariableDebt, uint256 principalStableDebt, uint256 scaledVariableDebt, uint256 stableBorrowRate, uint256 liquidityRate, uint40 stableRateLastUpdated, bool usageAsCollateralEnabled)\n")),(0,l.kt)("h3",{id:"getreservetokensaddresses-1"},"getReserveTokensAddresses"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function getReserveTokensAddresses(address asset) external view returns (address aTokenAddress, address stableDebtTokenAddress, address variableDebtTokenAddress)\n")),(0,l.kt)("h2",{id:"ilendingpooladdressesprovider-1"},"ILendingPoolAddressesProvider"),(0,l.kt)("h3",{id:"marketidset-1"},"MarketIdSet"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"event MarketIdSet(string newMarketId)\n")),(0,l.kt)("h3",{id:"lendingpoolupdated-1"},"LendingPoolUpdated"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"event LendingPoolUpdated(address newAddress)\n")),(0,l.kt)("h3",{id:"configurationadminupdated-1"},"ConfigurationAdminUpdated"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"event ConfigurationAdminUpdated(address newAddress)\n")),(0,l.kt)("h3",{id:"emergencyadminupdated-1"},"EmergencyAdminUpdated"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"event EmergencyAdminUpdated(address newAddress)\n")),(0,l.kt)("h3",{id:"lendingpoolconfiguratorupdated-1"},"LendingPoolConfiguratorUpdated"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"event LendingPoolConfiguratorUpdated(address newAddress)\n")),(0,l.kt)("h3",{id:"lendingpoolcollateralmanagerupdated-1"},"LendingPoolCollateralManagerUpdated"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"event LendingPoolCollateralManagerUpdated(address newAddress)\n")),(0,l.kt)("h3",{id:"priceoracleupdated-1"},"PriceOracleUpdated"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"event PriceOracleUpdated(address newAddress)\n")),(0,l.kt)("h3",{id:"lendingrateoracleupdated-1"},"LendingRateOracleUpdated"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"event LendingRateOracleUpdated(address newAddress)\n")),(0,l.kt)("h3",{id:"proxycreated-1"},"ProxyCreated"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"event ProxyCreated(bytes32 id, address newAddress)\n")),(0,l.kt)("h3",{id:"addressset-1"},"AddressSet"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"event AddressSet(bytes32 id, address newAddress, bool hasProxy)\n")),(0,l.kt)("h3",{id:"getmarketid-1"},"getMarketId"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function getMarketId() external view returns (string)\n")),(0,l.kt)("h3",{id:"setmarketid-1"},"setMarketId"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function setMarketId(string marketId) external\n")),(0,l.kt)("h3",{id:"setaddress-1"},"setAddress"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function setAddress(bytes32 id, address newAddress) external\n")),(0,l.kt)("h3",{id:"setaddressasproxy-1"},"setAddressAsProxy"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function setAddressAsProxy(bytes32 id, address impl) external\n")),(0,l.kt)("h3",{id:"getaddress-1"},"getAddress"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function getAddress(bytes32 id) external view returns (address)\n")),(0,l.kt)("h3",{id:"getlendingpool-1"},"getLendingPool"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function getLendingPool() external view returns (address)\n")),(0,l.kt)("h3",{id:"setlendingpoolimpl-1"},"setLendingPoolImpl"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function setLendingPoolImpl(address pool) external\n")),(0,l.kt)("h3",{id:"getlendingpoolconfigurator-1"},"getLendingPoolConfigurator"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function getLendingPoolConfigurator() external view returns (address)\n")),(0,l.kt)("h3",{id:"setlendingpoolconfiguratorimpl-1"},"setLendingPoolConfiguratorImpl"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function setLendingPoolConfiguratorImpl(address configurator) external\n")),(0,l.kt)("h3",{id:"getlendingpoolcollateralmanager-1"},"getLendingPoolCollateralManager"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function getLendingPoolCollateralManager() external view returns (address)\n")),(0,l.kt)("h3",{id:"setlendingpoolcollateralmanager-1"},"setLendingPoolCollateralManager"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function setLendingPoolCollateralManager(address manager) external\n")),(0,l.kt)("h3",{id:"getpooladmin-1"},"getPoolAdmin"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function getPoolAdmin() external view returns (address)\n")),(0,l.kt)("h3",{id:"setpooladmin-1"},"setPoolAdmin"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function setPoolAdmin(address admin) external\n")),(0,l.kt)("h3",{id:"getemergencyadmin-1"},"getEmergencyAdmin"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function getEmergencyAdmin() external view returns (address)\n")),(0,l.kt)("h3",{id:"setemergencyadmin-1"},"setEmergencyAdmin"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function setEmergencyAdmin(address admin) external\n")),(0,l.kt)("h3",{id:"getpriceoracle-1"},"getPriceOracle"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function getPriceOracle() external view returns (address)\n")),(0,l.kt)("h3",{id:"setpriceoracle-1"},"setPriceOracle"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function setPriceOracle(address priceOracle) external\n")),(0,l.kt)("h3",{id:"getlendingrateoracle-1"},"getLendingRateOracle"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function getLendingRateOracle() external view returns (address)\n")),(0,l.kt)("h3",{id:"setlendingrateoracle-1"},"setLendingRateOracle"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function setLendingRateOracle(address lendingRateOracle) external\n")),(0,l.kt)("h2",{id:"ilendingpool-1"},"ILendingPool"),(0,l.kt)("h3",{id:"deposit-4"},"Deposit"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"event Deposit(address reserve, address user, address onBehalfOf, uint256 amount, uint16 referral)\n")),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"Emitted on deposit()")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"reserve"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"The address of the underlying asset of the reserve")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"user"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"The address initiating the deposit")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"onBehalfOf"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"The beneficiary of the deposit, receiving the aTokens")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"amount"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"The amount deposited")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"referral"),(0,l.kt)("td",{parentName:"tr",align:null},"uint16"),(0,l.kt)("td",{parentName:"tr",align:null},"The referral code used")))),(0,l.kt)("h3",{id:"withdraw-5"},"Withdraw"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"event Withdraw(address reserve, address user, address to, uint256 amount)\n")),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"Emitted on withdraw()")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"reserve"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"The address of the underlyng asset being withdrawn")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"user"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"The address initiating the withdrawal, owner of aTokens")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"to"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"Address that will receive the underlying")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"amount"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"The amount to be withdrawn")))),(0,l.kt)("h3",{id:"borrow-4"},"Borrow"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"event Borrow(address reserve, address user, address onBehalfOf, uint256 amount, uint256 borrowRateMode, uint256 borrowRate, uint16 referral)\n")),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"Emitted on borrow() and flashLoan() when debt needs to be opened")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"reserve"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"The address of the underlying asset being borrowed")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"user"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"The address of the user initiating the borrow(), receiving the funds on borrow() or just initiator of the transaction on flashLoan()")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"onBehalfOf"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"The address that will be getting the debt")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"amount"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"The amount borrowed out")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"borrowRateMode"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"The rate mode: 1 for Stable, 2 for Variable")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"borrowRate"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"The numeric rate at which the user has borrowed")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"referral"),(0,l.kt)("td",{parentName:"tr",align:null},"uint16"),(0,l.kt)("td",{parentName:"tr",align:null},"The referral code used")))),(0,l.kt)("h3",{id:"repay-4"},"Repay"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"event Repay(address reserve, address user, address repayer, uint256 amount)\n")),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"Emitted on repay()")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"reserve"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"The address of the underlying asset of the reserve")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"user"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"The beneficiary of the repayment, getting his debt reduced")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"repayer"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"The address of the user initiating the repay(), providing the funds")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"amount"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"The amount repaid")))),(0,l.kt)("h3",{id:"swap-1"},"Swap"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"event Swap(address reserve, address user, uint256 rateMode)\n")),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"Emitted on swapBorrowRateMode()")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"reserve"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"The address of the underlying asset of the reserve")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"user"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"The address of the user swapping his rate mode")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"rateMode"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"The rate mode that the user wants to swap to")))),(0,l.kt)("h3",{id:"reserveusedascollateralenabled-1"},"ReserveUsedAsCollateralEnabled"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"event ReserveUsedAsCollateralEnabled(address reserve, address user)\n")),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"Emitted on setUserUseReserveAsCollateral()")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"reserve"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"The address of the underlying asset of the reserve")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"user"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"The address of the user enabling the usage as collateral")))),(0,l.kt)("h3",{id:"reserveusedascollateraldisabled-1"},"ReserveUsedAsCollateralDisabled"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"event ReserveUsedAsCollateralDisabled(address reserve, address user)\n")),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"Emitted on setUserUseReserveAsCollateral()")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"reserve"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"The address of the underlying asset of the reserve")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"user"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"The address of the user enabling the usage as collateral")))),(0,l.kt)("h3",{id:"rebalancestableborrowrate-2"},"RebalanceStableBorrowRate"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"event RebalanceStableBorrowRate(address reserve, address user)\n")),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"Emitted on rebalanceStableBorrowRate()")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"reserve"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"The address of the underlying asset of the reserve")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"user"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"The address of the user for which the rebalance has been executed")))),(0,l.kt)("h3",{id:"flashloan-2"},"FlashLoan"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"event FlashLoan(address target, address initiator, address asset, uint256 amount, uint256 premium, uint16 referralCode)\n")),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"Emitted on flashLoan()")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"target"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"The address of the flash loan receiver contract")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"initiator"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"The address initiating the flash loan")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"asset"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"The address of the asset being flash borrowed")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"amount"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"The amount flash borrowed")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"premium"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"The fee flash borrowed")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"referralCode"),(0,l.kt)("td",{parentName:"tr",align:null},"uint16"),(0,l.kt)("td",{parentName:"tr",align:null},"The referral code used")))),(0,l.kt)("h3",{id:"paused-2"},"Paused"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"event Paused()\n")),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"Emitted when the pause is triggered.")),(0,l.kt)("h3",{id:"unpaused-1"},"Unpaused"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"event Unpaused()\n")),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"Emitted when the pause is lifted.")),(0,l.kt)("h3",{id:"liquidationcall-2"},"LiquidationCall"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"event LiquidationCall(address collateralAsset, address debtAsset, address user, uint256 debtToCover, uint256 liquidatedCollateralAmount, address liquidator, bool receiveAToken)\n")),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"Emitted when a borrower is liquidated. This event is emitted by the LendingPool via\nLendingPoolCollateral manager using a DELEGATECALL\nThis allows to have the events in the generated ABI for LendingPool.")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"collateralAsset"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"The address of the underlying asset used as collateral, to receive as result of the liquidation")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"debtAsset"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"The address of the underlying borrowed asset to be repaid with the liquidation")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"user"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"The address of the borrower getting liquidated")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"debtToCover"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"The debt amount of borrowed ",(0,l.kt)("inlineCode",{parentName:"td"},"asset")," the liquidator wants to cover")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"liquidatedCollateralAmount"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"The amount of collateral received by the liiquidator")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"liquidator"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"The address of the liquidator")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"receiveAToken"),(0,l.kt)("td",{parentName:"tr",align:null},"bool"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"true")," if the liquidators wants to receive the collateral aTokens, ",(0,l.kt)("inlineCode",{parentName:"td"},"false")," if he wants to receive the underlying collateral asset directly")))),(0,l.kt)("h3",{id:"reservedataupdated-1"},"ReserveDataUpdated"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"event ReserveDataUpdated(address reserve, uint256 liquidityRate, uint256 stableBorrowRate, uint256 variableBorrowRate, uint256 liquidityIndex, uint256 variableBorrowIndex)\n")),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"Emitted when the state of a reserve is updated. NOTE: This event is actually declared\nin the ReserveLogic library and emitted in the updateInterestRates() function. Since the function is internal,\nthe event will actually be fired by the LendingPool contract. The event is therefore replicated here so it\ngets added to the LendingPool ABI")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"reserve"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"The address of the underlying asset of the reserve")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"liquidityRate"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"The new liquidity rate")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"stableBorrowRate"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"The new stable borrow rate")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"variableBorrowRate"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"The new variable borrow rate")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"liquidityIndex"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"The new liquidity index")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"variableBorrowIndex"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"The new variable borrow index")))),(0,l.kt)("h3",{id:"deposit-5"},"deposit"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function deposit(address asset, uint256 amount, address onBehalfOf, uint16 referralCode) external\n")),(0,l.kt)("p",null,"_Deposits an ",(0,l.kt)("inlineCode",{parentName:"p"},"amount")," of underlying asset into the reserve, receiving in return overlying aTokens."),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"E.g. User deposits 100 USDC and gets in return 100 aUSDC_")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"asset"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"The address of the underlying asset to deposit")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"amount"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"The amount to be deposited")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"onBehalfOf"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"The address that will receive the aTokens, same as msg.sender if the user   wants to receive them on his own wallet, or a different address if the beneficiary of aTokens   is a different wallet")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"referralCode"),(0,l.kt)("td",{parentName:"tr",align:null},"uint16"),(0,l.kt)("td",{parentName:"tr",align:null},"Code used to register the integrator originating the operation, for potential rewards.   0 if the action is executed directly by the user, without any middle-man")))),(0,l.kt)("h3",{id:"withdraw-6"},"withdraw"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function withdraw(address asset, uint256 amount, address to) external returns (uint256)\n")),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"Withdraws an ",(0,l.kt)("inlineCode",{parentName:"em"},"amount")," of underlying asset from the reserve, burning the equivalent aTokens owned\nE.g. User has 100 aUSDC, calls withdraw() and receives 100 USDC, burning the 100 aUSDC")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"asset"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"The address of the underlying asset to withdraw")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"amount"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"The underlying amount to be withdrawn   - Send the value type(uint256).max in order to withdraw the whole aToken balance")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"to"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"Address that will receive the underlying, same as msg.sender if the user   wants to receive it on his own wallet, or a different address if the beneficiary is a   different wallet")))),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[0]"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"The final amount withdrawn")))),(0,l.kt)("h3",{id:"borrow-5"},"borrow"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function borrow(address asset, uint256 amount, uint256 interestRateMode, uint16 referralCode, address onBehalfOf) external\n")),(0,l.kt)("p",null,"_Allows users to borrow a specific ",(0,l.kt)("inlineCode",{parentName:"p"},"amount")," of the reserve underlying asset, provided that the borrower\nalready deposited enough collateral, or he was given enough allowance by a credit delegator on the\ncorresponding debt token (StableDebtToken or VariableDebtToken)"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"E.g. User borrows 100 USDC passing as ",(0,l.kt)("inlineCode",{parentName:"li"},"onBehalfOf")," his own address, receiving the 100 USDC in his wallet\nand 100 stable/variable debt tokens, depending on the ",(0,l.kt)("inlineCode",{parentName:"li"},"interestRateMode"),"_")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"asset"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"The address of the underlying asset to borrow")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"amount"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"The amount to be borrowed")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"interestRateMode"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"The interest rate mode at which the user wants to borrow: 1 for Stable, 2 for Variable")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"referralCode"),(0,l.kt)("td",{parentName:"tr",align:null},"uint16"),(0,l.kt)("td",{parentName:"tr",align:null},"Code used to register the integrator originating the operation, for potential rewards.   0 if the action is executed directly by the user, without any middle-man")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"onBehalfOf"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"Address of the user who will receive the debt. Should be the address of the borrower itself calling the function if he wants to borrow against his own collateral, or the address of the credit delegator if he has been given credit delegation allowance")))),(0,l.kt)("h3",{id:"repay-5"},"repay"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function repay(address asset, uint256 amount, uint256 rateMode, address onBehalfOf) external returns (uint256)\n")),(0,l.kt)("p",null,"Repays a borrowed ",(0,l.kt)("inlineCode",{parentName:"p"},"amount")," on a specific reserve, burning the equivalent debt tokens owned"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"E.g. User repays 100 USDC, burning 100 variable/stable debt tokens of the ",(0,l.kt)("inlineCode",{parentName:"li"},"onBehalfOf")," address")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"asset"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"The address of the borrowed underlying asset previously borrowed")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"amount"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"The amount to repay - Send the value type(uint256).max in order to repay the whole debt for ",(0,l.kt)("inlineCode",{parentName:"td"},"asset")," on the specific ",(0,l.kt)("inlineCode",{parentName:"td"},"debtMode"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"rateMode"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"The interest rate mode at of the debt the user wants to repay: 1 for Stable, 2 for Variable")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"onBehalfOf"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"Address of the user who will get his debt reduced/removed. Should be the address of the user calling the function if he wants to reduce/remove his own debt, or the address of any other other borrower whose debt should be removed")))),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[0]"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"The final amount repaid")))),(0,l.kt)("h3",{id:"swapborrowratemode-1"},"swapBorrowRateMode"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function swapBorrowRateMode(address asset, uint256 rateMode) external\n")),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"Allows a borrower to swap his debt between stable and variable mode, or viceversa")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"asset"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"The address of the underlying asset borrowed")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"rateMode"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"The rate mode that the user wants to swap to")))),(0,l.kt)("h3",{id:"rebalancestableborrowrate-3"},"rebalanceStableBorrowRate"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function rebalanceStableBorrowRate(address asset, address user) external\n")),(0,l.kt)("p",null,"_Rebalances the stable interest rate of a user to the current stable rate defined on the reserve."),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Users can be rebalanced if the following conditions are satisfied:",(0,l.kt)("ol",{parentName:"li"},(0,l.kt)("li",{parentName:"ol"},"Usage ratio is above 95%"),(0,l.kt)("li",{parentName:"ol"},"the current deposit APY is below REBALANCE",(0,l.kt)("em",{parentName:"li"},"UP_THRESHOLD * maxVariableBorrowRate, which means that too much has been\nborrowed at a stable rate and depositors are not earning enough"))))),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"asset"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"The address of the underlying asset borrowed")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"user"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"The address of the user to be rebalanced")))),(0,l.kt)("h3",{id:"setuserusereserveascollateral-1"},"setUserUseReserveAsCollateral"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function setUserUseReserveAsCollateral(address asset, bool useAsCollateral) external\n")),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"Allows depositors to enable/disable a specific deposited asset as collateral")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"asset"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"The address of the underlying asset deposited")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"useAsCollateral"),(0,l.kt)("td",{parentName:"tr",align:null},"bool"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"true")," if the user wants to use the deposit as collateral, ",(0,l.kt)("inlineCode",{parentName:"td"},"false")," otherwise")))),(0,l.kt)("h3",{id:"liquidationcall-3"},"liquidationCall"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function liquidationCall(address collateralAsset, address debtAsset, address user, uint256 debtToCover, bool receiveAToken) external\n")),(0,l.kt)("p",null,"_Function to liquidate a non-healthy position collateral-wise, with Health Factor below 1"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"The caller (liquidator) covers ",(0,l.kt)("inlineCode",{parentName:"li"},"debtToCover")," amount of debt of the user getting liquidated, and receives\na proportionally amount of the ",(0,l.kt)("inlineCode",{parentName:"li"},"collateralAsset")," plus a bonus to cover market risk_")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"collateralAsset"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"The address of the underlying asset used as collateral, to receive as result of the liquidation")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"debtAsset"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"The address of the underlying borrowed asset to be repaid with the liquidation")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"user"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"The address of the borrower getting liquidated")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"debtToCover"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"The debt amount of borrowed ",(0,l.kt)("inlineCode",{parentName:"td"},"asset")," the liquidator wants to cover")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"receiveAToken"),(0,l.kt)("td",{parentName:"tr",align:null},"bool"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"true")," if the liquidators wants to receive the collateral aTokens, ",(0,l.kt)("inlineCode",{parentName:"td"},"false")," if he wants to receive the underlying collateral asset directly")))),(0,l.kt)("h3",{id:"flashloan-3"},"flashLoan"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function flashLoan(address receiverAddress, address[] assets, uint256[] amounts, uint256[] modes, address onBehalfOf, bytes params, uint16 referralCode) external\n")),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"Allows smartcontracts to access the liquidity of the pool within one transaction,\nas long as the amount taken plus a fee is returned.\nIMPORTANT There are security concerns for developers of flashloan receiver contracts that must be kept into consideration.\nFor further details please visit ",(0,l.kt)("a",{parentName:"em",href:"https://developers.aave.com"},"https://developers.aave.com"))),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"receiverAddress"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"The address of the contract receiving the funds, implementing the IFlashLoanReceiver interface")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"assets"),(0,l.kt)("td",{parentName:"tr",align:null},"address[]"),(0,l.kt)("td",{parentName:"tr",align:null},"The addresses of the assets being flash-borrowed")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"amounts"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256[]"),(0,l.kt)("td",{parentName:"tr",align:null},"The amounts amounts being flash-borrowed")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"modes"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256[]"),(0,l.kt)("td",{parentName:"tr",align:null},"Types of the debt to open if the flash loan is not returned:   0 -> Don't open any debt, just revert if funds can't be transferred from the receiver   1 -> Open debt at stable rate for the value of the amount flash-borrowed to the ",(0,l.kt)("inlineCode",{parentName:"td"},"onBehalfOf")," address   2 -> Open debt at variable rate for the value of the amount flash-borrowed to the ",(0,l.kt)("inlineCode",{parentName:"td"},"onBehalfOf")," address")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"onBehalfOf"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"The address  that will receive the debt in the case of using on ",(0,l.kt)("inlineCode",{parentName:"td"},"modes")," 1 or 2")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"params"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes"),(0,l.kt)("td",{parentName:"tr",align:null},"Variadic packed params to pass to the receiver as extra information")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"referralCode"),(0,l.kt)("td",{parentName:"tr",align:null},"uint16"),(0,l.kt)("td",{parentName:"tr",align:null},"Code used to register the integrator originating the operation, for potential rewards.   0 if the action is executed directly by the user, without any middle-man")))),(0,l.kt)("h3",{id:"getuseraccountdata-1"},"getUserAccountData"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function getUserAccountData(address user) external view returns (uint256 totalCollateralETH, uint256 totalDebtETH, uint256 availableBorrowsETH, uint256 currentLiquidationThreshold, uint256 ltv, uint256 healthFactor)\n")),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"Returns the user account data across all the reserves")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"user"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"The address of the user")))),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"totalCollateralETH"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"the total collateral in ETH of the user")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"totalDebtETH"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"the total debt in ETH of the user")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"availableBorrowsETH"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"the borrowing power left of the user")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"currentLiquidationThreshold"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"the liquidation threshold of the user")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"ltv"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"the loan to value of the user")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"healthFactor"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"the current health factor of the user")))),(0,l.kt)("h3",{id:"initreserve-1"},"initReserve"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function initReserve(address reserve, address aTokenAddress, address stableDebtAddress, address variableDebtAddress, address interestRateStrategyAddress) external\n")),(0,l.kt)("h3",{id:"setreserveinterestratestrategyaddress-1"},"setReserveInterestRateStrategyAddress"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function setReserveInterestRateStrategyAddress(address reserve, address rateStrategyAddress) external\n")),(0,l.kt)("h3",{id:"setconfiguration-1"},"setConfiguration"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function setConfiguration(address reserve, uint256 configuration) external\n")),(0,l.kt)("h3",{id:"getconfiguration-1"},"getConfiguration"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function getConfiguration(address asset) external view returns (struct DataTypes.ReserveConfigurationMap)\n")),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"Returns the configuration of the reserve")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"asset"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"The address of the underlying asset of the reserve")))),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[0]"),(0,l.kt)("td",{parentName:"tr",align:null},"struct DataTypes.ReserveConfigurationMap"),(0,l.kt)("td",{parentName:"tr",align:null},"The configuration of the reserve")))),(0,l.kt)("h3",{id:"getuserconfiguration-1"},"getUserConfiguration"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function getUserConfiguration(address user) external view returns (struct DataTypes.UserConfigurationMap)\n")),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"Returns the configuration of the user across all the reserves")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"user"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"The user address")))),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[0]"),(0,l.kt)("td",{parentName:"tr",align:null},"struct DataTypes.UserConfigurationMap"),(0,l.kt)("td",{parentName:"tr",align:null},"The configuration of the user")))),(0,l.kt)("h3",{id:"getreservenormalizedincome-1"},"getReserveNormalizedIncome"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function getReserveNormalizedIncome(address asset) external view returns (uint256)\n")),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"Returns the normalized income normalized income of the reserve")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"asset"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"The address of the underlying asset of the reserve")))),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[0]"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"The reserve's normalized income")))),(0,l.kt)("h3",{id:"getreservenormalizedvariabledebt-1"},"getReserveNormalizedVariableDebt"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function getReserveNormalizedVariableDebt(address asset) external view returns (uint256)\n")),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"Returns the normalized variable debt per unit of asset")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"asset"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"The address of the underlying asset of the reserve")))),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[0]"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"The reserve normalized variable debt")))),(0,l.kt)("h3",{id:"getreservedata-3"},"getReserveData"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function getReserveData(address asset) external view returns (struct DataTypes.ReserveData)\n")),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"Returns the state and configuration of the reserve")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"asset"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"The address of the underlying asset of the reserve")))),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[0]"),(0,l.kt)("td",{parentName:"tr",align:null},"struct DataTypes.ReserveData"),(0,l.kt)("td",{parentName:"tr",align:null},"The state of the reserve")))),(0,l.kt)("h3",{id:"finalizetransfer-1"},"finalizeTransfer"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function finalizeTransfer(address asset, address from, address to, uint256 amount, uint256 balanceFromAfter, uint256 balanceToBefore) external\n")),(0,l.kt)("h3",{id:"getreserveslist-1"},"getReservesList"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function getReservesList() external view returns (address[])\n")),(0,l.kt)("h3",{id:"getaddressesprovider-1"},"getAddressesProvider"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function getAddressesProvider() external view returns (contract ILendingPoolAddressesProvider)\n")),(0,l.kt)("h3",{id:"setpause-1"},"setPause"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function setPause(bool val) external\n")),(0,l.kt)("h3",{id:"paused-3"},"paused"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function paused() external view returns (bool)\n")),(0,l.kt)("h2",{id:"istabledebttoken-1"},"IStableDebtToken"),(0,l.kt)("h3",{id:"mint-13"},"Mint"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"event Mint(address user, address onBehalfOf, uint256 amount, uint256 currentBalance, uint256 balanceIncrease, uint256 newRate, uint256 avgStableRate, uint256 newTotalSupply)\n")),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"Emitted when new stable debt is minted")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"user"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"The address of the user who triggered the minting")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"onBehalfOf"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"The recipient of stable debt tokens")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"amount"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"The amount minted")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"currentBalance"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"The current balance of the user")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"balanceIncrease"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"The increase in balance since the last action of the user")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"newRate"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"The rate of the debt after the minting")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"avgStableRate"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"The new average stable rate after the minting")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"newTotalSupply"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"The new total supply of the stable debt token after the action")))),(0,l.kt)("h3",{id:"burn-5"},"Burn"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"event Burn(address user, uint256 amount, uint256 currentBalance, uint256 balanceIncrease, uint256 avgStableRate, uint256 newTotalSupply)\n")),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"Emitted when new stable debt is burned")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"user"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"The address of the user")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"amount"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"The amount being burned")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"currentBalance"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"The current balance of the user")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"balanceIncrease"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"The the increase in balance since the last action of the user")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"avgStableRate"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"The new average stable rate after the burning")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"newTotalSupply"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"The new total supply of the stable debt token after the action")))),(0,l.kt)("h3",{id:"approvedelegation-1"},"approveDelegation"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function approveDelegation(address delegatee, uint256 amount) external\n")),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"delegates borrowing power to a user on the specific debt token")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"delegatee"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"the address receiving the delegated borrowing power")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"amount"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"the maximum amount being delegated. Delegation will still respect the liquidation constraints (even if delegated, a delegatee cannot force a delegator HF to go below 1)")))),(0,l.kt)("h3",{id:"borrowallowance-1"},"borrowAllowance"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function borrowAllowance(address fromUser, address toUser) external view returns (uint256)\n")),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"returns the borrow allowance of the user")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"fromUser"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"The user to giving allowance")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"toUser"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"The user to give allowance to")))),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[0]"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"the current allowance of toUser")))),(0,l.kt)("h3",{id:"mint-14"},"mint"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function mint(address user, address onBehalfOf, uint256 amount, uint256 rate) external returns (bool)\n")),(0,l.kt)("p",null,"_Mints debt token to the ",(0,l.kt)("inlineCode",{parentName:"p"},"onBehalfOf")," address."),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"The resulting rate is the weighted average between the rate of the new debt\nand the rate of the previous debt_")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"user"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"The address receiving the borrowed underlying, being the delegatee in case of credit delegate, or same as ",(0,l.kt)("inlineCode",{parentName:"td"},"onBehalfOf")," otherwise")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"onBehalfOf"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"The address receiving the debt tokens")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"amount"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"The amount of debt tokens to mint")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"rate"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"The rate of the debt being minted")))),(0,l.kt)("h3",{id:"burn-6"},"burn"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function burn(address user, uint256 amount) external\n")),(0,l.kt)("p",null,"_Burns debt of ",(0,l.kt)("inlineCode",{parentName:"p"},"user")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"The resulting rate is the weighted average between the rate of the new debt\nand the rate of the previous debt_")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"user"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"The address of the user getting his debt burned")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"amount"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"The amount of debt tokens getting burned")))),(0,l.kt)("h3",{id:"getaveragestablerate-1"},"getAverageStableRate"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function getAverageStableRate() external view returns (uint256)\n")),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"Returns the average rate of all the stable rate loans.")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[0]"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"The average stable rate")))),(0,l.kt)("h3",{id:"getuserstablerate-1"},"getUserStableRate"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function getUserStableRate(address user) external view returns (uint256)\n")),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"Returns the stable rate of the user debt")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[0]"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"The stable rate of the user")))),(0,l.kt)("h3",{id:"getuserlastupdated-1"},"getUserLastUpdated"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function getUserLastUpdated(address user) external view returns (uint40)\n")),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"Returns the timestamp of the last update of the user")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[0]"),(0,l.kt)("td",{parentName:"tr",align:null},"uint40"),(0,l.kt)("td",{parentName:"tr",align:null},"The timestamp")))),(0,l.kt)("h3",{id:"getsupplydata-1"},"getSupplyData"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function getSupplyData() external view returns (uint256, uint256, uint256, uint40)\n")),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"Returns the principal, the total supply and the average stable rate")),(0,l.kt)("h3",{id:"gettotalsupplylastupdated-1"},"getTotalSupplyLastUpdated"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function getTotalSupplyLastUpdated() external view returns (uint40)\n")),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"Returns the timestamp of the last update of the total supply")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[0]"),(0,l.kt)("td",{parentName:"tr",align:null},"uint40"),(0,l.kt)("td",{parentName:"tr",align:null},"The timestamp")))),(0,l.kt)("h3",{id:"gettotalsupplyandavgrate-1"},"getTotalSupplyAndAvgRate"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function getTotalSupplyAndAvgRate() external view returns (uint256, uint256)\n")),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"Returns the total supply and the average stable rate")),(0,l.kt)("h3",{id:"principalbalanceof-1"},"principalBalanceOf"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function principalBalanceOf(address user) external view returns (uint256)\n")),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"Returns the principal debt balance of the user")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[0]"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"The debt balance of the user since the last burn/mint action")))),(0,l.kt)("h2",{id:"idynamicpricing-1"},"IDynamicPricing"),(0,l.kt)("h3",{id:"dynamicpricingstate-1"},"DynamicPricingState"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"enum DynamicPricingState {\n  NotStarted,\n  Finished,\n  InProgress,\n  Aborted\n}\n")),(0,l.kt)("h3",{id:"getpricingtype-4"},"getPricingType"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function getPricingType() external view returns (bytes32)\n")),(0,l.kt)("h3",{id:"getprice-2"},"getPrice"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function getPrice(bytes32 did) external view returns (uint256)\n")),(0,l.kt)("h3",{id:"gettokenaddress-2"},"getTokenAddress"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function getTokenAddress(bytes32 did) external view returns (address)\n")),(0,l.kt)("h3",{id:"getstatus-2"},"getStatus"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function getStatus(bytes32 did) external view returns (enum IDynamicPricing.DynamicPricingState, uint256, address)\n")),(0,l.kt)("h3",{id:"canbepurchased-2"},"canBePurchased"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function canBePurchased(bytes32 did) external view returns (bool)\n")),(0,l.kt)("h3",{id:"withdraw-7"},"withdraw"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function withdraw(bytes32 did, address withdrawAddress) external returns (bool)\n")),(0,l.kt)("h2",{id:"ilist-1"},"IList"),(0,l.kt)("h3",{id:"has-8"},"has"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function has(bytes32 value) external view returns (bool)\n")),(0,l.kt)("h3",{id:"has-9"},"has"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function has(bytes32 value, bytes32 id) external view returns (bool)\n")),(0,l.kt)("h2",{id:"iroyaltyscheme-1"},"IRoyaltyScheme"),(0,l.kt)("h3",{id:"check-3"},"check"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function check(bytes32 _did, uint256[] _amounts, address[] _receivers, address _tokenAddress) external view returns (bool)\n")),(0,l.kt)("p",null,"check that royalties are correct"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_did"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"compute royalties for this DID")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_amounts"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256[]"),(0,l.kt)("td",{parentName:"tr",align:null},"amounts in payment")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_receivers"),(0,l.kt)("td",{parentName:"tr",align:null},"address[]"),(0,l.kt)("td",{parentName:"tr",align:null},"receivers of payments")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_tokenAddress"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"payment token. zero address means native token (ether)")))),(0,l.kt)("h2",{id:"isecretstore-1"},"ISecretStore"),(0,l.kt)("h3",{id:"checkpermissions-5"},"checkPermissions"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function checkPermissions(address user, bytes32 documentKeyId) external view returns (bool permissionGranted)\n")),(0,l.kt)("p",null,"checkPermissions is called by Parity secret store"),(0,l.kt)("h2",{id:"isecretstorepermission-1"},"ISecretStorePermission"),(0,l.kt)("h3",{id:"grantpermission-6"},"grantPermission"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function grantPermission(address user, bytes32 documentKeyId) external\n")),(0,l.kt)("p",null,"grantPermission is called only by documentKeyId Owner or provider"),(0,l.kt)("h3",{id:"renouncepermission-3"},"renouncePermission"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function renouncePermission(address user, bytes32 documentKeyId) external\n")),(0,l.kt)("p",null,"renouncePermission is called only by documentKeyId Owner or provider"),(0,l.kt)("h2",{id:"iwethgateway-1"},"IWETHGateway"),(0,l.kt)("h3",{id:"depositeth-1"},"depositETH"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function depositETH(address lendingPool, address onBehalfOf, uint16 referralCode) external payable\n")),(0,l.kt)("h3",{id:"withdraweth-1"},"withdrawETH"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function withdrawETH(address lendingPool, uint256 amount, address to) external\n")),(0,l.kt)("h3",{id:"repayeth-1"},"repayETH"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function repayETH(address lendingPool, uint256 amount, uint256 rateMode, address onBehalfOf) external payable\n")),(0,l.kt)("h3",{id:"borroweth-1"},"borrowETH"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function borrowETH(address lendingPool, uint256 amount, uint256 interesRateMode, uint16 referralCode) external\n")),(0,l.kt)("h2",{id:"datatypes-1"},"DataTypes"),(0,l.kt)("h3",{id:"reservedata-1"},"ReserveData"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"struct ReserveData {\n  struct DataTypes.ReserveConfigurationMap configuration;\n  uint128 liquidityIndex;\n  uint128 variableBorrowIndex;\n  uint128 currentLiquidityRate;\n  uint128 currentVariableBorrowRate;\n  uint128 currentStableBorrowRate;\n  uint40 lastUpdateTimestamp;\n  address aTokenAddress;\n  address stableDebtTokenAddress;\n  address variableDebtTokenAddress;\n  address interestRateStrategyAddress;\n  uint8 id;\n}\n")),(0,l.kt)("h3",{id:"reserveconfigurationmap-1"},"ReserveConfigurationMap"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"struct ReserveConfigurationMap {\n  uint256 data;\n}\n")),(0,l.kt)("h3",{id:"userconfigurationmap-1"},"UserConfigurationMap"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"struct UserConfigurationMap {\n  uint256 data;\n}\n")),(0,l.kt)("h3",{id:"interestratemode-1"},"InterestRateMode"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"enum InterestRateMode {\n  NONE,\n  STABLE,\n  VARIABLE\n}\n")),(0,l.kt)("h2",{id:"safemath-1"},"SafeMath"),(0,l.kt)("h3",{id:"add-9"},"add"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function add(uint256 a, uint256 b) internal pure returns (uint256)\n")),(0,l.kt)("p",null,"_Returns the addition of two unsigned integers, reverting on\noverflow."),(0,l.kt)("p",null,"Counterpart to Solidity's ",(0,l.kt)("inlineCode",{parentName:"p"},"+")," operator."),(0,l.kt)("p",null,"Requirements:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Addition cannot overflow._")),(0,l.kt)("h3",{id:"sub-2"},"sub"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function sub(uint256 a, uint256 b) internal pure returns (uint256)\n")),(0,l.kt)("p",null,"_Returns the subtraction of two unsigned integers, reverting on\noverflow (when the result is negative)."),(0,l.kt)("p",null,"Counterpart to Solidity's ",(0,l.kt)("inlineCode",{parentName:"p"},"-")," operator."),(0,l.kt)("p",null,"Requirements:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Subtraction cannot overflow._")),(0,l.kt)("h3",{id:"sub-3"},"sub"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function sub(uint256 a, uint256 b, string errorMessage) internal pure returns (uint256)\n")),(0,l.kt)("p",null,"_Returns the subtraction of two unsigned integers, reverting with custom message on\noverflow (when the result is negative)."),(0,l.kt)("p",null,"Counterpart to Solidity's ",(0,l.kt)("inlineCode",{parentName:"p"},"-")," operator."),(0,l.kt)("p",null,"Requirements:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Subtraction cannot overflow._")),(0,l.kt)("h3",{id:"mul-1"},"mul"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function mul(uint256 a, uint256 b) internal pure returns (uint256)\n")),(0,l.kt)("p",null,"_Returns the multiplication of two unsigned integers, reverting on\noverflow."),(0,l.kt)("p",null,"Counterpart to Solidity's ",(0,l.kt)("inlineCode",{parentName:"p"},"*")," operator."),(0,l.kt)("p",null,"Requirements:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Multiplication cannot overflow._")),(0,l.kt)("h3",{id:"div-2"},"div"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function div(uint256 a, uint256 b) internal pure returns (uint256)\n")),(0,l.kt)("p",null,"_Returns the integer division of two unsigned integers. Reverts on\ndivision by zero. The result is rounded towards zero."),(0,l.kt)("p",null,"Counterpart to Solidity's ",(0,l.kt)("inlineCode",{parentName:"p"},"/")," operator. Note: this function uses a\n",(0,l.kt)("inlineCode",{parentName:"p"},"revert")," opcode (which leaves remaining gas untouched) while Solidity\nuses an invalid opcode to revert (consuming all remaining gas)."),(0,l.kt)("p",null,"Requirements:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"The divisor cannot be zero._")),(0,l.kt)("h3",{id:"div-3"},"div"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function div(uint256 a, uint256 b, string errorMessage) internal pure returns (uint256)\n")),(0,l.kt)("p",null,"_Returns the integer division of two unsigned integers. Reverts with custom message on\ndivision by zero. The result is rounded towards zero."),(0,l.kt)("p",null,"Counterpart to Solidity's ",(0,l.kt)("inlineCode",{parentName:"p"},"/")," operator. Note: this function uses a\n",(0,l.kt)("inlineCode",{parentName:"p"},"revert")," opcode (which leaves remaining gas untouched) while Solidity\nuses an invalid opcode to revert (consuming all remaining gas)."),(0,l.kt)("p",null,"Requirements:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"The divisor cannot be zero._")),(0,l.kt)("h3",{id:"mod-2"},"mod"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function mod(uint256 a, uint256 b) internal pure returns (uint256)\n")),(0,l.kt)("p",null,"_Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\nReverts when dividing by zero."),(0,l.kt)("p",null,"Counterpart to Solidity's ",(0,l.kt)("inlineCode",{parentName:"p"},"%")," operator. This function uses a ",(0,l.kt)("inlineCode",{parentName:"p"},"revert"),"\nopcode (which leaves remaining gas untouched) while Solidity uses an\ninvalid opcode to revert (consuming all remaining gas)."),(0,l.kt)("p",null,"Requirements:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"The divisor cannot be zero._")),(0,l.kt)("h3",{id:"mod-3"},"mod"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function mod(uint256 a, uint256 b, string errorMessage) internal pure returns (uint256)\n")),(0,l.kt)("p",null,"_Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\nReverts with custom message when dividing by zero."),(0,l.kt)("p",null,"Counterpart to Solidity's ",(0,l.kt)("inlineCode",{parentName:"p"},"%")," operator. This function uses a ",(0,l.kt)("inlineCode",{parentName:"p"},"revert"),"\nopcode (which leaves remaining gas untouched) while Solidity uses an\ninvalid opcode to revert (consuming all remaining gas)."),(0,l.kt)("p",null,"Requirements:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"The divisor cannot be zero._")),(0,l.kt)("h2",{id:"address-1"},"Address"),(0,l.kt)("h3",{id:"iscontract-3"},"isContract"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function isContract(address account) internal view returns (bool)\n")),(0,l.kt)("p",null,"_Returns true if ",(0,l.kt)("inlineCode",{parentName:"p"},"account")," is a contract."),(0,l.kt)("h1",{id:"important-1"},"[IMPORTANT]"),(0,l.kt)("p",null,"It is unsafe to assume that an address for which this function returns\nfalse is an externally-owned account (EOA) and not a contract."),(0,l.kt)("p",null,"Among others, ",(0,l.kt)("inlineCode",{parentName:"p"},"isContract")," will return false for the following\ntypes of addresses:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"an externally-owned account"),(0,l.kt)("li",{parentName:"ul"},"a contract in construction"),(0,l.kt)("li",{parentName:"ul"},"an address where a contract will be created"),(0,l.kt)("li",{parentName:"ul"},"an address where a contract lived, but was destroyed\n====_")),(0,l.kt)("h3",{id:"sendvalue-1"},"sendValue"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function sendValue(address payable recipient, uint256 amount) internal\n")),(0,l.kt)("p",null,"_Replacement for Solidity's ",(0,l.kt)("inlineCode",{parentName:"p"},"transfer"),": sends ",(0,l.kt)("inlineCode",{parentName:"p"},"amount")," wei to\n",(0,l.kt)("inlineCode",{parentName:"p"},"recipient"),", forwarding all available gas and reverting on errors."),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://eips.ethereum.org/EIPS/eip-1884%5BEIP1884%5D"},"https://eips.ethereum.org/EIPS/eip-1884[EIP1884]")," increases the gas cost\nof certain opcodes, possibly making contracts go over the 2300 gas limit\nimposed by ",(0,l.kt)("inlineCode",{parentName:"p"},"transfer"),", making them unable to receive funds via\n",(0,l.kt)("inlineCode",{parentName:"p"},"transfer"),". {sendValue} removes this limitation."),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/%5BLearn"},"https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn")," more]."),(0,l.kt)("p",null,"IMPORTANT: because control is transferred to ",(0,l.kt)("inlineCode",{parentName:"p"},"recipient"),", care must be\ntaken to not create reentrancy vulnerabilities. Consider using\n{ReentrancyGuard} or the\n",(0,l.kt)("a",{parentName:"p",href:"https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern%5Bchecks-effects-interactions"},"https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions")," pattern]._"),(0,l.kt)("h2",{id:"safeerc20-1"},"SafeERC20"),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"Wrappers around ERC20 operations that throw on failure (when the token\ncontract returns false). Tokens that return no value (and instead revert or\nthrow on failure) are also supported, non-reverting calls are assumed to be\nsuccessful.\nTo use this library you can add a ",(0,l.kt)("inlineCode",{parentName:"em"},"using SafeERC20 for IERC20;")," statement to your contract,\nwhich allows you to call the safe operations as ",(0,l.kt)("inlineCode",{parentName:"em"},"token.safeTransfer(...)"),", etc.")),(0,l.kt)("h3",{id:"safetransfer-1"},"safeTransfer"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function safeTransfer(contract IERC20 token, address to, uint256 value) internal\n")),(0,l.kt)("h3",{id:"safetransferfrom-1"},"safeTransferFrom"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function safeTransferFrom(contract IERC20 token, address from, address to, uint256 value) internal\n")),(0,l.kt)("h3",{id:"safeapprove-1"},"safeApprove"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function safeApprove(contract IERC20 token, address spender, uint256 value) internal\n")),(0,l.kt)("h3",{id:"calloptionalreturn-1"},"callOptionalReturn"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function callOptionalReturn(contract IERC20 token, bytes data) private\n")),(0,l.kt)("h2",{id:"clonefactory-1"},"CloneFactory"),(0,l.kt)("h3",{id:"createclone-1"},"createClone"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function createClone(address target) internal returns (address result)\n")),(0,l.kt)("h3",{id:"isclone-1"},"isClone"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function isClone(address target, address query) internal view returns (bool result)\n")),(0,l.kt)("h2",{id:"epochlibrary-1"},"EpochLibrary"),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"Implementation of Epoch Library.\nFor an arbitrary Epoch, this library manages the life\ncycle of an Epoch. Usually this library is used for\nhandling the time window between conditions in an agreement.")),(0,l.kt)("h3",{id:"epoch-2"},"Epoch"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"struct Epoch {\n  uint256 timeLock;\n  uint256 timeOut;\n  uint256 blockNumber;\n}\n")),(0,l.kt)("h3",{id:"epochlist-4"},"EpochList"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"struct EpochList {\n  mapping(bytes32 &#x3D;&gt; struct EpochLibrary.Epoch) epochs;\n  bytes32[] epochIds;\n}\n")),(0,l.kt)("h3",{id:"create-8"},"create"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function create(struct EpochLibrary.EpochList _self, bytes32 _id, uint256 _timeLock, uint256 _timeOut) internal\n")),(0,l.kt)("p",null,"create creates new Epoch"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_self"),(0,l.kt)("td",{parentName:"tr",align:null},"struct EpochLibrary.EpochList"),(0,l.kt)("td",{parentName:"tr",align:null},"is the Epoch storage pointer")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_id"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null})),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_timeLock"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"value in block count (can not fulfill before)")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_timeOut"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"value in block count (can not fulfill after)")))),(0,l.kt)("h3",{id:"istimedout-1"},"isTimedOut"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function isTimedOut(struct EpochLibrary.EpochList _self, bytes32 _id) external view returns (bool)\n")),(0,l.kt)("p",null,"isTimedOut means you cannot fulfill after"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_self"),(0,l.kt)("td",{parentName:"tr",align:null},"struct EpochLibrary.EpochList"),(0,l.kt)("td",{parentName:"tr",align:null},"is the Epoch storage pointer")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_id"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null})))),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[0]"),(0,l.kt)("td",{parentName:"tr",align:null},"bool"),(0,l.kt)("td",{parentName:"tr",align:null},"true if the current block number is gt timeOut")))),(0,l.kt)("h3",{id:"istimelocked-1"},"isTimeLocked"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function isTimeLocked(struct EpochLibrary.EpochList _self, bytes32 _id) external view returns (bool)\n")),(0,l.kt)("p",null,"isTimeLocked means you cannot fulfill before"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_self"),(0,l.kt)("td",{parentName:"tr",align:null},"struct EpochLibrary.EpochList"),(0,l.kt)("td",{parentName:"tr",align:null},"is the Epoch storage pointer")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_id"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null})))),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[0]"),(0,l.kt)("td",{parentName:"tr",align:null},"bool"),(0,l.kt)("td",{parentName:"tr",align:null},"true if the current block number is gt timeLock")))),(0,l.kt)("h3",{id:"getepochtimeout-1"},"getEpochTimeOut"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function getEpochTimeOut(struct EpochLibrary.Epoch _self) public view returns (uint256)\n")),(0,l.kt)("p",null,"getEpochTimeOut"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_self"),(0,l.kt)("td",{parentName:"tr",align:null},"struct EpochLibrary.Epoch"),(0,l.kt)("td",{parentName:"tr",align:null},"is the Epoch storage pointer")))),(0,l.kt)("h3",{id:"getepochtimelock-1"},"getEpochTimeLock"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function getEpochTimeLock(struct EpochLibrary.Epoch _self) public view returns (uint256)\n")),(0,l.kt)("p",null,"getEpochTimeLock"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_self"),(0,l.kt)("td",{parentName:"tr",align:null},"struct EpochLibrary.Epoch"),(0,l.kt)("td",{parentName:"tr",align:null},"is the Epoch storage pointer")))),(0,l.kt)("h2",{id:"hashlistlibrary-1"},"HashListLibrary"),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"Implementation of the basic functionality of list of hash values.\nThis library allows other contracts to build and maintain lists\nand also preserves the privacy of the data by accepting only hashed\ncontent (bytes32 based data type)")),(0,l.kt)("h3",{id:"list-1"},"List"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"struct List {\n  address _owner;\n  bytes32[] values;\n  mapping(bytes32 &#x3D;&gt; uint256) indices;\n}\n")),(0,l.kt)("h3",{id:"onlylistowner-1"},"onlyListOwner"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"modifier onlyListOwner(struct HashListLibrary.List _self)\n")),(0,l.kt)("h3",{id:"add-10"},"add"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function add(struct HashListLibrary.List _self, bytes32 value) public returns (bool)\n")),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"add index an element then add it to a list")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_self"),(0,l.kt)("td",{parentName:"tr",align:null},"struct HashListLibrary.List"),(0,l.kt)("td",{parentName:"tr",align:null},"is a pointer to list in the storage")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"value"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"is a bytes32 value")))),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[0]"),(0,l.kt)("td",{parentName:"tr",align:null},"bool"),(0,l.kt)("td",{parentName:"tr",align:null},"true if value is added successfully")))),(0,l.kt)("h3",{id:"add-11"},"add"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function add(struct HashListLibrary.List _self, bytes32[] values) public returns (bool)\n")),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"put an array of elements without indexing\nthis meant to save gas in case of large arrays")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_self"),(0,l.kt)("td",{parentName:"tr",align:null},"struct HashListLibrary.List"),(0,l.kt)("td",{parentName:"tr",align:null},"is a pointer to list in the storage")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"values"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32[]"),(0,l.kt)("td",{parentName:"tr",align:null},"is an array of elements value")))),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[0]"),(0,l.kt)("td",{parentName:"tr",align:null},"bool"),(0,l.kt)("td",{parentName:"tr",align:null},"true if values are added successfully")))),(0,l.kt)("h3",{id:"update-6"},"update"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function update(struct HashListLibrary.List _self, bytes32 oldValue, bytes32 newValue) public returns (bool)\n")),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"update the value with a new value and maintain indices")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_self"),(0,l.kt)("td",{parentName:"tr",align:null},"struct HashListLibrary.List"),(0,l.kt)("td",{parentName:"tr",align:null},"is a pointer to list in the storage")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"oldValue"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"is an element value in a list")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"newValue"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"new value")))),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[0]"),(0,l.kt)("td",{parentName:"tr",align:null},"bool"),(0,l.kt)("td",{parentName:"tr",align:null},"true if value is updated successfully")))),(0,l.kt)("h3",{id:"remove-4"},"remove"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function remove(struct HashListLibrary.List _self, bytes32 value) public returns (bool)\n")),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"remove value from a list, updates indices, and list size")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_self"),(0,l.kt)("td",{parentName:"tr",align:null},"struct HashListLibrary.List"),(0,l.kt)("td",{parentName:"tr",align:null},"is a pointer to list in the storage")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"value"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"is an element value in a list")))),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[0]"),(0,l.kt)("td",{parentName:"tr",align:null},"bool"),(0,l.kt)("td",{parentName:"tr",align:null},"true if value is removed successfully")))),(0,l.kt)("h3",{id:"get-4"},"get"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function get(struct HashListLibrary.List _self, uint256 __index) public view returns (bytes32)\n")),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"has value by index")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_self"),(0,l.kt)("td",{parentName:"tr",align:null},"struct HashListLibrary.List"),(0,l.kt)("td",{parentName:"tr",align:null},"is a pointer to list in the storage")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"__index"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"is where is value is stored in the list")))),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[0]"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"the value if exists")))),(0,l.kt)("h3",{id:"index-4"},"index"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function index(struct HashListLibrary.List _self, uint256 from, uint256 to) public returns (bool)\n")),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"index is used to map each element value to its index on the list")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_self"),(0,l.kt)("td",{parentName:"tr",align:null},"struct HashListLibrary.List"),(0,l.kt)("td",{parentName:"tr",align:null},"is a pointer to list in the storage")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"from"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"index is where to 'from' indexing in the list")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"to"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"index is where to stop indexing")))),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[0]"),(0,l.kt)("td",{parentName:"tr",align:null},"bool"),(0,l.kt)("td",{parentName:"tr",align:null},"true if the sub list is indexed")))),(0,l.kt)("h3",{id:"setowner-1"},"setOwner"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function setOwner(struct HashListLibrary.List _self, address _owner) public\n")),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"setOwner set list owner\nparam _owner owner address")),(0,l.kt)("h3",{id:"indexof-4"},"indexOf"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function indexOf(struct HashListLibrary.List _self, bytes32 value) public view returns (uint256)\n")),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"indexOf gets the index of a value in a list")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_self"),(0,l.kt)("td",{parentName:"tr",align:null},"struct HashListLibrary.List"),(0,l.kt)("td",{parentName:"tr",align:null},"is a pointer to list in the storage")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"value"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"is element value in list")))),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[0]"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"value index in list")))),(0,l.kt)("h3",{id:"isindexed-4"},"isIndexed"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function isIndexed(struct HashListLibrary.List _self) public view returns (bool)\n")),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"isIndexed checks if the list is indexed")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_self"),(0,l.kt)("td",{parentName:"tr",align:null},"struct HashListLibrary.List"),(0,l.kt)("td",{parentName:"tr",align:null},"is a pointer to list in the storage")))),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[0]"),(0,l.kt)("td",{parentName:"tr",align:null},"bool"),(0,l.kt)("td",{parentName:"tr",align:null},"true if the list is indexed")))),(0,l.kt)("h3",{id:"all-4"},"all"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function all(struct HashListLibrary.List _self) public view returns (bytes32[])\n")),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"all returns all list elements")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_self"),(0,l.kt)("td",{parentName:"tr",align:null},"struct HashListLibrary.List"),(0,l.kt)("td",{parentName:"tr",align:null},"is a pointer to list in the storage")))),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[0]"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32[]"),(0,l.kt)("td",{parentName:"tr",align:null},"all list elements")))),(0,l.kt)("h3",{id:"has-10"},"has"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function has(struct HashListLibrary.List _self, bytes32 value) public view returns (bool)\n")),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"size returns the list size")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_self"),(0,l.kt)("td",{parentName:"tr",align:null},"struct HashListLibrary.List"),(0,l.kt)("td",{parentName:"tr",align:null},"is a pointer to list in the storage")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"value"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"is element value in list")))),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[0]"),(0,l.kt)("td",{parentName:"tr",align:null},"bool"),(0,l.kt)("td",{parentName:"tr",align:null},"true if the value exists")))),(0,l.kt)("h3",{id:"size-4"},"size"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function size(struct HashListLibrary.List _self) public view returns (uint256)\n")),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"size gets the list size")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_self"),(0,l.kt)("td",{parentName:"tr",align:null},"struct HashListLibrary.List"),(0,l.kt)("td",{parentName:"tr",align:null},"is a pointer to list in the storage")))),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[0]"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"total length of the list")))),(0,l.kt)("h3",{id:"ownedby-4"},"ownedBy"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function ownedBy(struct HashListLibrary.List _self) public view returns (address)\n")),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"ownedBy gets the list owner")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_self"),(0,l.kt)("td",{parentName:"tr",align:null},"struct HashListLibrary.List"),(0,l.kt)("td",{parentName:"tr",align:null},"is a pointer to list in the storage")))),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[0]"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"list owner")))),(0,l.kt)("h3",{id:"_index-1"},"_index"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function _index(struct HashListLibrary.List _self, uint256 from, uint256 to) private returns (bool)\n")),(0,l.kt)("p",null,"_",(0,l.kt)("em",{parentName:"p"},"index assign index to the list elements")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_self"),(0,l.kt)("td",{parentName:"tr",align:null},"struct HashListLibrary.List"),(0,l.kt)("td",{parentName:"tr",align:null},"is a pointer to list in the storage")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"from"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"is the starting index id")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"to"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"is the ending index id")))),(0,l.kt)("h2",{id:"abstractauction-1"},"AbstractAuction"),(0,l.kt)("h3",{id:"auction_manager_role-1"},"AUCTION_MANAGER_ROLE"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"bytes32 AUCTION_MANAGER_ROLE\n")),(0,l.kt)("h3",{id:"nvm_agreement_role-1"},"NVM_AGREEMENT_ROLE"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"bytes32 NVM_AGREEMENT_ROLE\n")),(0,l.kt)("h3",{id:"auction-1"},"Auction"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"struct Auction {\n  bytes32 did;\n  enum IDynamicPricing.DynamicPricingState state;\n  address creator;\n  uint256 blockNumberCreated;\n  uint256 floor;\n  uint256 starts;\n  uint256 ends;\n  uint256 price;\n  address tokenAddress;\n  address whoCanClaim;\n  string hash;\n}\n")),(0,l.kt)("h3",{id:"auctions-1"},"auctions"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"mapping(bytes32 => struct AbstractAuction.Auction) auctions\n")),(0,l.kt)("h3",{id:"auctionbids-1"},"auctionBids"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"mapping(bytes32 => mapping(address => uint256)) auctionBids\n")),(0,l.kt)("h3",{id:"auctioncreated-1"},"AuctionCreated"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"event AuctionCreated(bytes32 auctionId, bytes32 did, address creator, uint256 blockNumberCreated, uint256 floor, uint256 starts, uint256 ends, address tokenAddress)\n")),(0,l.kt)("h3",{id:"auctionchangedstate-1"},"AuctionChangedState"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"event AuctionChangedState(bytes32 auctionId, address who, enum IDynamicPricing.DynamicPricingState previousState, enum IDynamicPricing.DynamicPricingState newState)\n")),(0,l.kt)("h3",{id:"auctionbidreceived-1"},"AuctionBidReceived"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"event AuctionBidReceived(bytes32 auctionId, address bidder, address tokenAddress, uint256 amount)\n")),(0,l.kt)("h3",{id:"auctionwithdrawal-1"},"AuctionWithdrawal"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"event AuctionWithdrawal(bytes32 auctionId, address receiver, address tokenAddress, uint256 amount)\n")),(0,l.kt)("h3",{id:"receive-7"},"receive"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"receive() external payable\n")),(0,l.kt)("h3",{id:"abortauction-1"},"abortAuction"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function abortAuction(bytes32 _auctionId) external virtual\n")),(0,l.kt)("h3",{id:"withdraw-8"},"withdraw"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function withdraw(bytes32 _auctionId, address _withdrawAddress) external virtual returns (bool)\n")),(0,l.kt)("h3",{id:"getpricingtype-5"},"getPricingType"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function getPricingType() external pure virtual returns (bytes32)\n")),(0,l.kt)("h3",{id:"getprice-3"},"getPrice"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function getPrice(bytes32 _auctionId) external view returns (uint256)\n")),(0,l.kt)("h3",{id:"gettokenaddress-3"},"getTokenAddress"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function getTokenAddress(bytes32 _auctionId) external view returns (address)\n")),(0,l.kt)("h3",{id:"getstatus-3"},"getStatus"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function getStatus(bytes32 _auctionId) external view returns (enum IDynamicPricing.DynamicPricingState state, uint256 price, address whoCanClaim)\n")),(0,l.kt)("h3",{id:"canbepurchased-3"},"canBePurchased"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function canBePurchased(bytes32 _auctionId) external view virtual returns (bool)\n")),(0,l.kt)("h3",{id:"addnvmagreementrole-1"},"addNVMAgreementRole"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function addNVMAgreementRole(address account) public\n")),(0,l.kt)("h3",{id:"onlycreator-1"},"onlyCreator"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"modifier onlyCreator(bytes32 _auctionId)\n")),(0,l.kt)("h3",{id:"onlycreatororadmin-1"},"onlyCreatorOrAdmin"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"modifier onlyCreatorOrAdmin(bytes32 _auctionId)\n")),(0,l.kt)("h3",{id:"onlynotcreator-1"},"onlyNotCreator"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"modifier onlyNotCreator(bytes32 _auctionId)\n")),(0,l.kt)("h3",{id:"onlyafterstart-1"},"onlyAfterStart"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"modifier onlyAfterStart(bytes32 _auctionId)\n")),(0,l.kt)("h3",{id:"onlybeforestarts-1"},"onlyBeforeStarts"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"modifier onlyBeforeStarts(bytes32 _auctionId)\n")),(0,l.kt)("h3",{id:"onlybeforeend-1"},"onlyBeforeEnd"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"modifier onlyBeforeEnd(bytes32 _auctionId)\n")),(0,l.kt)("h3",{id:"onlynotabortedorfinished-1"},"onlyNotAbortedOrFinished"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"modifier onlyNotAbortedOrFinished(bytes32 _auctionId)\n")),(0,l.kt)("h3",{id:"onlyabortedorfinished-1"},"onlyAbortedOrFinished"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"modifier onlyAbortedOrFinished(bytes32 _auctionId)\n")),(0,l.kt)("h3",{id:"onlynotaborted-1"},"onlyNotAborted"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"modifier onlyNotAborted(bytes32 _auctionId)\n")),(0,l.kt)("h3",{id:"onlyfinishedoraborted-1"},"onlyFinishedOrAborted"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"modifier onlyFinishedOrAborted(bytes32 _auctionId)\n")),(0,l.kt)("h2",{id:"dutchauction-1"},"DutchAuction"),(0,l.kt)("h3",{id:"initialize-90"},"initialize"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function initialize(address _owner) external\n")),(0,l.kt)("p",null,"initialize init the contract with the following parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_owner"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"contract's owner account address")))),(0,l.kt)("h3",{id:"create-9"},"create"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function create(bytes32 _auctionId, bytes32 _did, uint256 _startPrice, uint256 _starts, uint256 _ends, address _tokenAddress, string _hash) external virtual\n")),(0,l.kt)("p",null,"It creates a new Auction given some setup parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_auctionId"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"unique auction identifier")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_did"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"reference to the asset part of the auction")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_startPrice"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"start price (and max) for the auction")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_starts"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"block number when the auction starts")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_ends"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"block number of when the auction ends")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_tokenAddress"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"token address to use for the auction. If address(0) means native token")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_hash"),(0,l.kt)("td",{parentName:"tr",align:null},"string"),(0,l.kt)("td",{parentName:"tr",align:null},"ipfs hash referring to the auction metadata")))),(0,l.kt)("h3",{id:"placenativetokenbid-2"},"placeNativeTokenBid"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function placeNativeTokenBid(bytes32 _auctionId) external payable virtual\n")),(0,l.kt)("h3",{id:"placeerc20bid-2"},"placeERC20Bid"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function placeERC20Bid(bytes32 _auctionId, uint256 _bidAmount) external virtual\n")),(0,l.kt)("h3",{id:"withdraw-9"},"withdraw"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function withdraw(bytes32 _auctionId, address _withdrawAddress) external virtual returns (bool)\n")),(0,l.kt)("h3",{id:"getpricingtype-6"},"getPricingType"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function getPricingType() external pure returns (bytes32)\n")),(0,l.kt)("h2",{id:"englishauction-1"},"EnglishAuction"),(0,l.kt)("h3",{id:"initialize-91"},"initialize"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function initialize(address _owner) external\n")),(0,l.kt)("p",null,"initialize init the contract with the following parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_owner"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"contract's owner account address")))),(0,l.kt)("h3",{id:"create-10"},"create"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function create(bytes32 _auctionId, bytes32 _did, uint256 _floor, uint256 _starts, uint256 _ends, address _tokenAddress, string _hash) external virtual\n")),(0,l.kt)("p",null,"It creates a new Auction given some setup parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_auctionId"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"unique auction identifier")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_did"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"reference to the asset part of the auction")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_floor"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"floor price")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_starts"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"block number when the auction starts")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_ends"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"block number of when the auction ends")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_tokenAddress"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"token address to use for the auction. If address(0) means native token")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_hash"),(0,l.kt)("td",{parentName:"tr",align:null},"string"),(0,l.kt)("td",{parentName:"tr",align:null},"ipfs hash referring to the auction metadata")))),(0,l.kt)("h3",{id:"placenativetokenbid-3"},"placeNativeTokenBid"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function placeNativeTokenBid(bytes32 _auctionId) external payable virtual\n")),(0,l.kt)("h3",{id:"placeerc20bid-3"},"placeERC20Bid"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function placeERC20Bid(bytes32 _auctionId, uint256 _bidAmount) external virtual\n")),(0,l.kt)("h3",{id:"getpricingtype-7"},"getPricingType"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function getPricingType() external pure returns (bytes32)\n")),(0,l.kt)("h2",{id:"didfactory-1"},"DIDFactory"),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"Implementation of the DID Registry.")),(0,l.kt)("h3",{id:"didregisterlist-3"},"didRegisterList"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"struct DIDRegistryLibrary.DIDRegisterList didRegisterList\n")),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"state storage for the DID registry")),(0,l.kt)("h3",{id:"didpermissions-1"},"didPermissions"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"mapping(bytes32 => mapping(address => bool)) didPermissions\n")),(0,l.kt)("h3",{id:"manager-1"},"manager"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"address manager\n")),(0,l.kt)("h3",{id:"onlydidowner-1"},"onlyDIDOwner"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"modifier onlyDIDOwner(bytes32 _did)\n")),(0,l.kt)("h3",{id:"onlymanager-1"},"onlyManager"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"modifier onlyManager()\n")),(0,l.kt)("h3",{id:"onlyownerproviderordelegated-1"},"onlyOwnerProviderOrDelegated"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"modifier onlyOwnerProviderOrDelegated(bytes32 _did)\n")),(0,l.kt)("h3",{id:"onlyvalidattributes-1"},"onlyValidAttributes"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"modifier onlyValidAttributes(string _attributes)\n")),(0,l.kt)("h3",{id:"nftisinitialized-1"},"nftIsInitialized"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"modifier nftIsInitialized(bytes32 _did)\n")),(0,l.kt)("h3",{id:"nft721isinitialized-1"},"nft721IsInitialized"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"modifier nft721IsInitialized(bytes32 _did)\n")),(0,l.kt)("h3",{id:"didattributeregistered-1"},"DIDAttributeRegistered"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"event DIDAttributeRegistered(bytes32 _did, address _owner, bytes32 _checksum, string _value, address _lastUpdatedBy, uint256 _blockNumberUpdated)\n")),(0,l.kt)("p",null,"DID Events"),(0,l.kt)("h3",{id:"didproviderremoved-1"},"DIDProviderRemoved"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"event DIDProviderRemoved(bytes32 _did, address _provider, bool state)\n")),(0,l.kt)("h3",{id:"didprovideradded-1"},"DIDProviderAdded"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"event DIDProviderAdded(bytes32 _did, address _provider)\n")),(0,l.kt)("h3",{id:"didownershiptransferred-1"},"DIDOwnershipTransferred"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"event DIDOwnershipTransferred(bytes32 _did, address _previousOwner, address _newOwner)\n")),(0,l.kt)("h3",{id:"didpermissiongranted-1"},"DIDPermissionGranted"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"event DIDPermissionGranted(bytes32 _did, address _owner, address _grantee)\n")),(0,l.kt)("h3",{id:"didpermissionrevoked-1"},"DIDPermissionRevoked"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"event DIDPermissionRevoked(bytes32 _did, address _owner, address _grantee)\n")),(0,l.kt)("h3",{id:"didprovenancedelegateremoved-1"},"DIDProvenanceDelegateRemoved"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"event DIDProvenanceDelegateRemoved(bytes32 _did, address _delegate, bool state)\n")),(0,l.kt)("h3",{id:"didprovenancedelegateadded-1"},"DIDProvenanceDelegateAdded"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"event DIDProvenanceDelegateAdded(bytes32 _did, address _delegate)\n")),(0,l.kt)("h3",{id:"setmanager-1"},"setManager"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function setManager(address _addr) external\n")),(0,l.kt)("p",null,"Sets the manager role. Should be the TransferCondition contract address"),(0,l.kt)("h3",{id:"registerattribute-3"},"registerAttribute"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function registerAttribute(bytes32 _didSeed, bytes32 _checksum, address[] _providers, string _url) public virtual\n")),(0,l.kt)("p",null,"Register DID attributes."),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"The first attribute of a DID registered sets the DID owner.\nSubsequent updates record _checksum and update info.")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_didSeed"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"refers to decentralized identifier seed (a bytes32 length ID).")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_checksum"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"includes a one-way HASH calculated using the DDO content.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_providers"),(0,l.kt)("td",{parentName:"tr",align:null},"address[]"),(0,l.kt)("td",{parentName:"tr",align:null})),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_url"),(0,l.kt)("td",{parentName:"tr",align:null},"string"),(0,l.kt)("td",{parentName:"tr",align:null},"refers to the attribute value, limited to 2048 bytes.")))),(0,l.kt)("h3",{id:"registerdid-1"},"registerDID"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function registerDID(bytes32 _didSeed, bytes32 _checksum, address[] _providers, string _url, bytes32 _activityId, string _attributes) public virtual\n")),(0,l.kt)("p",null,"Register DID attributes."),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"The first attribute of a DID registered sets the DID owner.\nSubsequent updates record _checksum and update info.")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_didSeed"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"refers to decentralized identifier seed (a bytes32 length ID).           The final DID will be calculated with the creator address using the ",(0,l.kt)("inlineCode",{parentName:"td"},"hashDID")," function")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_checksum"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"includes a one-way HASH calculated using the DDO content.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_providers"),(0,l.kt)("td",{parentName:"tr",align:null},"address[]"),(0,l.kt)("td",{parentName:"tr",align:null},"list of addresses that can act as an asset provider")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_url"),(0,l.kt)("td",{parentName:"tr",align:null},"string"),(0,l.kt)("td",{parentName:"tr",align:null},"refers to the url resolving the DID into a DID Document (DDO), limited to 2048 bytes.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_activityId"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"refers to activity")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_attributes"),(0,l.kt)("td",{parentName:"tr",align:null},"string"),(0,l.kt)("td",{parentName:"tr",align:null},"refers to the provenance attributes")))),(0,l.kt)("h3",{id:"hashdid-1"},"hashDID"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function hashDID(bytes32 _didSeed, address _creator) public pure returns (bytes32)\n")),(0,l.kt)("p",null,"It generates a DID using as seed a bytes32 and the address of the DID creator"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_didSeed"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"refers to DID Seed used as base to generate the final DID")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_creator"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"address of the creator of the DID")))),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[0]"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"the new DID created")))),(0,l.kt)("h3",{id:"areroyaltiesvalid-3"},"areRoyaltiesValid"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function areRoyaltiesValid(bytes32 _did, uint256[] _amounts, address[] _receivers, address _tokenAddress) public view returns (bool)\n")),(0,l.kt)("p",null,"areRoyaltiesValid checks if for a given DID and rewards distribution, this allocate the",(0,l.kt)("br",{parentName:"p"}),"\n","original creator royalties properly"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_did"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"refers to decentralized identifier (a byte32 length ID)")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_amounts"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256[]"),(0,l.kt)("td",{parentName:"tr",align:null},"refers to the amounts to reward")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_receivers"),(0,l.kt)("td",{parentName:"tr",align:null},"address[]"),(0,l.kt)("td",{parentName:"tr",align:null},"refers to the receivers of rewards")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_tokenAddress"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null})))),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[0]"),(0,l.kt)("td",{parentName:"tr",align:null},"bool"),(0,l.kt)("td",{parentName:"tr",align:null},"true if the rewards distribution respect the original creator royalties")))),(0,l.kt)("h3",{id:"wasgeneratedby-2"},"wasGeneratedBy"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function wasGeneratedBy(bytes32 _provId, bytes32 _did, address _agentId, bytes32 _activityId, string _attributes) internal returns (bool)\n")),(0,l.kt)("h3",{id:"used-3"},"used"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function used(bytes32 _provId, bytes32 _did, address _agentId, bytes32 _activityId, bytes _signatureUsing, string _attributes) public returns (bool success)\n")),(0,l.kt)("h3",{id:"wasderivedfrom-2"},"wasDerivedFrom"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function wasDerivedFrom(bytes32 _provId, bytes32 _newEntityDid, bytes32 _usedEntityDid, address _agentId, bytes32 _activityId, string _attributes) public returns (bool success)\n")),(0,l.kt)("h3",{id:"wasassociatedwith-2"},"wasAssociatedWith"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function wasAssociatedWith(bytes32 _provId, bytes32 _did, address _agentId, bytes32 _activityId, string _attributes) public returns (bool success)\n")),(0,l.kt)("h3",{id:"actedonbehalf-2"},"actedOnBehalf"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function actedOnBehalf(bytes32 _provId, bytes32 _did, address _delegateAgentId, address _responsibleAgentId, bytes32 _activityId, bytes _signatureDelegate, string _attributes) public returns (bool success)\n")),(0,l.kt)("p",null,"Implements the W3C PROV Delegation action\nEach party involved in this method (_delegateAgentId & _responsibleAgentId) must provide a valid signature.\nThe content to sign is a representation of the footprint of the event (_did + _delegateAgentId + _responsibleAgentId + _activityId)"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_provId"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"unique identifier referring to the provenance entry")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_did"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"refers to decentralized identifier (a bytes32 length ID) of the entity")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_delegateAgentId"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"refers to address acting on behalf of the provenance record")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_responsibleAgentId"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"refers to address responsible of the provenance record")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_activityId"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"refers to activity")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_signatureDelegate"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes"),(0,l.kt)("td",{parentName:"tr",align:null},"refers to the digital signature provided by the did delegate.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_attributes"),(0,l.kt)("td",{parentName:"tr",align:null},"string"),(0,l.kt)("td",{parentName:"tr",align:null},"refers to the provenance attributes")))),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"success"),(0,l.kt)("td",{parentName:"tr",align:null},"bool"),(0,l.kt)("td",{parentName:"tr",align:null},"true if the action was properly registered")))),(0,l.kt)("h3",{id:"adddidprovider-1"},"addDIDProvider"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function addDIDProvider(bytes32 _did, address _provider) external\n")),(0,l.kt)("p",null,"addDIDProvider add new DID provider."),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"it adds new DID provider to the providers list. A provider\nis any entity that can serve the registered asset")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_did"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"refers to decentralized identifier (a bytes32 length ID).")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_provider"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"provider's address.")))),(0,l.kt)("h3",{id:"removedidprovider-1"},"removeDIDProvider"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function removeDIDProvider(bytes32 _did, address _provider) external\n")),(0,l.kt)("p",null,"removeDIDProvider delete an existing DID provider."),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_did"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"refers to decentralized identifier (a bytes32 length ID).")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_provider"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"provider's address.")))),(0,l.kt)("h3",{id:"adddidprovenancedelegate-1"},"addDIDProvenanceDelegate"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function addDIDProvenanceDelegate(bytes32 _did, address _delegate) public\n")),(0,l.kt)("p",null,"addDIDProvenanceDelegate add new DID provenance delegate."),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"it adds new DID provenance delegate to the delegates list.\nA delegate is any entity that interact with the provenance entries of one DID")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_did"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"refers to decentralized identifier (a bytes32 length ID).")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_delegate"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"delegates's address.")))),(0,l.kt)("h3",{id:"removedidprovenancedelegate-1"},"removeDIDProvenanceDelegate"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function removeDIDProvenanceDelegate(bytes32 _did, address _delegate) external\n")),(0,l.kt)("p",null,"removeDIDProvenanceDelegate delete an existing DID delegate."),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_did"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"refers to decentralized identifier (a bytes32 length ID).")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_delegate"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"delegate's address.")))),(0,l.kt)("h3",{id:"transferdidownership-1"},"transferDIDOwnership"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function transferDIDOwnership(bytes32 _did, address _newOwner) external\n")),(0,l.kt)("p",null,"transferDIDOwnership transfer DID ownership"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_did"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"refers to decentralized identifier (a bytes32 length ID)")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_newOwner"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"new owner address")))),(0,l.kt)("h3",{id:"transferdidownershipmanaged-1"},"transferDIDOwnershipManaged"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function transferDIDOwnershipManaged(address _sender, bytes32 _did, address _newOwner) external\n")),(0,l.kt)("p",null,"transferDIDOwnershipManaged transfer DID ownership"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_sender"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null})),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_did"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"refers to decentralized identifier (a bytes32 length ID)")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_newOwner"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"new owner address")))),(0,l.kt)("h3",{id:"_transferdidownership-1"},"_transferDIDOwnership"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function _transferDIDOwnership(address _sender, bytes32 _did, address _newOwner) internal\n")),(0,l.kt)("h3",{id:"grantpermission-7"},"grantPermission"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function grantPermission(bytes32 _did, address _grantee) external\n")),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"grantPermission grants access permission to grantee")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_did"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"refers to decentralized identifier (a bytes32 length ID)")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_grantee"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"address")))),(0,l.kt)("h3",{id:"revokepermission-1"},"revokePermission"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function revokePermission(bytes32 _did, address _grantee) external\n")),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"revokePermission revokes access permission from grantee")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_did"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"refers to decentralized identifier (a bytes32 length ID)")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_grantee"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"address")))),(0,l.kt)("h3",{id:"getpermission-1"},"getPermission"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function getPermission(bytes32 _did, address _grantee) external view returns (bool)\n")),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"getPermission gets access permission of a grantee")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_did"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"refers to decentralized identifier (a bytes32 length ID)")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_grantee"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"address")))),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[0]"),(0,l.kt)("td",{parentName:"tr",align:null},"bool"),(0,l.kt)("td",{parentName:"tr",align:null},"true if grantee has access permission to a DID")))),(0,l.kt)("h3",{id:"isdidprovider-1"},"isDIDProvider"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function isDIDProvider(bytes32 _did, address _provider) public view returns (bool)\n")),(0,l.kt)("p",null,"isDIDProvider check whether a given DID provider exists"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_did"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"refers to decentralized identifier (a bytes32 length ID).")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_provider"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"provider's address.")))),(0,l.kt)("h3",{id:"isdidproviderorowner-1"},"isDIDProviderOrOwner"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function isDIDProviderOrOwner(bytes32 _did, address _provider) public view returns (bool)\n")),(0,l.kt)("h3",{id:"getdidregister-1"},"getDIDRegister"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function getDIDRegister(bytes32 _did) public view returns (address owner, bytes32 lastChecksum, string url, address lastUpdatedBy, uint256 blockNumberUpdated, address[] providers, uint256 nftSupply, uint256 mintCap, uint256 royalties)\n")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_did"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"refers to decentralized identifier (a bytes32 length ID).")))),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"owner"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"the did owner")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"lastChecksum"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"last checksum")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"url"),(0,l.kt)("td",{parentName:"tr",align:null},"string"),(0,l.kt)("td",{parentName:"tr",align:null},"URL to the DID metadata")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"lastUpdatedBy"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"who was the last updating the DID")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"blockNumberUpdated"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"In which block was the DID updated")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"providers"),(0,l.kt)("td",{parentName:"tr",align:null},"address[]"),(0,l.kt)("td",{parentName:"tr",align:null},"the list of providers")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"nftSupply"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"the supply of nfts")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"mintCap"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"the maximum number of nfts that can be minted")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"royalties"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"the royalties amount")))),(0,l.kt)("h3",{id:"getdidsupply-1"},"getDIDSupply"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function getDIDSupply(bytes32 _did) public view returns (uint256 nftSupply, uint256 mintCap)\n")),(0,l.kt)("h3",{id:"getblocknumberupdated-1"},"getBlockNumberUpdated"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function getBlockNumberUpdated(bytes32 _did) public view returns (uint256 blockNumberUpdated)\n")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_did"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"refers to decentralized identifier (a bytes32 length ID).")))),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"blockNumberUpdated"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"last modified (update) block number of a DID.")))),(0,l.kt)("h3",{id:"getdidowner-1"},"getDIDOwner"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function getDIDOwner(bytes32 _did) public view returns (address didOwner)\n")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_did"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"refers to decentralized identifier (a bytes32 length ID).")))),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"didOwner"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"the address of the DID owner.")))),(0,l.kt)("h3",{id:"getdidroyaltyrecipient-1"},"getDIDRoyaltyRecipient"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function getDIDRoyaltyRecipient(bytes32 _did) public view returns (address)\n")),(0,l.kt)("h3",{id:"getdidroyaltyscheme-1"},"getDIDRoyaltyScheme"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function getDIDRoyaltyScheme(bytes32 _did) public view returns (address)\n")),(0,l.kt)("h3",{id:"getdidcreator-1"},"getDIDCreator"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function getDIDCreator(bytes32 _did) public view returns (address)\n")),(0,l.kt)("h3",{id:"_grantpermission-1"},"_grantPermission"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function _grantPermission(bytes32 _did, address _grantee) internal\n")),(0,l.kt)("p",null,"_",(0,l.kt)("em",{parentName:"p"},"grantPermission grants access permission to grantee")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_did"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"refers to decentralized identifier (a bytes32 length ID)")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_grantee"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"address")))),(0,l.kt)("h3",{id:"_revokepermission-1"},"_revokePermission"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function _revokePermission(bytes32 _did, address _grantee) internal\n")),(0,l.kt)("p",null,"_",(0,l.kt)("em",{parentName:"p"},"revokePermission revokes access permission from grantee")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_did"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"refers to decentralized identifier (a bytes32 length ID)")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_grantee"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"address")))),(0,l.kt)("h3",{id:"_getpermission-1"},"_getPermission"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function _getPermission(bytes32 _did, address _grantee) internal view returns (bool)\n")),(0,l.kt)("p",null,"_",(0,l.kt)("em",{parentName:"p"},"getPermission gets access permission of a grantee")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_did"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"refers to decentralized identifier (a bytes32 length ID)")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_grantee"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"address")))),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[0]"),(0,l.kt)("td",{parentName:"tr",align:null},"bool"),(0,l.kt)("td",{parentName:"tr",align:null},"true if grantee has access permission to a DID")))),(0,l.kt)("h3",{id:"getprovenanceentry-1"},"getProvenanceEntry"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function getProvenanceEntry(bytes32 _provId) public view returns (bytes32 did, bytes32 relatedDid, address agentId, bytes32 activityId, address agentInvolvedId, uint8 method, address createdBy, uint256 blockNumberUpdated, bytes signature)\n")),(0,l.kt)("p",null,"Fetch the complete provenance entry attributes"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_provId"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"refers to the provenance identifier")))),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"did"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"to what DID refers this entry")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"relatedDid"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"DID related with the entry")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"agentId"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"the agent identifier")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"activityId"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"referring to the id of the activity")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"agentInvolvedId"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"agent involved with the action")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"method"),(0,l.kt)("td",{parentName:"tr",align:null},"uint8"),(0,l.kt)("td",{parentName:"tr",align:null},"the w3c provenance method")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"createdBy"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"who is creating this entry")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"blockNumberUpdated"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"in which block was updated")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"signature"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes"),(0,l.kt)("td",{parentName:"tr",align:null},"digital signature")))),(0,l.kt)("h3",{id:"isdidowner-1"},"isDIDOwner"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function isDIDOwner(address _address, bytes32 _did) public view returns (bool)\n")),(0,l.kt)("p",null,"isDIDOwner check whether a given address is owner for a DID"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_address"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"user address.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_did"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"refers to decentralized identifier (a bytes32 length ID).")))),(0,l.kt)("h3",{id:"isownerproviderordelegate-1"},"isOwnerProviderOrDelegate"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function isOwnerProviderOrDelegate(bytes32 _did) public view returns (bool)\n")),(0,l.kt)("p",null,"isOwnerProviderOrDelegate check whether msg.sender is owner, provider or\ndelegate for a DID given"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_did"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"refers to decentralized identifier (a bytes32 length ID).")))),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[0]"),(0,l.kt)("td",{parentName:"tr",align:null},"bool"),(0,l.kt)("td",{parentName:"tr",align:null},"boolean true if yes")))),(0,l.kt)("h3",{id:"isprovenancedelegate-1"},"isProvenanceDelegate"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function isProvenanceDelegate(bytes32 _did, address _delegate) public view returns (bool)\n")),(0,l.kt)("p",null,"isProvenanceDelegate check whether a given DID delegate exists"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_did"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"refers to decentralized identifier (a bytes32 length ID).")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_delegate"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"delegate's address.")))),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[0]"),(0,l.kt)("td",{parentName:"tr",align:null},"bool"),(0,l.kt)("td",{parentName:"tr",align:null},"boolean true if yes")))),(0,l.kt)("h3",{id:"getprovenanceowner-1"},"getProvenanceOwner"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function getProvenanceOwner(bytes32 _did) public view returns (address provenanceOwner)\n")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_did"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"refers to decentralized identifier (a bytes32 length ID).")))),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"provenanceOwner"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"the address of the Provenance owner.")))),(0,l.kt)("h2",{id:"didregistry-26"},"DIDRegistry"),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"Implementation of a Mintable DID Registry.")),(0,l.kt)("h3",{id:"erc1155-7"},"erc1155"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"contract NFTUpgradeable erc1155\n")),(0,l.kt)("h3",{id:"erc721-3"},"erc721"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"contract NFT721Upgradeable erc721\n")),(0,l.kt)("h3",{id:"royaltiescheckers-1"},"royaltiesCheckers"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"mapping(address => bool) royaltiesCheckers\n")),(0,l.kt)("h3",{id:"initialize-92"},"initialize"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function initialize(address _owner, address _erc1155, address _erc721) public\n")),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"DIDRegistry Initializer\nInitialize Ownable. Only on contract creation.")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_owner"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"refers to the owner of the contract.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_erc1155"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null})),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_erc721"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null})))),(0,l.kt)("h3",{id:"registerroyaltieschecker-1"},"registerRoyaltiesChecker"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function registerRoyaltiesChecker(address _addr) public\n")),(0,l.kt)("h3",{id:"didroyaltiesadded-1"},"DIDRoyaltiesAdded"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"event DIDRoyaltiesAdded(bytes32 did, address addr)\n")),(0,l.kt)("h3",{id:"didroyaltyrecipientchanged-1"},"DIDRoyaltyRecipientChanged"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"event DIDRoyaltyRecipientChanged(bytes32 did, address addr)\n")),(0,l.kt)("h3",{id:"setdidroyalties-1"},"setDIDRoyalties"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function setDIDRoyalties(bytes32 _did, address _royalties) public\n")),(0,l.kt)("h3",{id:"setdidroyaltyrecipient-1"},"setDIDRoyaltyRecipient"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function setDIDRoyaltyRecipient(bytes32 _did, address _recipient) public\n")),(0,l.kt)("h3",{id:"registermintabledid-2"},"registerMintableDID"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function registerMintableDID(bytes32 _didSeed, bytes32 _checksum, address[] _providers, string _url, uint256 _cap, uint8 _royalties, bool _mint, bytes32 _activityId, string _nftMetadata) public\n")),(0,l.kt)("p",null,"Register a Mintable DID using NFTs based in the ERC-1155 standard."),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"The first attribute of a DID registered sets the DID owner.\nSubsequent updates record _checksum and update info.")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_didSeed"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"refers to decentralized identifier seed (a bytes32 length ID).")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_checksum"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"includes a one-way HASH calculated using the DDO content.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_providers"),(0,l.kt)("td",{parentName:"tr",align:null},"address[]"),(0,l.kt)("td",{parentName:"tr",align:null},"list of addresses that can act as an asset provider")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_url"),(0,l.kt)("td",{parentName:"tr",align:null},"string"),(0,l.kt)("td",{parentName:"tr",align:null},"refers to the url resolving the DID into a DID Document (DDO), limited to 2048 bytes.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_cap"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"refers to the mint cap")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_royalties"),(0,l.kt)("td",{parentName:"tr",align:null},"uint8"),(0,l.kt)("td",{parentName:"tr",align:null},"refers to the royalties to reward to the DID creator in the secondary market")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_mint"),(0,l.kt)("td",{parentName:"tr",align:null},"bool"),(0,l.kt)("td",{parentName:"tr",align:null},"if true it mints the ERC-1155 NFTs attached to the asset")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_activityId"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"refers to activity")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_nftMetadata"),(0,l.kt)("td",{parentName:"tr",align:null},"string"),(0,l.kt)("td",{parentName:"tr",align:null},"refers to the url providing the NFT Metadata")))),(0,l.kt)("h3",{id:"registermintabledid721-1"},"registerMintableDID721"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function registerMintableDID721(bytes32 _didSeed, bytes32 _checksum, address[] _providers, string _url, uint8 _royalties, bool _mint, bytes32 _activityId, string _nftMetadata) public\n")),(0,l.kt)("p",null,"Register a Mintable DID using NFTs based in the ERC-721 standard."),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"The first attribute of a DID registered sets the DID owner.\nSubsequent updates record _checksum and update info.")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_didSeed"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"refers to decentralized identifier seed (a bytes32 length ID).")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_checksum"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"includes a one-way HASH calculated using the DDO content.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_providers"),(0,l.kt)("td",{parentName:"tr",align:null},"address[]"),(0,l.kt)("td",{parentName:"tr",align:null},"list of addresses that can act as an asset provider")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_url"),(0,l.kt)("td",{parentName:"tr",align:null},"string"),(0,l.kt)("td",{parentName:"tr",align:null},"refers to the url resolving the DID into a DID Document (DDO), limited to 2048 bytes.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_royalties"),(0,l.kt)("td",{parentName:"tr",align:null},"uint8"),(0,l.kt)("td",{parentName:"tr",align:null},"refers to the royalties to reward to the DID creator in the secondary market")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_mint"),(0,l.kt)("td",{parentName:"tr",align:null},"bool"),(0,l.kt)("td",{parentName:"tr",align:null},"if true it mints the ERC-1155 NFTs attached to the asset")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_activityId"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"refers to activity")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_nftMetadata"),(0,l.kt)("td",{parentName:"tr",align:null},"string"),(0,l.kt)("td",{parentName:"tr",align:null},"refers to the url providing the NFT Metadata")))),(0,l.kt)("h3",{id:"registermintabledid-3"},"registerMintableDID"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function registerMintableDID(bytes32 _didSeed, bytes32 _checksum, address[] _providers, string _url, uint256 _cap, uint8 _royalties, bytes32 _activityId, string _nftMetadata) public\n")),(0,l.kt)("p",null,"Register a Mintable DID."),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"The first attribute of a DID registered sets the DID owner.\nSubsequent updates record _checksum and update info.")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_didSeed"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"refers to decentralized identifier seed (a bytes32 length ID).")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_checksum"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"includes a one-way HASH calculated using the DDO content.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_providers"),(0,l.kt)("td",{parentName:"tr",align:null},"address[]"),(0,l.kt)("td",{parentName:"tr",align:null},"list of addresses that can act as an asset provider")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_url"),(0,l.kt)("td",{parentName:"tr",align:null},"string"),(0,l.kt)("td",{parentName:"tr",align:null},"refers to the url resolving the DID into a DID Document (DDO), limited to 2048 bytes.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_cap"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"refers to the mint cap")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_royalties"),(0,l.kt)("td",{parentName:"tr",align:null},"uint8"),(0,l.kt)("td",{parentName:"tr",align:null},"refers to the royalties to reward to the DID creator in the secondary market")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_activityId"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"refers to activity")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_nftMetadata"),(0,l.kt)("td",{parentName:"tr",align:null},"string"),(0,l.kt)("td",{parentName:"tr",align:null},"refers to the url providing the NFT Metadata")))),(0,l.kt)("h3",{id:"enableandmintdidnft-1"},"enableAndMintDidNft"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function enableAndMintDidNft(bytes32 _did, uint256 _cap, uint8 _royalties, bool _mint, string _nftMetadata) public returns (bool success)\n")),(0,l.kt)("p",null,"enableDidNft creates the initial setup of NFTs minting and royalties distribution for ERC-1155 NFTs.\nAfter this initial setup, this data can't be changed anymore for the DID given, even for the owner of the DID.\nThe reason of this is to avoid minting additional NFTs after the initial agreement, what could affect the\nvaluation of NFTs of a DID already created."),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"update the DID registry providers list by adding the mintCap and royalties configuration")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_did"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"refers to decentralized identifier (a byte32 length ID)")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_cap"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"refers to the mint cap")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_royalties"),(0,l.kt)("td",{parentName:"tr",align:null},"uint8"),(0,l.kt)("td",{parentName:"tr",align:null},"refers to the royalties to reward to the DID creator in the secondary market")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_mint"),(0,l.kt)("td",{parentName:"tr",align:null},"bool"),(0,l.kt)("td",{parentName:"tr",align:null},"if is true mint directly the amount capped tokens and lock in the _lockAddress")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_nftMetadata"),(0,l.kt)("td",{parentName:"tr",align:null},"string"),(0,l.kt)("td",{parentName:"tr",align:null},"refers to the url providing the NFT Metadata")))),(0,l.kt)("h3",{id:"enableandmintdidnft721-1"},"enableAndMintDidNft721"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function enableAndMintDidNft721(bytes32 _did, uint8 _royalties, bool _mint, string _nftMetadata) public returns (bool success)\n")),(0,l.kt)("p",null,"enableAndMintDidNft721 creates the initial setup of NFTs minting and royalties distribution for ERC-721 NFTs.\nAfter this initial setup, this data can't be changed anymore for the DID given, even for the owner of the DID.\nThe reason of this is to avoid minting additional NFTs after the initial agreement, what could affect the\nvaluation of NFTs of a DID already created."),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"update the DID registry providers list by adding the mintCap and royalties configuration")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_did"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"refers to decentralized identifier (a byte32 length ID)")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_royalties"),(0,l.kt)("td",{parentName:"tr",align:null},"uint8"),(0,l.kt)("td",{parentName:"tr",align:null},"refers to the royalties to reward to the DID creator in the secondary market")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_mint"),(0,l.kt)("td",{parentName:"tr",align:null},"bool"),(0,l.kt)("td",{parentName:"tr",align:null},"if is true mint directly the amount capped tokens and lock in the _lockAddress")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_nftMetadata"),(0,l.kt)("td",{parentName:"tr",align:null},"string"),(0,l.kt)("td",{parentName:"tr",align:null},"refers to the url providing the NFT Metadata")))),(0,l.kt)("h3",{id:"mint-15"},"mint"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function mint(bytes32 _did, uint256 _amount, address _receiver) public\n")),(0,l.kt)("p",null,"Mints a NFT associated to the DID"),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"Because ERC-1155 uses uint256 and DID's are bytes32, there is a conversion between both\nOnly the DID owner can mint NFTs associated to the DID")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_did"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"refers to decentralized identifier (a bytes32 length ID).")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_amount"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"amount to mint")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_receiver"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"the address that will receive the new nfts minted")))),(0,l.kt)("h3",{id:"mint-16"},"mint"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function mint(bytes32 _did, uint256 _amount) public\n")),(0,l.kt)("h3",{id:"mint721-2"},"mint721"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function mint721(bytes32 _did, address _receiver) public\n")),(0,l.kt)("p",null,"Mints a ERC-721 NFT associated to the DID"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_did"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"refers to decentralized identifier (a bytes32 length ID).")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_receiver"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"the address that will receive the new nfts minted")))),(0,l.kt)("h3",{id:"mint721-3"},"mint721"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function mint721(bytes32 _did) public\n")),(0,l.kt)("h3",{id:"burn-7"},"burn"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function burn(bytes32 _did, uint256 _amount) public\n")),(0,l.kt)("p",null,"Burns NFTs associated to the DID"),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"Because ERC-1155 uses uint256 and DID's are bytes32, there is a conversion between both\nOnly the DID owner can burn NFTs associated to the DID")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_did"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"refers to decentralized identifier (a bytes32 length ID).")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_amount"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"amount to burn")))),(0,l.kt)("h3",{id:"burn721-1"},"burn721"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function burn721(bytes32 _did) public\n")),(0,l.kt)("h2",{id:"didregistrylibrary-1"},"DIDRegistryLibrary"),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"All function calls are currently implemented without side effects")),(0,l.kt)("h3",{id:"didregister-2"},"DIDRegister"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"struct DIDRegister {\n  address owner;\n  uint8 royalties;\n  bool nftInitialized;\n  bool nft721Initialized;\n  address creator;\n  bytes32 lastChecksum;\n  string url;\n  address lastUpdatedBy;\n  uint256 blockNumberUpdated;\n  address[] providers;\n  address[] delegates;\n  uint256 nftSupply;\n  uint256 mintCap;\n  address royaltyRecipient;\n  contract IRoyaltyScheme royaltyScheme;\n}\n")),(0,l.kt)("h3",{id:"didregisterlist-4"},"DIDRegisterList"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"struct DIDRegisterList {\n  mapping(bytes32 &#x3D;&gt; struct DIDRegistryLibrary.DIDRegister) didRegisters;\n  bytes32[] didRegisterIds;\n}\n")),(0,l.kt)("h3",{id:"update-7"},"update"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function update(struct DIDRegistryLibrary.DIDRegisterList _self, bytes32 _did, bytes32 _checksum, string _url) external\n")),(0,l.kt)("p",null,"update the DID store"),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"access modifiers and storage pointer should be implemented in DIDRegistry")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_self"),(0,l.kt)("td",{parentName:"tr",align:null},"struct DIDRegistryLibrary.DIDRegisterList"),(0,l.kt)("td",{parentName:"tr",align:null},"refers to storage pointer")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_did"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"refers to decentralized identifier (a byte32 length ID)")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_checksum"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"includes a one-way HASH calculated using the DDO content")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_url"),(0,l.kt)("td",{parentName:"tr",align:null},"string"),(0,l.kt)("td",{parentName:"tr",align:null},"includes the url resolving to the DID Document (DDO)")))),(0,l.kt)("h3",{id:"initializenftconfig-2"},"initializeNftConfig"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function initializeNftConfig(struct DIDRegistryLibrary.DIDRegisterList _self, bytes32 _did, uint256 _cap, uint8 _royalties) internal\n")),(0,l.kt)("p",null,"initializeNftConfig creates the initial setup of NFTs minting and royalties distribution.\nAfter this initial setup, this data can't be changed anymore for the DID given, even for the owner of the DID.\nThe reason of this is to avoid minting additional NFTs after the initial agreement, what could affect the\nvaluation of NFTs of a DID already created."),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"update the DID registry providers list by adding the mintCap and royalties configuration")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_self"),(0,l.kt)("td",{parentName:"tr",align:null},"struct DIDRegistryLibrary.DIDRegisterList"),(0,l.kt)("td",{parentName:"tr",align:null},"refers to storage pointer")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_did"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"refers to decentralized identifier (a byte32 length ID)")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_cap"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"refers to the mint cap")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_royalties"),(0,l.kt)("td",{parentName:"tr",align:null},"uint8"),(0,l.kt)("td",{parentName:"tr",align:null},"refers to the royalties to reward to the DID creator in the secondary market        The royalties in secondary market for the creator should be between 0% >= x < 100%")))),(0,l.kt)("h3",{id:"initializenft721config-2"},"initializeNft721Config"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function initializeNft721Config(struct DIDRegistryLibrary.DIDRegisterList _self, bytes32 _did, uint8 _royalties) internal\n")),(0,l.kt)("h3",{id:"areroyaltiesvalid-4"},"areRoyaltiesValid"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function areRoyaltiesValid(struct DIDRegistryLibrary.DIDRegisterList _self, bytes32 _did, uint256[] _amounts, address[] _receivers, address _tokenAddress) internal view returns (bool)\n")),(0,l.kt)("p",null,"areRoyaltiesValid checks if for a given DID and rewards distribution, this allocate the",(0,l.kt)("br",{parentName:"p"}),"\n","original creator royalties properly"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_self"),(0,l.kt)("td",{parentName:"tr",align:null},"struct DIDRegistryLibrary.DIDRegisterList"),(0,l.kt)("td",{parentName:"tr",align:null},"refers to storage pointer")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_did"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"refers to decentralized identifier (a byte32 length ID)")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_amounts"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256[]"),(0,l.kt)("td",{parentName:"tr",align:null},"refers to the amounts to reward")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_receivers"),(0,l.kt)("td",{parentName:"tr",align:null},"address[]"),(0,l.kt)("td",{parentName:"tr",align:null},"refers to the receivers of rewards")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_tokenAddress"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null})))),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[0]"),(0,l.kt)("td",{parentName:"tr",align:null},"bool"),(0,l.kt)("td",{parentName:"tr",align:null},"true if the rewards distribution respect the original creator royalties")))),(0,l.kt)("h3",{id:"addprovider-1"},"addProvider"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function addProvider(struct DIDRegistryLibrary.DIDRegisterList _self, bytes32 _did, address provider) internal\n")),(0,l.kt)("p",null,"addProvider add provider to DID registry"),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"update the DID registry providers list by adding a new provider")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_self"),(0,l.kt)("td",{parentName:"tr",align:null},"struct DIDRegistryLibrary.DIDRegisterList"),(0,l.kt)("td",{parentName:"tr",align:null},"refers to storage pointer")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_did"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"refers to decentralized identifier (a byte32 length ID)")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"provider"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"the provider's address")))),(0,l.kt)("h3",{id:"removeprovider-1"},"removeProvider"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function removeProvider(struct DIDRegistryLibrary.DIDRegisterList _self, bytes32 _did, address _provider) internal returns (bool)\n")),(0,l.kt)("p",null,"removeProvider remove provider from DID registry"),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"update the DID registry providers list by removing an existing provider")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_self"),(0,l.kt)("td",{parentName:"tr",align:null},"struct DIDRegistryLibrary.DIDRegisterList"),(0,l.kt)("td",{parentName:"tr",align:null},"refers to storage pointer")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_did"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"refers to decentralized identifier (a byte32 length ID)")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_provider"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"the provider's address")))),(0,l.kt)("h3",{id:"updatedidowner-2"},"updateDIDOwner"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function updateDIDOwner(struct DIDRegistryLibrary.DIDRegisterList _self, bytes32 _did, address _newOwner) internal\n")),(0,l.kt)("p",null,"updateDIDOwner transfer DID ownership to a new owner"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_self"),(0,l.kt)("td",{parentName:"tr",align:null},"struct DIDRegistryLibrary.DIDRegisterList"),(0,l.kt)("td",{parentName:"tr",align:null},"refers to storage pointer")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_did"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"refers to decentralized identifier (a byte32 length ID)")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_newOwner"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"the new DID owner address")))),(0,l.kt)("h3",{id:"isprovider-1"},"isProvider"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function isProvider(struct DIDRegistryLibrary.DIDRegisterList _self, bytes32 _did, address _provider) public view returns (bool)\n")),(0,l.kt)("p",null,"isProvider check whether DID provider exists"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_self"),(0,l.kt)("td",{parentName:"tr",align:null},"struct DIDRegistryLibrary.DIDRegisterList"),(0,l.kt)("td",{parentName:"tr",align:null},"refers to storage pointer")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_did"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"refers to decentralized identifier (a byte32 length ID)")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_provider"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"the provider's address")))),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[0]"),(0,l.kt)("td",{parentName:"tr",align:null},"bool"),(0,l.kt)("td",{parentName:"tr",align:null},"true if the provider already exists")))),(0,l.kt)("h3",{id:"getproviderindex-1"},"getProviderIndex"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function getProviderIndex(struct DIDRegistryLibrary.DIDRegisterList _self, bytes32 _did, address provider) private view returns (int256)\n")),(0,l.kt)("p",null,"getProviderIndex get the index of a provider"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_self"),(0,l.kt)("td",{parentName:"tr",align:null},"struct DIDRegistryLibrary.DIDRegisterList"),(0,l.kt)("td",{parentName:"tr",align:null},"refers to storage pointer")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_did"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"refers to decentralized identifier (a byte32 length ID)")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"provider"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"the provider's address")))),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[0]"),(0,l.kt)("td",{parentName:"tr",align:null},"int256"),(0,l.kt)("td",{parentName:"tr",align:null},"the index if the provider exists otherwise return -1")))),(0,l.kt)("h3",{id:"adddelegate-1"},"addDelegate"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function addDelegate(struct DIDRegistryLibrary.DIDRegisterList _self, bytes32 _did, address delegate) internal\n")),(0,l.kt)("p",null,"addDelegate add delegate to DID registry"),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"update the DID registry delegates list by adding a new delegate")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_self"),(0,l.kt)("td",{parentName:"tr",align:null},"struct DIDRegistryLibrary.DIDRegisterList"),(0,l.kt)("td",{parentName:"tr",align:null},"refers to storage pointer")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_did"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"refers to decentralized identifier (a byte32 length ID)")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"delegate"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"the delegate's address")))),(0,l.kt)("h3",{id:"removedelegate-1"},"removeDelegate"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function removeDelegate(struct DIDRegistryLibrary.DIDRegisterList _self, bytes32 _did, address _delegate) internal returns (bool)\n")),(0,l.kt)("p",null,"removeDelegate remove delegate from DID registry"),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"update the DID registry delegates list by removing an existing delegate")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_self"),(0,l.kt)("td",{parentName:"tr",align:null},"struct DIDRegistryLibrary.DIDRegisterList"),(0,l.kt)("td",{parentName:"tr",align:null},"refers to storage pointer")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_did"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"refers to decentralized identifier (a byte32 length ID)")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_delegate"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"the delegate's address")))),(0,l.kt)("h3",{id:"isdelegate-1"},"isDelegate"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function isDelegate(struct DIDRegistryLibrary.DIDRegisterList _self, bytes32 _did, address _delegate) public view returns (bool)\n")),(0,l.kt)("p",null,"isDelegate check whether DID delegate exists"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_self"),(0,l.kt)("td",{parentName:"tr",align:null},"struct DIDRegistryLibrary.DIDRegisterList"),(0,l.kt)("td",{parentName:"tr",align:null},"refers to storage pointer")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_did"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"refers to decentralized identifier (a byte32 length ID)")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_delegate"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"the delegate's address")))),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[0]"),(0,l.kt)("td",{parentName:"tr",align:null},"bool"),(0,l.kt)("td",{parentName:"tr",align:null},"true if the delegate already exists")))),(0,l.kt)("h3",{id:"getdelegateindex-1"},"getDelegateIndex"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function getDelegateIndex(struct DIDRegistryLibrary.DIDRegisterList _self, bytes32 _did, address delegate) private view returns (int256)\n")),(0,l.kt)("p",null,"getDelegateIndex get the index of a delegate"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_self"),(0,l.kt)("td",{parentName:"tr",align:null},"struct DIDRegistryLibrary.DIDRegisterList"),(0,l.kt)("td",{parentName:"tr",align:null},"refers to storage pointer")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_did"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"refers to decentralized identifier (a byte32 length ID)")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"delegate"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"the delegate's address")))),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[0]"),(0,l.kt)("td",{parentName:"tr",align:null},"int256"),(0,l.kt)("td",{parentName:"tr",align:null},"the index if the delegate exists otherwise return -1")))),(0,l.kt)("h2",{id:"provenanceregistry-2"},"ProvenanceRegistry"),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"All function calls are currently implemented without side effects")),(0,l.kt)("h3",{id:"__provenanceregistry_init-1"},"__ProvenanceRegistry_init"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function __ProvenanceRegistry_init() internal\n")),(0,l.kt)("h3",{id:"__provenanceregistry_init_unchained-1"},"__ProvenanceRegistry_init_unchained"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function __ProvenanceRegistry_init_unchained() internal\n")),(0,l.kt)("h3",{id:"provenance-1"},"Provenance"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"struct Provenance {\n  bytes32 did;\n  bytes32 relatedDid;\n  address agentId;\n  bytes32 activityId;\n  address agentInvolvedId;\n  uint8 method;\n  address createdBy;\n  uint256 blockNumberUpdated;\n  bytes signature;\n}\n")),(0,l.kt)("h3",{id:"provenanceregistrylist-1"},"ProvenanceRegistryList"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"struct ProvenanceRegistryList {\n  mapping(bytes32 &#x3D;&gt; struct ProvenanceRegistry.Provenance) list;\n}\n")),(0,l.kt)("h3",{id:"provenanceregistry-3"},"provenanceRegistry"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"struct ProvenanceRegistry.ProvenanceRegistryList provenanceRegistry\n")),(0,l.kt)("h3",{id:"provenancemethod-1"},"ProvenanceMethod"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"enum ProvenanceMethod {\n  ENTITY,\n  ACTIVITY,\n  WAS_GENERATED_BY,\n  USED,\n  WAS_INFORMED_BY,\n  WAS_STARTED_BY,\n  WAS_ENDED_BY,\n  WAS_INVALIDATED_BY,\n  WAS_DERIVED_FROM,\n  AGENT,\n  WAS_ATTRIBUTED_TO,\n  WAS_ASSOCIATED_WITH,\n  ACTED_ON_BEHALF\n}\n")),(0,l.kt)("h3",{id:"provenanceattributeregistered-1"},"ProvenanceAttributeRegistered"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"event ProvenanceAttributeRegistered(bytes32 provId, bytes32 _did, address _agentId, bytes32 _activityId, bytes32 _relatedDid, address _agentInvolvedId, enum ProvenanceRegistry.ProvenanceMethod _method, string _attributes, uint256 _blockNumberUpdated)\n")),(0,l.kt)("p",null,"Provenance Events"),(0,l.kt)("h3",{id:"wasgeneratedby-3"},"WasGeneratedBy"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"event WasGeneratedBy(bytes32 _did, address _agentId, bytes32 _activityId, bytes32 provId, string _attributes, uint256 _blockNumberUpdated)\n")),(0,l.kt)("h3",{id:"used-4"},"Used"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"event Used(bytes32 _did, address _agentId, bytes32 _activityId, bytes32 provId, string _attributes, uint256 _blockNumberUpdated)\n")),(0,l.kt)("h3",{id:"wasderivedfrom-3"},"WasDerivedFrom"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"event WasDerivedFrom(bytes32 _newEntityDid, bytes32 _usedEntityDid, address _agentId, bytes32 _activityId, bytes32 provId, string _attributes, uint256 _blockNumberUpdated)\n")),(0,l.kt)("h3",{id:"wasassociatedwith-3"},"WasAssociatedWith"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"event WasAssociatedWith(bytes32 _entityDid, address _agentId, bytes32 _activityId, bytes32 provId, string _attributes, uint256 _blockNumberUpdated)\n")),(0,l.kt)("h3",{id:"actedonbehalf-3"},"ActedOnBehalf"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"event ActedOnBehalf(bytes32 _entityDid, address _delegateAgentId, address _responsibleAgentId, bytes32 _activityId, bytes32 provId, string _attributes, uint256 _blockNumberUpdated)\n")),(0,l.kt)("h3",{id:"createprovenanceentry-1"},"createProvenanceEntry"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function createProvenanceEntry(bytes32 _provId, bytes32 _did, bytes32 _relatedDid, address _agentId, bytes32 _activityId, address _agentInvolvedId, enum ProvenanceRegistry.ProvenanceMethod _method, address _createdBy, bytes _signatureDelegate, string _attributes) internal returns (bool)\n")),(0,l.kt)("p",null,"create an event in the Provenance store"),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"access modifiers and storage pointer should be implemented in ProvenanceRegistry")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_provId"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"refers to provenance event identifier")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_did"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"refers to decentralized identifier (a byte32 length ID)")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_relatedDid"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"refers to decentralized identifier (a byte32 length ID) of a related entity")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_agentId"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"refers to address of the agent creating the provenance record")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_activityId"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"refers to activity")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_agentInvolvedId"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"refers to address of the agent involved with the provenance record")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_method"),(0,l.kt)("td",{parentName:"tr",align:null},"enum ProvenanceRegistry.ProvenanceMethod"),(0,l.kt)("td",{parentName:"tr",align:null},"refers to the W3C Provenance method")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_createdBy"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"refers to address of the agent triggering the activity")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_signatureDelegate"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes"),(0,l.kt)("td",{parentName:"tr",align:null},"refers to the digital signature provided by the did delegate.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_attributes"),(0,l.kt)("td",{parentName:"tr",align:null},"string"),(0,l.kt)("td",{parentName:"tr",align:null})))),(0,l.kt)("h3",{id:"_wasgeneratedby-1"},"_wasGeneratedBy"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function _wasGeneratedBy(bytes32 _provId, bytes32 _did, address _agentId, bytes32 _activityId, string _attributes) internal virtual returns (bool)\n")),(0,l.kt)("p",null,"Implements the W3C PROV Generation action"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_provId"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"unique identifier referring to the provenance entry")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_did"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"refers to decentralized identifier (a bytes32 length ID) of the entity created")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_agentId"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"refers to address of the agent creating the provenance record")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_activityId"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"refers to activity")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_attributes"),(0,l.kt)("td",{parentName:"tr",align:null},"string"),(0,l.kt)("td",{parentName:"tr",align:null},"refers to the provenance attributes")))),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[0]"),(0,l.kt)("td",{parentName:"tr",align:null},"bool"),(0,l.kt)("td",{parentName:"tr",align:null},"the number of the new provenance size")))),(0,l.kt)("h3",{id:"_used-1"},"_used"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function _used(bytes32 _provId, bytes32 _did, address _agentId, bytes32 _activityId, bytes _signatureUsing, string _attributes) internal virtual returns (bool success)\n")),(0,l.kt)("p",null,"Implements the W3C PROV Usage action"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_provId"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"unique identifier referring to the provenance entry")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_did"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"refers to decentralized identifier (a bytes32 length ID) of the entity created")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_agentId"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"refers to address of the agent creating the provenance record")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_activityId"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"refers to activity")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_signatureUsing"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes"),(0,l.kt)("td",{parentName:"tr",align:null},"refers to the digital signature provided by the agent using the _did")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_attributes"),(0,l.kt)("td",{parentName:"tr",align:null},"string"),(0,l.kt)("td",{parentName:"tr",align:null},"refers to the provenance attributes")))),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"success"),(0,l.kt)("td",{parentName:"tr",align:null},"bool"),(0,l.kt)("td",{parentName:"tr",align:null},"true if the action was properly registered")))),(0,l.kt)("h3",{id:"_wasderivedfrom-1"},"_wasDerivedFrom"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function _wasDerivedFrom(bytes32 _provId, bytes32 _newEntityDid, bytes32 _usedEntityDid, address _agentId, bytes32 _activityId, string _attributes) internal virtual returns (bool success)\n")),(0,l.kt)("p",null,"Implements the W3C PROV Derivation action"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_provId"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"unique identifier referring to the provenance entry")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_newEntityDid"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"refers to decentralized identifier (a bytes32 length ID) of the entity created")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_usedEntityDid"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"refers to decentralized identifier (a bytes32 length ID) of the entity used to derive the new did")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_agentId"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"refers to address of the agent creating the provenance record")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_activityId"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"refers to activity")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_attributes"),(0,l.kt)("td",{parentName:"tr",align:null},"string"),(0,l.kt)("td",{parentName:"tr",align:null},"refers to the provenance attributes")))),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"success"),(0,l.kt)("td",{parentName:"tr",align:null},"bool"),(0,l.kt)("td",{parentName:"tr",align:null},"true if the action was properly registered")))),(0,l.kt)("h3",{id:"_wasassociatedwith-1"},"_wasAssociatedWith"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function _wasAssociatedWith(bytes32 _provId, bytes32 _did, address _agentId, bytes32 _activityId, string _attributes) internal virtual returns (bool success)\n")),(0,l.kt)("p",null,"Implements the W3C PROV Association action"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_provId"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"unique identifier referring to the provenance entry")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_did"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"refers to decentralized identifier (a bytes32 length ID) of the entity")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_agentId"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"refers to address of the agent creating the provenance record")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_activityId"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"refers to activity")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_attributes"),(0,l.kt)("td",{parentName:"tr",align:null},"string"),(0,l.kt)("td",{parentName:"tr",align:null},"refers to the provenance attributes")))),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"success"),(0,l.kt)("td",{parentName:"tr",align:null},"bool"),(0,l.kt)("td",{parentName:"tr",align:null},"true if the action was properly registered")))),(0,l.kt)("h3",{id:"_actedonbehalf-1"},"_actedOnBehalf"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function _actedOnBehalf(bytes32 _provId, bytes32 _did, address _delegateAgentId, address _responsibleAgentId, bytes32 _activityId, bytes _signatureDelegate, string _attributes) internal virtual returns (bool success)\n")),(0,l.kt)("p",null,"Implements the W3C PROV Delegation action\nEach party involved in this method (_delegateAgentId & _responsibleAgentId) must provide a valid signature.\nThe content to sign is a representation of the footprint of the event (_did + _delegateAgentId + _responsibleAgentId + _activityId)"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_provId"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"unique identifier referring to the provenance entry")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_did"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"refers to decentralized identifier (a bytes32 length ID) of the entity")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_delegateAgentId"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"refers to address acting on behalf of the provenance record")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_responsibleAgentId"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"refers to address responsible of the provenance record")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_activityId"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"refers to activity")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_signatureDelegate"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes"),(0,l.kt)("td",{parentName:"tr",align:null},"refers to the digital signature provided by the did delegate.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_attributes"),(0,l.kt)("td",{parentName:"tr",align:null},"string"),(0,l.kt)("td",{parentName:"tr",align:null},"refers to the provenance attributes")))),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"success"),(0,l.kt)("td",{parentName:"tr",align:null},"bool"),(0,l.kt)("td",{parentName:"tr",align:null},"true if the action was properly registered")))),(0,l.kt)("h2",{id:"curveroyalties-1"},"CurveRoyalties"),(0,l.kt)("h3",{id:"registry-3"},"registry"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"contract DIDRegistry registry\n")),(0,l.kt)("h3",{id:"denominator-2"},"DENOMINATOR"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"uint256 DENOMINATOR\n")),(0,l.kt)("h3",{id:"royalties-2"},"royalties"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"mapping(bytes32 => uint256) royalties\n")),(0,l.kt)("h3",{id:"initialize-93"},"initialize"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function initialize(address _registry) public\n")),(0,l.kt)("h3",{id:"royaltycurve-1"},"royaltyCurve"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function royaltyCurve(uint256 num, uint256 max, uint256 rate) public pure virtual returns (uint256)\n")),(0,l.kt)("h3",{id:"setroyalty-2"},"setRoyalty"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function setRoyalty(bytes32 _did, uint256 _royalty) public\n")),(0,l.kt)("p",null,"Set royalties for a DID"),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"Can only be called by creator of the DID")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_did"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"DID for which the royalties are set")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_royalty"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"Royalty, the actual royalty will be _royalty / 10000 percent")))),(0,l.kt)("h3",{id:"check-4"},"check"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function check(bytes32 _did, uint256[] _amounts, address[] _receivers, address _token) external view returns (bool)\n")),(0,l.kt)("h2",{id:"rewardsdistributor-1"},"RewardsDistributor"),(0,l.kt)("h3",{id:"used-5"},"used"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"mapping(bytes32 => bool) used\n")),(0,l.kt)("h3",{id:"receivers-1"},"receivers"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"mapping(bytes32 => address[]) receivers\n")),(0,l.kt)("h3",{id:"registry-4"},"registry"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"contract DIDRegistry registry\n")),(0,l.kt)("h3",{id:"conditionstoremanager-7"},"conditionStoreManager"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"contract ConditionStoreManager conditionStoreManager\n")),(0,l.kt)("h3",{id:"escrow-1"},"escrow"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"address escrow\n")),(0,l.kt)("h3",{id:"initialize-94"},"initialize"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function initialize(address _registry, address _conditionStoreManager, address _escrow) public\n")),(0,l.kt)("h3",{id:"setreceivers-1"},"setReceivers"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function setReceivers(bytes32 _did, address[] _addr) public\n")),(0,l.kt)("p",null,"set receivers for did"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_did"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"DID")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_addr"),(0,l.kt)("td",{parentName:"tr",align:null},"address[]"),(0,l.kt)("td",{parentName:"tr",align:null},"list of receivers")))),(0,l.kt)("h3",{id:"claimreward-1"},"claimReward"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function claimReward(bytes32 _agreementId, bytes32 _did, uint256[] _amounts, address[] _receivers, address _returnAddress, address _lockPaymentAddress, address _tokenAddress, bytes32 _lockCondition, bytes32[] _releaseConditions) public\n")),(0,l.kt)("p",null,"distribute rewards associated with an escrow condition"),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"as paramemeters, it just gets the same parameters as fulfill for escrow condition")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_agreementId"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"agreement identifier")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_did"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"asset decentralized identifier")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_amounts"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256[]"),(0,l.kt)("td",{parentName:"tr",align:null},"token amounts to be locked/released")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_receivers"),(0,l.kt)("td",{parentName:"tr",align:null},"address[]"),(0,l.kt)("td",{parentName:"tr",align:null},"receiver's address")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_returnAddress"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null})),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_lockPaymentAddress"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"lock payment contract address")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_tokenAddress"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"the ERC20 contract address to use during the payment")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_lockCondition"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"lock condition identifier")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_releaseConditions"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32[]"),(0,l.kt)("td",{parentName:"tr",align:null},"release condition identifier")))),(0,l.kt)("h2",{id:"standardroyalties-1"},"StandardRoyalties"),(0,l.kt)("h3",{id:"registry-5"},"registry"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"contract DIDRegistry registry\n")),(0,l.kt)("h3",{id:"denominator-3"},"DENOMINATOR"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"uint256 DENOMINATOR\n")),(0,l.kt)("h3",{id:"royalties-3"},"royalties"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"mapping(bytes32 => uint256) royalties\n")),(0,l.kt)("h3",{id:"initialize-95"},"initialize"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function initialize(address _registry) public\n")),(0,l.kt)("h3",{id:"setroyalty-3"},"setRoyalty"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function setRoyalty(bytes32 _did, uint256 _royalty) public\n")),(0,l.kt)("p",null,"Set royalties for a DID"),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"Can only be called by creator of the DID")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_did"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"DID for which the royalties are set")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_royalty"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"Royalty, the actual royalty will be _royalty / 10000 percent")))),(0,l.kt)("h3",{id:"check-5"},"check"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function check(bytes32 _did, uint256[] _amounts, address[] _receivers, address) external view returns (bool)\n")),(0,l.kt)("h2",{id:"aavecredittemplate-1"},"AaveCreditTemplate"),(0,l.kt)("p",null,"_Implementation of the Aaven Credit Agreement Template\n0. Initialize the agreement"),(0,l.kt)("ol",null,(0,l.kt)("li",{parentName:"ol"},"LockNFT - Delegatee locks the NFT"),(0,l.kt)("li",{parentName:"ol"},"AaveCollateralDeposit - Delegator deposits the collateral into Aave. And approves the delegation flow"),(0,l.kt)("li",{parentName:"ol"},"AaveBorrowCondition - The Delegatee claim the credit amount from Aave"),(0,l.kt)("li",{parentName:"ol"},"AaveRepayCondition. Options:\n4.a Fulfilled state - The Delegatee pay back the loan (including fee) into Aave and gets back the NFT\n4.b Aborted state - The Delegatee doesn't pay the loan in time so the Delegator gets the NFT. The Delegator pays the loan to Aave"),(0,l.kt)("li",{parentName:"ol"},"TransferNFT. Options:\n5.a if AaveRepayCondition was fulfilled, it will allow transfer back to the Delegatee or Borrower\n5.b if AaveRepayCondition was aborted, it will allow transfer the NFT to the Delegator or Lender_")),(0,l.kt)("h3",{id:"didregistry-27"},"didRegistry"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"contract DIDRegistry didRegistry\n")),(0,l.kt)("h3",{id:"nftlockcondition-3"},"nftLockCondition"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"contract INFTLock nftLockCondition\n")),(0,l.kt)("h3",{id:"depositcondition-1"},"depositCondition"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"contract AaveCollateralDepositCondition depositCondition\n")),(0,l.kt)("h3",{id:"borrowcondition-1"},"borrowCondition"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"contract AaveBorrowCondition borrowCondition\n")),(0,l.kt)("h3",{id:"repaycondition-1"},"repayCondition"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"contract AaveRepayCondition repayCondition\n")),(0,l.kt)("h3",{id:"transfercondition-4"},"transferCondition"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"contract DistributeNFTCollateralCondition transferCondition\n")),(0,l.kt)("h3",{id:"withdrawcondition-1"},"withdrawCondition"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"contract AaveCollateralWithdrawCondition withdrawCondition\n")),(0,l.kt)("h3",{id:"vaultaddress-1"},"vaultAddress"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"mapping(bytes32 => address) vaultAddress\n")),(0,l.kt)("h3",{id:"nvmfee-3"},"nvmFee"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"uint256 nvmFee\n")),(0,l.kt)("h3",{id:"vaultlibrary-1"},"vaultLibrary"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"address vaultLibrary\n")),(0,l.kt)("h3",{id:"vaultcreated-1"},"VaultCreated"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"event VaultCreated(address _vaultAddress, address _creator, address _lender, address _borrower)\n")),(0,l.kt)("h3",{id:"initialize-96"},"initialize"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function initialize(address _owner, address _agreementStoreManagerAddress, address _nftLockConditionAddress, address _depositConditionAddress, address _borrowConditionAddress, address _repayConditionAddress, address _withdrawCollateralAddress, address _transferConditionAddress, address _vaultLibrary) external\n")),(0,l.kt)("p",null,"initialize init the  contract with the following parameters."),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"this function is called only once during the contract\ninitialization. It initializes the ownable feature, and\nset push the required condition types including\naccess , lock payment and escrow payment conditions.")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_owner"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"contract's owner account address")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_agreementStoreManagerAddress"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"agreement store manager contract address")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_nftLockConditionAddress"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"NFT Lock Condition contract address")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_depositConditionAddress"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"Aave collateral deposit Condition address")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_borrowConditionAddress"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"Aave borrow deposit Condition address")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_repayConditionAddress"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"Aave repay credit Condition address")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_withdrawCollateralAddress"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null})),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_transferConditionAddress"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"NFT Transfer Condition address")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_vaultLibrary"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null})))),(0,l.kt)("h3",{id:"createvaultagreement-1"},"createVaultAgreement"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function createVaultAgreement(bytes32 _id, bytes32 _did, bytes32[] _conditionIds, uint256[] _timeLocks, uint256[] _timeOuts, address _vaultAddress) public\n")),(0,l.kt)("h3",{id:"createagreement-6"},"createAgreement"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function createAgreement(bytes32 _id, address _lendingPool, address _dataProvider, address _weth, uint256 _agreementFee, address _treasuryAddress, bytes32 _did, bytes32[] _conditionIds, uint256[] _timeLocks, uint256[] _timeOuts, address _lender) public\n")),(0,l.kt)("h3",{id:"deployvault-1"},"deployVault"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function deployVault(address _lendingPool, address _dataProvider, address _weth, uint256 _agreementFee, address _treasuryAddress, address _borrower, address _lender) public returns (address)\n")),(0,l.kt)("h3",{id:"getvaultforagreement-1"},"getVaultForAgreement"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function getVaultForAgreement(bytes32 _agreementId) public view returns (address)\n")),(0,l.kt)("h3",{id:"updatenvmfee-1"},"updateNVMFee"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function updateNVMFee(uint256 _newFee) public\n")),(0,l.kt)("p",null,"Updates the nevermined fee for this type of agreement"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_newFee"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"New nevermined fee expressed in basis points")))),(0,l.kt)("h3",{id:"changecreditvaultlibrary-1"},"changeCreditVaultLibrary"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function changeCreditVaultLibrary(address _vaultLibrary) public\n")),(0,l.kt)("h2",{id:"accessprooftemplate-1"},"AccessProofTemplate"),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"Implementation of Access Agreement Template")),(0,l.kt)("h3",{id:"didregistry-28"},"didRegistry"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"contract DIDRegistry didRegistry\n")),(0,l.kt)("h3",{id:"accesscondition-8"},"accessCondition"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"contract AccessProofCondition accessCondition\n")),(0,l.kt)("h3",{id:"lockcondition-2"},"lockCondition"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"contract LockPaymentCondition lockCondition\n")),(0,l.kt)("h3",{id:"escrowreward-2"},"escrowReward"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"contract EscrowPaymentCondition escrowReward\n")),(0,l.kt)("h3",{id:"initialize-97"},"initialize"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function initialize(address _owner, address _agreementStoreManagerAddress, address _didRegistryAddress, address _accessConditionAddress, address _lockConditionAddress, address payable _escrowConditionAddress) external\n")),(0,l.kt)("p",null,"initialize init the\ncontract with the following parameters."),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"this function is called only once during the contract\ninitialization. It initializes the ownable feature, and\nset push the required condition types including\naccess , lock payment and escrow payment conditions.")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_owner"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"contract's owner account address")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_agreementStoreManagerAddress"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"agreement store manager contract address")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_didRegistryAddress"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"DID registry contract address")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_accessConditionAddress"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"access condition address")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_lockConditionAddress"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"lock reward condition contract address")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_escrowConditionAddress"),(0,l.kt)("td",{parentName:"tr",align:null},"address payable"),(0,l.kt)("td",{parentName:"tr",align:null},"escrow reward contract address")))),(0,l.kt)("h2",{id:"accesstemplate-1"},"AccessTemplate"),(0,l.kt)("p",null,"_Implementation of Access Agreement Template"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"}," Access template is use case specific template.\n Anyone (consumer/provider/publisher) can use this template in order\n to setup an on-chain SEA. The template is a composite of three basic\n conditions. Once the agreement is created, the consumer will lock an amount\n of tokens (as listed in the DID document - off-chain metadata) to the \n the lock reward contract which in turn will fire an event. ON the other hand \n the provider is listening to all the emitted events, the provider \n will catch the event and grant permissions to the consumer through \n secret store contract, the consumer now is able to download the data set\n by asking the off-chain component of secret store to decrypt the DID and \n encrypt it using the consumer's public key. Then the secret store will \n provide an on-chain proof that the consumer had access to the data set.\n Finally, the provider can call the escrow reward condition in order \n to release the payment. Every condition has a time window (time lock and \n time out). This implies that if the provider didn't grant the access to \n the consumer through secret store within this time window, the consumer \n can ask for refund._\n")),(0,l.kt)("h3",{id:"didregistry-29"},"didRegistry"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"contract DIDRegistry didRegistry\n")),(0,l.kt)("h3",{id:"accesscondition-9"},"accessCondition"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"contract AccessCondition accessCondition\n")),(0,l.kt)("h3",{id:"lockcondition-3"},"lockCondition"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"contract LockPaymentCondition lockCondition\n")),(0,l.kt)("h3",{id:"escrowreward-3"},"escrowReward"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"contract EscrowPaymentCondition escrowReward\n")),(0,l.kt)("h3",{id:"initialize-98"},"initialize"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function initialize(address _owner, address _agreementStoreManagerAddress, address _didRegistryAddress, address _accessConditionAddress, address _lockConditionAddress, address payable _escrowConditionAddress) external\n")),(0,l.kt)("p",null,"initialize init the\ncontract with the following parameters."),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"this function is called only once during the contract\ninitialization. It initializes the ownable feature, and\nset push the required condition types including\naccess , lock payment and escrow payment conditions.")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_owner"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"contract's owner account address")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_agreementStoreManagerAddress"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"agreement store manager contract address")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_didRegistryAddress"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"DID registry contract address")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_accessConditionAddress"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"access condition address")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_lockConditionAddress"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"lock reward condition contract address")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_escrowConditionAddress"),(0,l.kt)("td",{parentName:"tr",align:null},"address payable"),(0,l.kt)("td",{parentName:"tr",align:null},"escrow reward contract address")))),(0,l.kt)("h2",{id:"agreementtemplate-1"},"AgreementTemplate"),(0,l.kt)("p",null,"_Implementation of Agreement Template"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"}," Agreement template is a reference template where it\n has the ability to create agreements from whitelisted \n template_\n")),(0,l.kt)("h3",{id:"conditiontypes-1"},"conditionTypes"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"address[] conditionTypes\n")),(0,l.kt)("h3",{id:"agreementstoremanager-9"},"agreementStoreManager"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"contract AgreementStoreManager agreementStoreManager\n")),(0,l.kt)("h3",{id:"createagreement-7"},"createAgreement"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function createAgreement(bytes32 _id, bytes32 _did, bytes32[] _conditionIds, uint256[] _timeLocks, uint256[] _timeOuts) public\n")),(0,l.kt)("p",null,"createAgreement create new agreement"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_id"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"agreement unique identifier")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_did"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"refers to decentralized identifier (a bytes32 length ID).")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_conditionIds"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32[]"),(0,l.kt)("td",{parentName:"tr",align:null},"list of condition identifiers")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_timeLocks"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256[]"),(0,l.kt)("td",{parentName:"tr",align:null},"list of time locks, each time lock will be assigned to the           same condition that has the same index")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_timeOuts"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256[]"),(0,l.kt)("td",{parentName:"tr",align:null},"list of time outs, each time out will be assigned to the           same condition that has the same index")))),(0,l.kt)("h3",{id:"createagreementandpay-3"},"createAgreementAndPay"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function createAgreementAndPay(bytes32 _id, bytes32 _did, bytes32[] _conditionIds, uint256[] _timeLocks, uint256[] _timeOuts, uint256 _idx, address payable _rewardAddress, address _tokenAddress, uint256[] _amounts, address[] _receivers) public payable\n")),(0,l.kt)("h3",{id:"createagreementandfulfill-4"},"createAgreementAndFulfill"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function createAgreementAndFulfill(bytes32 _id, bytes32 _did, bytes32[] _conditionIds, uint256[] _timeLocks, uint256[] _timeOuts, uint256[] _indices, address[] _accounts, bytes[] _params) internal\n")),(0,l.kt)("h3",{id:"getconditiontypes-3"},"getConditionTypes"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function getConditionTypes() public view returns (address[])\n")),(0,l.kt)("p",null,"getConditionTypes gets the conditions addresses list"),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"for the current template returns list of condition contracts\naddresses")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[0]"),(0,l.kt)("td",{parentName:"tr",align:null},"address[]"),(0,l.kt)("td",{parentName:"tr",align:null},"list of conditions contract addresses")))),(0,l.kt)("h2",{id:"baseescrowtemplate-1"},"BaseEscrowTemplate"),(0,l.kt)("h3",{id:"agreementdata-2"},"agreementData"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"struct BaseEscrowTemplate.AgreementData agreementData\n")),(0,l.kt)("h3",{id:"agreementcreated-1"},"AgreementCreated"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"event AgreementCreated(bytes32 _agreementId, bytes32 _did, address _accessConsumer, address _accessProvider, uint256[] _timeLocks, uint256[] _timeOuts, bytes32[] _conditionIdSeeds, bytes32[] _conditionIds, bytes32 _idSeed, address _creator)\n")),(0,l.kt)("h3",{id:"agreementdatamodel-1"},"AgreementDataModel"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"struct AgreementDataModel {\n  address accessConsumer;\n  address accessProvider;\n  bytes32 did;\n}\n")),(0,l.kt)("h3",{id:"agreementdata-3"},"AgreementData"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"struct AgreementData {\n  mapping(bytes32 &#x3D;&gt; struct BaseEscrowTemplate.AgreementDataModel) agreementDataItems;\n  bytes32[] agreementIds;\n}\n")),(0,l.kt)("h3",{id:"createagreement-8"},"createAgreement"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function createAgreement(bytes32 _id, bytes32 _did, bytes32[] _conditionIds, uint256[] _timeLocks, uint256[] _timeOuts, address _accessConsumer) public\n")),(0,l.kt)("p",null,"createAgreement creates agreements through agreement template"),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"this function initializes the agreement by setting the DID,\nconditions ID, timeouts, time locks and the consumer address.\nThe DID provider/owner is automatically detected by the DID\nRegistry")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_id"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"SEA agreement unique identifier")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_did"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"Decentralized Identifier (DID)")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_conditionIds"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32[]"),(0,l.kt)("td",{parentName:"tr",align:null},"conditions ID associated with the condition types")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_timeLocks"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256[]"),(0,l.kt)("td",{parentName:"tr",align:null},"the starting point of the time window ,time lock is        in block number not seconds")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_timeOuts"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256[]"),(0,l.kt)("td",{parentName:"tr",align:null},"the ending point of the time window ,time lock is        in block number not seconds")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_accessConsumer"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"consumer address")))),(0,l.kt)("h3",{id:"createagreementandpayescrow-1"},"createAgreementAndPayEscrow"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function createAgreementAndPayEscrow(bytes32 _id, bytes32 _did, bytes32[] _conditionIds, uint256[] _timeLocks, uint256[] _timeOuts, address _accessConsumer, uint256 _idx, address payable _rewardAddress, address _tokenAddress, uint256[] _amounts, address[] _receivers) public payable\n")),(0,l.kt)("h3",{id:"createagreementandfulfill-5"},"createAgreementAndFulfill"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function createAgreementAndFulfill(bytes32 _id, bytes32 _did, bytes32[] _conditionIds, uint256[] _timeLocks, uint256[] _timeOuts, address _accessConsumer, uint256[] _indices, address[] _accounts, bytes[] _params) internal\n")),(0,l.kt)("h3",{id:"_makeids-1"},"_makeIds"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function _makeIds(bytes32 _idSeed, bytes32[] _conditionIds) internal view returns (bytes32[])\n")),(0,l.kt)("h3",{id:"_initagreement-1"},"_initAgreement"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function _initAgreement(bytes32 _idSeed, bytes32 _did, uint256[] _timeLocks, uint256[] _timeOuts, address _accessConsumer, bytes32[] _conditionIds) internal\n")),(0,l.kt)("h3",{id:"getagreementdata-1"},"getAgreementData"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function getAgreementData(bytes32 _id) external view returns (address accessConsumer, address accessProvider)\n")),(0,l.kt)("p",null,"getAgreementData return the agreement Data"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_id"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"SEA agreement unique identifier")))),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"accessConsumer"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"the agreement consumer")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"accessProvider"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"the provider addresses")))),(0,l.kt)("h2",{id:"didsalestemplate-1"},"DIDSalesTemplate"),(0,l.kt)("p",null,"_Implementation of DID Sales Template"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"}," The DID Sales template supports an scenario where an Asset owner\n can sell that asset to a new Owner.\n Anyone (consumer/provider/publisher) can use this template in order\n to setup an agreement allowing an Asset owner to get transfer the asset ownership\n after some payment. \n The template is a composite of 3 basic conditions: \n - Lock Payment Condition\n - Transfer DID Condition\n - Escrow Reward Condition\n\n This scenario takes into account royalties for original creators in the secondary market.\n Once the agreement is created, the consumer after payment can request the ownership transfer of an asset\n from the current owner for a specific DID._\n")),(0,l.kt)("h3",{id:"didregistry-30"},"didRegistry"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"contract DIDRegistry didRegistry\n")),(0,l.kt)("h3",{id:"lockpaymentcondition-7"},"lockPaymentCondition"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"contract LockPaymentCondition lockPaymentCondition\n")),(0,l.kt)("h3",{id:"transfercondition-5"},"transferCondition"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"contract TransferDIDOwnershipCondition transferCondition\n")),(0,l.kt)("h3",{id:"rewardcondition-4"},"rewardCondition"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"contract EscrowPaymentCondition rewardCondition\n")),(0,l.kt)("h3",{id:"id-3"},"id"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function id() public pure returns (uint256)\n")),(0,l.kt)("h3",{id:"initialize-99"},"initialize"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function initialize(address _owner, address _agreementStoreManagerAddress, address _lockConditionAddress, address _transferConditionAddress, address payable _escrowPaymentAddress) external\n")),(0,l.kt)("p",null,"initialize init the\ncontract with the following parameters."),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"this function is called only once during the contract\ninitialization. It initializes the ownable feature, and\nset push the required condition types including\naccess secret store, lock reward and escrow reward conditions.")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_owner"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"contract's owner account address")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_agreementStoreManagerAddress"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"agreement store manager contract address")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_lockConditionAddress"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"lock reward condition contract address")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_transferConditionAddress"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"transfer ownership condition contract address")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_escrowPaymentAddress"),(0,l.kt)("td",{parentName:"tr",align:null},"address payable"),(0,l.kt)("td",{parentName:"tr",align:null},"escrow reward condition contract address")))),(0,l.kt)("h2",{id:"dynamicaccesstemplate-1"},"DynamicAccessTemplate"),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"Implementation of Agreement Template\nThis is a dynamic template that allows to setup flexible conditions depending\non the use case.")),(0,l.kt)("h3",{id:"didregistry-31"},"didRegistry"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"contract DIDRegistry didRegistry\n")),(0,l.kt)("h3",{id:"templateconfig-1"},"templateConfig"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"struct DynamicAccessTemplate.TemplateConditions templateConfig\n")),(0,l.kt)("h3",{id:"templateconditions-1"},"TemplateConditions"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"struct TemplateConditions {\n  mapping(address &#x3D;&gt; contract Condition) templateConditions;\n}\n")),(0,l.kt)("h3",{id:"initialize-100"},"initialize"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function initialize(address _owner, address _agreementStoreManagerAddress, address _didRegistryAddress) external\n")),(0,l.kt)("p",null,"initialize init the\ncontract with the following parameters."),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"this function is called only once during the contract\ninitialization. It initializes the ownable feature, and\nset push the required condition types including\naccess secret store, lock reward and escrow reward conditions.")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_owner"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"contract's owner account address")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_agreementStoreManagerAddress"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"agreement store manager contract address")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_didRegistryAddress"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"DID registry contract address")))),(0,l.kt)("h3",{id:"addtemplatecondition-1"},"addTemplateCondition"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function addTemplateCondition(address _conditionAddress) external returns (uint256 length)\n")),(0,l.kt)("p",null,"addTemplateCondition adds a new condition to the template"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_conditionAddress"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"condition contract address")))),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"length"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"conditionTypes array size")))),(0,l.kt)("h3",{id:"removelasttemplatecondition-1"},"removeLastTemplateCondition"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function removeLastTemplateCondition() external returns (address[])\n")),(0,l.kt)("p",null,"removeLastTemplateCondition removes last condition added to the template"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[0]"),(0,l.kt)("td",{parentName:"tr",align:null},"address[]"),(0,l.kt)("td",{parentName:"tr",align:null},"conditionTypes existing in the array")))),(0,l.kt)("h2",{id:"escrowcomputeexecutiontemplate-1"},"EscrowComputeExecutionTemplate"),(0,l.kt)("p",null,"_Implementation of a Compute Execution Agreement Template"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"}," EscrowComputeExecutionTemplate is use case specific template.\n Anyone (consumer/provider/publisher) can use this template in order\n to setup an on-chain SEA. The template is a composite of three basic\n conditions. Once the agreement is created, the consumer will lock an amount\n of tokens (as listed in the DID document - off-chain metadata) to the \n the lock reward contract which in turn will fire an event. ON the other hand \n the provider is listening to all the emitted events, the provider \n will catch the event and grant permissions to trigger a computation granting\n the execution via the ComputeExecutionCondition contract. \n The consumer now is able to trigger that computation\n by asking the off-chain gateway to start the execution of a compute workflow.\n Finally, the provider can call the escrow reward condition in order \n to release the payment. Every condition has a time window (time lock and \n time out). This implies that if the provider didn't grant the execution to \n the consumer within this time window, the consumer \n can ask for refund._\n")),(0,l.kt)("h3",{id:"didregistry-32"},"didRegistry"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"contract DIDRegistry didRegistry\n")),(0,l.kt)("h3",{id:"computeexecutioncondition-3"},"computeExecutionCondition"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"contract ComputeExecutionCondition computeExecutionCondition\n")),(0,l.kt)("h3",{id:"lockpaymentcondition-8"},"lockPaymentCondition"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"contract LockPaymentCondition lockPaymentCondition\n")),(0,l.kt)("h3",{id:"escrowpayment-1"},"escrowPayment"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"contract EscrowPaymentCondition escrowPayment\n")),(0,l.kt)("h3",{id:"initialize-101"},"initialize"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function initialize(address _owner, address _agreementStoreManagerAddress, address _didRegistryAddress, address _computeExecutionConditionAddress, address _lockPaymentConditionAddress, address payable _escrowPaymentAddress) external\n")),(0,l.kt)("p",null,"initialize init the\ncontract with the following parameters."),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"this function is called only once during the contract\ninitialization. It initializes the ownable feature, and\nset push the required condition types including\nservice executor condition, lock reward and escrow reward conditions.")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_owner"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"contract's owner account address")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_agreementStoreManagerAddress"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"agreement store manager contract address")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_didRegistryAddress"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"DID registry contract address")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_computeExecutionConditionAddress"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"service executor condition contract address")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_lockPaymentConditionAddress"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"lock reward condition contract address")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_escrowPaymentAddress"),(0,l.kt)("td",{parentName:"tr",align:null},"address payable"),(0,l.kt)("td",{parentName:"tr",align:null},"escrow reward contract address")))),(0,l.kt)("h3",{id:"name-1"},"name"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function name() public pure returns (string)\n")),(0,l.kt)("h2",{id:"nft721accessprooftemplate-1"},"NFT721AccessProofTemplate"),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"Implementation of NFT721 Access Proof Template")),(0,l.kt)("h2",{id:"nft721accessswaptemplate-1"},"NFT721AccessSwapTemplate"),(0,l.kt)("h2",{id:"nft721accesstemplate-1"},"NFT721AccessTemplate"),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"Implementation of NFT Access Template")),(0,l.kt)("h2",{id:"nft721salestemplate-1"},"NFT721SalesTemplate"),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"Implementation of NFT Sales Template")),(0,l.kt)("h2",{id:"nft721saleswithaccesstemplate-1"},"NFT721SalesWithAccessTemplate"),(0,l.kt)("h2",{id:"nftaccessprooftemplate-1"},"NFTAccessProofTemplate"),(0,l.kt)("p",null,"_Implementation of NFT Access Template"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"}," The NFT Access template is use case specific template.\n Anyone (consumer/provider/publisher) can use this template in order\n to setup an agreement allowing NFT holders to get access to Nevermined services. \n The template is a composite of 2 basic conditions: \n - NFT Holding Condition\n - Access Condition\n\n Once the agreement is created, the consumer can demonstrate is holding a NFT\n for a specific DID. If that's the case the Access condition can be fulfilled\n by the asset owner or provider and all the agreement is fulfilled.\n This can be used in scenarios where a data or services owner, can allow \n users to get access to exclusive services only when they demonstrate the \n are holding a specific number of NFTs of a DID.\n This is very useful in use cases like arts._\n")),(0,l.kt)("h3",{id:"didregistry-33"},"didRegistry"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"contract DIDRegistry didRegistry\n")),(0,l.kt)("h3",{id:"nftholdercondition-4"},"nftHolderCondition"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"contract INFTHolder nftHolderCondition\n")),(0,l.kt)("h3",{id:"accesscondition-10"},"accessCondition"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"contract AccessProofCondition accessCondition\n")),(0,l.kt)("h3",{id:"initialize-102"},"initialize"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function initialize(address _owner, address _agreementStoreManagerAddress, address _nftHolderConditionAddress, address _accessConditionAddress) external\n")),(0,l.kt)("p",null,"initialize init the\ncontract with the following parameters."),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"this function is called only once during the contract\ninitialization. It initializes the ownable feature, and\nset push the required condition types including\naccess secret store, lock reward and escrow reward conditions.")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_owner"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"contract's owner account address")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_agreementStoreManagerAddress"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"agreement store manager contract address")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_nftHolderConditionAddress"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"lock reward condition contract address")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_accessConditionAddress"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"access condition contract address")))),(0,l.kt)("h2",{id:"nftaccessswaptemplate-1"},"NFTAccessSwapTemplate"),(0,l.kt)("p",null,"_Implementation of NFT Sales Template"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"}," The NFT Sales template supports an scenario where a NFT owner\n can sell that asset to a new Owner.\n Anyone (consumer/provider/publisher) can use this template in order\n to setup an agreement allowing a NFT owner to transfer the asset ownership\n after some payment. \n The template is a composite of 3 basic conditions: \n - Lock Payment Condition\n - Transfer NFT Condition\n - Escrow Reward Condition\n\n This scenario takes into account royalties for original creators in the secondary market.\n Once the agreement is created, the consumer after payment can request the transfer of the NFT\n from the current owner for a specific DID._\n")),(0,l.kt)("h3",{id:"didregistry-34"},"didRegistry"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"contract DIDRegistry didRegistry\n")),(0,l.kt)("h3",{id:"lockpaymentcondition-9"},"lockPaymentCondition"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"contract INFTLock lockPaymentCondition\n")),(0,l.kt)("h3",{id:"rewardcondition-5"},"rewardCondition"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"contract INFTEscrow rewardCondition\n")),(0,l.kt)("h3",{id:"accesscondition-11"},"accessCondition"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"contract AccessProofCondition accessCondition\n")),(0,l.kt)("h3",{id:"id-4"},"id"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function id() public pure returns (uint256)\n")),(0,l.kt)("h3",{id:"initialize-103"},"initialize"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function initialize(address _owner, address _agreementStoreManagerAddress, address _lockPaymentConditionAddress, address payable _escrowPaymentAddress, address _accessCondition) external\n")),(0,l.kt)("p",null,"initialize init the\ncontract with the following parameters."),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"this function is called only once during the contract\ninitialization. It initializes the ownable feature, and\nset push the required condition types including\naccess secret store, lock reward and escrow reward conditions.")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_owner"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"contract's owner account address")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_agreementStoreManagerAddress"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"agreement store manager contract address")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_lockPaymentConditionAddress"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"lock reward condition contract address")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_escrowPaymentAddress"),(0,l.kt)("td",{parentName:"tr",align:null},"address payable"),(0,l.kt)("td",{parentName:"tr",align:null},"escrow reward condition contract address")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_accessCondition"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null})))),(0,l.kt)("h2",{id:"nftaccesstemplate-1"},"NFTAccessTemplate"),(0,l.kt)("p",null,"_Implementation of NFT Access Template"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"}," The NFT Access template is use case specific template.\n Anyone (consumer/provider/publisher) can use this template in order\n to setup an agreement allowing NFT holders to get access to Nevermined services. \n The template is a composite of 2 basic conditions: \n - NFT Holding Condition\n - Access Condition\n\n Once the agreement is created, the consumer can demonstrate is holding a NFT\n for a specific DID. If that's the case the Access condition can be fulfilled\n by the asset owner or provider and all the agreement is fulfilled.\n This can be used in scenarios where a data or services owner, can allow \n users to get access to exclusive services only when they demonstrate the \n are holding a specific number of NFTs of a DID.\n This is very useful in use cases like arts._\n")),(0,l.kt)("h3",{id:"didregistry-35"},"didRegistry"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"contract DIDRegistry didRegistry\n")),(0,l.kt)("h3",{id:"nftholdercondition-5"},"nftHolderCondition"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"contract INFTHolder nftHolderCondition\n")),(0,l.kt)("h3",{id:"accesscondition-12"},"accessCondition"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"contract INFTAccess accessCondition\n")),(0,l.kt)("h3",{id:"initialize-104"},"initialize"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function initialize(address _owner, address _agreementStoreManagerAddress, address _nftHolderConditionAddress, address _accessConditionAddress) external\n")),(0,l.kt)("p",null,"initialize init the\ncontract with the following parameters."),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"this function is called only once during the contract\ninitialization. It initializes the ownable feature, and\nset push the required condition types including\naccess secret store, lock reward and escrow reward conditions.")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_owner"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"contract's owner account address")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_agreementStoreManagerAddress"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"agreement store manager contract address")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_nftHolderConditionAddress"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"lock reward condition contract address")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_accessConditionAddress"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"access condition contract address")))),(0,l.kt)("h2",{id:"nftsalestemplate-1"},"NFTSalesTemplate"),(0,l.kt)("p",null,"_Implementation of NFT Sales Template"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"}," The NFT Sales template supports an scenario where a NFT owner\n can sell that asset to a new Owner.\n Anyone (consumer/provider/publisher) can use this template in order\n to setup an agreement allowing a NFT owner to transfer the asset ownership\n after some payment. \n The template is a composite of 3 basic conditions: \n - Lock Payment Condition\n - Transfer NFT Condition\n - Escrow Reward Condition\n\n This scenario takes into account royalties for original creators in the secondary market.\n Once the agreement is created, the consumer after payment can request the transfer of the NFT\n from the current owner for a specific DID._\n")),(0,l.kt)("h3",{id:"didregistry-36"},"didRegistry"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"contract DIDRegistry didRegistry\n")),(0,l.kt)("h3",{id:"lockpaymentcondition-10"},"lockPaymentCondition"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"contract LockPaymentCondition lockPaymentCondition\n")),(0,l.kt)("h3",{id:"transfercondition-6"},"transferCondition"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"contract ITransferNFT transferCondition\n")),(0,l.kt)("h3",{id:"rewardcondition-6"},"rewardCondition"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"contract EscrowPaymentCondition rewardCondition\n")),(0,l.kt)("h3",{id:"id-5"},"id"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function id() public pure returns (uint256)\n")),(0,l.kt)("h3",{id:"initialize-105"},"initialize"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function initialize(address _owner, address _agreementStoreManagerAddress, address _lockPaymentConditionAddress, address _transferConditionAddress, address payable _escrowPaymentAddress) external\n")),(0,l.kt)("p",null,"initialize init the\ncontract with the following parameters."),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"this function is called only once during the contract\ninitialization. It initializes the ownable feature, and\nset push the required condition types including\naccess secret store, lock reward and escrow reward conditions.")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_owner"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"contract's owner account address")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_agreementStoreManagerAddress"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"agreement store manager contract address")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_lockPaymentConditionAddress"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"lock reward condition contract address")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_transferConditionAddress"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"transfer NFT condition contract address")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_escrowPaymentAddress"),(0,l.kt)("td",{parentName:"tr",align:null},"address payable"),(0,l.kt)("td",{parentName:"tr",align:null},"escrow reward condition contract address")))),(0,l.kt)("h3",{id:"nftprice-1"},"nftPrice"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"mapping(address => mapping(address => mapping(address => mapping(bytes32 => uint256)))) nftPrice\n")),(0,l.kt)("h3",{id:"nftsale-1"},"nftSale"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function nftSale(address nftAddress, bytes32 nftId, address token, uint256 amount) external\n")),(0,l.kt)("h3",{id:"checkparamstransfer-1"},"checkParamsTransfer"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function checkParamsTransfer(bytes[] _params, bytes32 lockPaymentConditionId, bytes32 _did) internal view returns (address)\n")),(0,l.kt)("h3",{id:"checkparamsescrow-1"},"checkParamsEscrow"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function checkParamsEscrow(bytes[] _params, bytes32 lockPaymentId, bytes32 transferId) internal pure\n")),(0,l.kt)("h3",{id:"createagreementfulfill-1"},"createAgreementFulfill"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function createAgreementFulfill(bytes32 _id, bytes32 _did, uint256[] _timeLocks, uint256[] _timeOuts, address _accessConsumer, bytes[] _params) external payable\n")),(0,l.kt)("h2",{id:"nftsaleswithaccesstemplate-1"},"NFTSalesWithAccessTemplate"),(0,l.kt)("p",null,"_Implementation of NFT Sales Template"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"}," The NFT Sales template supports an scenario where a NFT owner\n can sell that asset to a new Owner.\n Anyone (consumer/provider/publisher) can use this template in order\n to setup an agreement allowing a NFT owner to transfer the asset ownership\n after some payment. \n The template is a composite of 3 basic conditions: \n - Lock Payment Condition\n - Transfer NFT Condition\n - Escrow Reward Condition\n\n This scenario takes into account royalties for original creators in the secondary market.\n Once the agreement is created, the consumer after payment can request the transfer of the NFT\n from the current owner for a specific DID._\n")),(0,l.kt)("h3",{id:"didregistry-37"},"didRegistry"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"contract DIDRegistry didRegistry\n")),(0,l.kt)("h3",{id:"lockpaymentcondition-11"},"lockPaymentCondition"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"contract LockPaymentCondition lockPaymentCondition\n")),(0,l.kt)("h3",{id:"transfercondition-7"},"transferCondition"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"contract ITransferNFT transferCondition\n")),(0,l.kt)("h3",{id:"rewardcondition-7"},"rewardCondition"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"contract EscrowPaymentCondition rewardCondition\n")),(0,l.kt)("h3",{id:"accesscondition-13"},"accessCondition"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"contract AccessProofCondition accessCondition\n")),(0,l.kt)("h3",{id:"initialize-106"},"initialize"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function initialize(address _owner, address _agreementStoreManagerAddress, address _lockPaymentConditionAddress, address _transferConditionAddress, address payable _escrowPaymentAddress, address _accessCondition) external\n")),(0,l.kt)("p",null,"initialize init the\ncontract with the following parameters."),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"this function is called only once during the contract\ninitialization. It initializes the ownable feature, and\nset push the required condition types including\naccess secret store, lock reward and escrow reward conditions.")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_owner"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"contract's owner account address")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_agreementStoreManagerAddress"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"agreement store manager contract address")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_lockPaymentConditionAddress"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"lock reward condition contract address")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_transferConditionAddress"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"transfer NFT condition contract address")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_escrowPaymentAddress"),(0,l.kt)("td",{parentName:"tr",align:null},"address payable"),(0,l.kt)("td",{parentName:"tr",align:null},"escrow reward condition contract address")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_accessCondition"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null})))),(0,l.kt)("h2",{id:"templatestorelibrary-1"},"TemplateStoreLibrary"),(0,l.kt)("p",null,"_Implementation of the Template Store Library."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"}," Templates are blueprints for modular SEAs. When \n creating an Agreement, a templateId defines the condition \n and reward types that are instantiated in the ConditionStore._\n")),(0,l.kt)("h3",{id:"templatestate-1"},"TemplateState"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"enum TemplateState {\n  Uninitialized,\n  Proposed,\n  Approved,\n  Revoked\n}\n")),(0,l.kt)("h3",{id:"template-3"},"Template"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"struct Template {\n  enum TemplateStoreLibrary.TemplateState state;\n  address owner;\n  address lastUpdatedBy;\n  uint256 blockNumberUpdated;\n}\n")),(0,l.kt)("h3",{id:"templatelist-2"},"TemplateList"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"struct TemplateList {\n  mapping(address &#x3D;&gt; struct TemplateStoreLibrary.Template) templates;\n  address[] templateIds;\n}\n")),(0,l.kt)("h3",{id:"propose-1"},"propose"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function propose(struct TemplateStoreLibrary.TemplateList _self, address _id) internal returns (uint256 size)\n")),(0,l.kt)("p",null,"propose new template"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_self"),(0,l.kt)("td",{parentName:"tr",align:null},"struct TemplateStoreLibrary.TemplateList"),(0,l.kt)("td",{parentName:"tr",align:null},"is the TemplateList storage pointer")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_id"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"proposed template contract address")))),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"size"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"which is the index of the proposed template")))),(0,l.kt)("h3",{id:"approve-3"},"approve"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function approve(struct TemplateStoreLibrary.TemplateList _self, address _id) internal\n")),(0,l.kt)("p",null,"approve new template"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_self"),(0,l.kt)("td",{parentName:"tr",align:null},"struct TemplateStoreLibrary.TemplateList"),(0,l.kt)("td",{parentName:"tr",align:null},"is the TemplateList storage pointer")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_id"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"proposed template contract address")))),(0,l.kt)("h3",{id:"revoke-1"},"revoke"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function revoke(struct TemplateStoreLibrary.TemplateList _self, address _id) internal\n")),(0,l.kt)("p",null,"revoke new template"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_self"),(0,l.kt)("td",{parentName:"tr",align:null},"struct TemplateStoreLibrary.TemplateList"),(0,l.kt)("td",{parentName:"tr",align:null},"is the TemplateList storage pointer")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_id"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"approved template contract address")))),(0,l.kt)("h2",{id:"templatestoremanager-3"},"TemplateStoreManager"),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"Implementation of the Template Store Manager.\nTemplates are blueprints for modular SEAs. When creating an Agreement,\na templateId defines the condition and reward types that are instantiated\nin the ConditionStore. This contract manages the life cycle\nof the template ( Propose --\x3e Approve --\x3e Revoke ).")),(0,l.kt)("h3",{id:"templatelist-3"},"templateList"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"struct TemplateStoreLibrary.TemplateList templateList\n")),(0,l.kt)("h3",{id:"onlyownerortemplateowner-1"},"onlyOwnerOrTemplateOwner"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"modifier onlyOwnerOrTemplateOwner(address _id)\n")),(0,l.kt)("h3",{id:"initialize-107"},"initialize"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function initialize(address _owner) public\n")),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"initialize TemplateStoreManager Initializer\nInitializes Ownable. Only on contract creation.")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_owner"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"refers to the owner of the contract")))),(0,l.kt)("h3",{id:"proposetemplate-2"},"proposeTemplate"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function proposeTemplate(address _id) external returns (uint256 size)\n")),(0,l.kt)("p",null,"proposeTemplate proposes a new template"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_id"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"unique template identifier which is basically        the template contract address")))),(0,l.kt)("h3",{id:"approvetemplate-1"},"approveTemplate"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function approveTemplate(address _id) external\n")),(0,l.kt)("p",null,"approveTemplate approves a template"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_id"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"unique template identifier which is basically        the template contract address. Only template store        manager owner (i.e OPNF) can approve this template.")))),(0,l.kt)("h3",{id:"revoketemplate-1"},"revokeTemplate"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function revokeTemplate(address _id) external\n")),(0,l.kt)("p",null,"revokeTemplate revoke a template"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_id"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"unique template identifier which is basically        the template contract address. Only template store        manager owner (i.e OPNF) or template owner        can revoke this template.")))),(0,l.kt)("h3",{id:"gettemplate-1"},"getTemplate"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function getTemplate(address _id) external view returns (enum TemplateStoreLibrary.TemplateState state, address owner, address lastUpdatedBy, uint256 blockNumberUpdated)\n")),(0,l.kt)("p",null,"getTemplate get more information about a template"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_id"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"unique template identifier which is basically        the template contract address.")))),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"state"),(0,l.kt)("td",{parentName:"tr",align:null},"enum TemplateStoreLibrary.TemplateState"),(0,l.kt)("td",{parentName:"tr",align:null},"template status")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"owner"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"template owner")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"lastUpdatedBy"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"last updated by")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"blockNumberUpdated"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"last updated at.")))),(0,l.kt)("h3",{id:"gettemplatelistsize-2"},"getTemplateListSize"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function getTemplateListSize() external view virtual returns (uint256 size)\n")),(0,l.kt)("p",null,"getTemplateListSize number of templates"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"size"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"number of templates")))),(0,l.kt)("h3",{id:"istemplateapproved-1"},"isTemplateApproved"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function isTemplateApproved(address _id) external view returns (bool)\n")),(0,l.kt)("p",null,"isTemplateApproved check whether the template is approved"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_id"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"unique template identifier which is basically        the template contract address.")))),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[0]"),(0,l.kt)("td",{parentName:"tr",align:null},"bool"),(0,l.kt)("td",{parentName:"tr",align:null},"true if the template is approved")))),(0,l.kt)("h2",{id:"agreementstoremanagerchangefunctionsignature-1"},"AgreementStoreManagerChangeFunctionSignature"),(0,l.kt)("h3",{id:"createagreement-9"},"createAgreement"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function createAgreement(bytes32 _id, bytes32 _did, address[] _conditionTypes, bytes32[] _conditionIds, uint256[] _timeLocks, uint256[] _timeOuts, address _creator, address _sender) public\n")),(0,l.kt)("h2",{id:"agreementstoremanagerchangeinstorage-1"},"AgreementStoreManagerChangeInStorage"),(0,l.kt)("h3",{id:"agreementcount-1"},"agreementCount"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"uint256 agreementCount\n")),(0,l.kt)("h2",{id:"agreementstoremanagerchangeinstorageandlogic-1"},"AgreementStoreManagerChangeInStorageAndLogic"),(0,l.kt)("h2",{id:"agreementstoremanagerextrafunctionality-1"},"AgreementStoreManagerExtraFunctionality"),(0,l.kt)("h3",{id:"dummyfunction-3"},"dummyFunction"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function dummyFunction() public pure returns (bool)\n")),(0,l.kt)("h2",{id:"agreementstoremanagerwithbug-1"},"AgreementStoreManagerWithBug"),(0,l.kt)("h3",{id:"getdidregistryaddress-3"},"getDIDRegistryAddress"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function getDIDRegistryAddress() public pure returns (address)\n")),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"getDIDRegistryAddress utility function\nused by other contracts or any EOA.")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[0]"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"the DIDRegistry address")))),(0,l.kt)("h2",{id:"conditionstorechangefunctionsignature-1"},"ConditionStoreChangeFunctionSignature"),(0,l.kt)("h3",{id:"createcondition-5"},"createCondition"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function createCondition(bytes32 _id, address _typeRef, address _sender) public\n")),(0,l.kt)("h2",{id:"conditionstorechangeinstorage-1"},"ConditionStoreChangeInStorage"),(0,l.kt)("h3",{id:"conditioncount-1"},"conditionCount"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"uint256 conditionCount\n")),(0,l.kt)("h2",{id:"conditionstorechangeinstorageandlogic-1"},"ConditionStoreChangeInStorageAndLogic"),(0,l.kt)("h2",{id:"conditionstoreextrafunctionality-1"},"ConditionStoreExtraFunctionality"),(0,l.kt)("h3",{id:"dummyfunction-4"},"dummyFunction"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function dummyFunction() public pure returns (bool)\n")),(0,l.kt)("h2",{id:"conditionstorewithbug-1"},"ConditionStoreWithBug"),(0,l.kt)("h3",{id:"getconditionstate-3"},"getConditionState"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function getConditionState(bytes32 _id) public view returns (enum ConditionStoreLibrary.ConditionState)\n")),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"getConditionState")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[0]"),(0,l.kt)("td",{parentName:"tr",align:null},"enum ConditionStoreLibrary.ConditionState"),(0,l.kt)("td",{parentName:"tr",align:null},"condition state")))),(0,l.kt)("h2",{id:"didregistrychangefunctionsignature-1"},"DIDRegistryChangeFunctionSignature"),(0,l.kt)("h3",{id:"registerattribute-4"},"registerAttribute"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function registerAttribute(bytes32 _didSeed, address[] _providers, bytes32 _checksum, string _url) public\n")),(0,l.kt)("h2",{id:"didregistrychangeinstorage-1"},"DIDRegistryChangeInStorage"),(0,l.kt)("h3",{id:"timeofregister-1"},"timeOfRegister"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"mapping(bytes32 => uint256) timeOfRegister\n")),(0,l.kt)("h2",{id:"didregistrychangeinstorageandlogic-1"},"DIDRegistryChangeInStorageAndLogic"),(0,l.kt)("h2",{id:"didregistryextrafunctionality-1"},"DIDRegistryExtraFunctionality"),(0,l.kt)("h3",{id:"getnumber-1"},"getNumber"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function getNumber() public pure returns (uint256)\n")),(0,l.kt)("h2",{id:"didregistrywithbug-1"},"DIDRegistryWithBug"),(0,l.kt)("h3",{id:"registerattribute-5"},"registerAttribute"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function registerAttribute(bytes32 _checksum, bytes32 _didSeed, address[] _providers, string _url) public\n")),(0,l.kt)("p",null,"registerAttribute is called only by DID owner."),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"this function registers DID attributes")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_checksum"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"includes a one-way HASH calculated using the DDO content")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_didSeed"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"refers to decentralized identifier (a byte32 length ID)")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_providers"),(0,l.kt)("td",{parentName:"tr",align:null},"address[]"),(0,l.kt)("td",{parentName:"tr",align:null})),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_url"),(0,l.kt)("td",{parentName:"tr",align:null},"string"),(0,l.kt)("td",{parentName:"tr",align:null},"refers to the attribute value")))),(0,l.kt)("h2",{id:"ipnft-1"},"IPNFT"),(0,l.kt)("h3",{id:"tokenurichanged-1"},"TokenURIChanged"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"event TokenURIChanged(uint256 tokenId, string newURI)\n")),(0,l.kt)("h3",{id:"initialize-108"},"initialize"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function initialize(string _name, string _symbol) public\n")),(0,l.kt)("h3",{id:"settokenuri-1"},"setTokenURI"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function setTokenURI(uint256 tokenId, string _tokenURI) public\n")),(0,l.kt)("h3",{id:"mint-17"},"mint"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function mint(address to, uint256 _tokenId, string _tokenURI) public returns (bool)\n")),(0,l.kt)("h3",{id:"mintwithouttokenuri-1"},"mintWithoutTokenURI"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function mintWithoutTokenURI(address to, uint256 _tokenId) external\n")),(0,l.kt)("h3",{id:"transfer-5"},"transfer"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function transfer(address from, address to, uint256 _tokenId) public\n")),(0,l.kt)("h2",{id:"neverminedconfigchangeinstorage-1"},"NeverminedConfigChangeInStorage"),(0,l.kt)("h3",{id:"newvariable-1"},"newVariable"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"uint256 newVariable\n")),(0,l.kt)("h2",{id:"neverminedconfigchangefunctionsignature-1"},"NeverminedConfigChangeFunctionSignature"),(0,l.kt)("h3",{id:"setmarketplacefees-6"},"setMarketplaceFees"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function setMarketplaceFees(uint256 _marketplaceFee, address _feeReceiver, uint256 _newParameter) external virtual\n")),(0,l.kt)("h2",{id:"neverminedconfigchangeinstorageandlogic-1"},"NeverminedConfigChangeInStorageAndLogic"),(0,l.kt)("h2",{id:"neverminedconfigwithbug-1"},"NeverminedConfigWithBug"),(0,l.kt)("h3",{id:"setmarketplacefees-7"},"setMarketplaceFees"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function setMarketplaceFees(uint256 _marketplaceFee, address _feeReceiver) external virtual\n")),(0,l.kt)("p",null,"The governor can update the Nevermined Marketplace fees"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_marketplaceFee"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"new marketplace fee")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"_feeReceiver"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"The address receiving the fee")))),(0,l.kt)("h2",{id:"templatestorechangefunctionsignature-1"},"TemplateStoreChangeFunctionSignature"),(0,l.kt)("h3",{id:"proposetemplate-3"},"proposeTemplate"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function proposeTemplate(address _id, address _sender) external returns (uint256 size)\n")),(0,l.kt)("h2",{id:"templatestorechangeinstorage-1"},"TemplateStoreChangeInStorage"),(0,l.kt)("h3",{id:"templatecount-1"},"templateCount"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"uint256 templateCount\n")),(0,l.kt)("h2",{id:"templatestorechangeinstorageandlogic-1"},"TemplateStoreChangeInStorageAndLogic"),(0,l.kt)("h2",{id:"templatestoreextrafunctionality-1"},"TemplateStoreExtraFunctionality"),(0,l.kt)("h3",{id:"dummyfunction-5"},"dummyFunction"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function dummyFunction() public pure returns (bool)\n")),(0,l.kt)("h2",{id:"templatestorewithbug-1"},"TemplateStoreWithBug"),(0,l.kt)("h3",{id:"gettemplatelistsize-3"},"getTemplateListSize"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function getTemplateListSize() external view returns (uint256 size)\n")),(0,l.kt)("p",null,"getTemplateListSize number of templates"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"size"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"number of templates")))),(0,l.kt)("h2",{id:"testerc721-1"},"TestERC721"),(0,l.kt)("h3",{id:"initialize-109"},"initialize"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function initialize() public\n")),(0,l.kt)("h3",{id:"mint-18"},"mint"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function mint(uint256 id) public\n")),(0,l.kt)("h2",{id:"didregistrylibraryproxy-1"},"DIDRegistryLibraryProxy"),(0,l.kt)("h3",{id:"didregister-3"},"didRegister"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"struct DIDRegistryLibrary.DIDRegister didRegister\n")),(0,l.kt)("h3",{id:"didregisterlist-5"},"didRegisterList"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"struct DIDRegistryLibrary.DIDRegisterList didRegisterList\n")),(0,l.kt)("h3",{id:"areroyaltiesvalid-5"},"areRoyaltiesValid"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function areRoyaltiesValid(bytes32 _did, uint256[] _amounts, address[] _receivers, address _tokenAddress) public view returns (bool)\n")),(0,l.kt)("h3",{id:"updatedidowner-3"},"updateDIDOwner"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function updateDIDOwner(bytes32 _did, address _newOwner) public\n")),(0,l.kt)("h3",{id:"update-8"},"update"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function update(bytes32 _did, bytes32 _checksum, string _url) public\n")),(0,l.kt)("h3",{id:"initializenftconfig-3"},"initializeNftConfig"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function initializeNftConfig(bytes32 _did, uint256 _cap, uint8 _royalties) public\n")),(0,l.kt)("h3",{id:"initializenft721config-3"},"initializeNft721Config"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function initializeNft721Config(bytes32 _did, uint8 _royalties) public\n")),(0,l.kt)("h3",{id:"getdidinfo-1"},"getDIDInfo"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function getDIDInfo(bytes32 _did) public view returns (address owner, address creator, uint256 royalties)\n")),(0,l.kt)("h2",{id:"epochlibraryproxy-1"},"EpochLibraryProxy"),(0,l.kt)("h3",{id:"epoch-3"},"epoch"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"struct EpochLibrary.Epoch epoch\n")),(0,l.kt)("h3",{id:"epochlist-5"},"epochList"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"struct EpochLibrary.EpochList epochList\n")),(0,l.kt)("h3",{id:"create-11"},"create"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function create(bytes32 _id, uint256 _timeLock, uint256 _timeOut) external\n")),(0,l.kt)("h2",{id:"hashlistlibraryproxy-1"},"HashListLibraryProxy"),(0,l.kt)("h3",{id:"testdata-1"},"testData"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"struct HashListLibrary.List testData\n")),(0,l.kt)("h3",{id:"initialize-110"},"initialize"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function initialize(address _owner) public\n")),(0,l.kt)("h3",{id:"hash-3"},"hash"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function hash(address _address) public pure returns (bytes32)\n")),(0,l.kt)("h3",{id:"add-12"},"add"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function add(bytes32[] values) external returns (bool)\n")),(0,l.kt)("h3",{id:"add-13"},"add"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function add(bytes32 value) external returns (bool)\n")),(0,l.kt)("h3",{id:"update-9"},"update"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function update(bytes32 oldValue, bytes32 newValue) external returns (bool)\n")),(0,l.kt)("h3",{id:"index-5"},"index"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function index(uint256 from, uint256 to) external returns (bool)\n")),(0,l.kt)("h3",{id:"has-11"},"has"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function has(bytes32 value) external view returns (bool)\n")),(0,l.kt)("h3",{id:"remove-5"},"remove"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function remove(bytes32 value) external returns (bool)\n")),(0,l.kt)("h3",{id:"get-5"},"get"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function get(uint256 _index) external view returns (bytes32)\n")),(0,l.kt)("h3",{id:"size-5"},"size"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function size() external view returns (uint256)\n")),(0,l.kt)("h3",{id:"all-5"},"all"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function all() external view returns (bytes32[])\n")),(0,l.kt)("h3",{id:"indexof-5"},"indexOf"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function indexOf(bytes32 value) external view returns (uint256)\n")),(0,l.kt)("h3",{id:"ownedby-5"},"ownedBy"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function ownedBy() external view returns (address)\n")),(0,l.kt)("h3",{id:"isindexed-5"},"isIndexed"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function isIndexed() external view returns (bool)\n")),(0,l.kt)("h2",{id:"nftbase-1"},"NFTBase"),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"Implementation of the Royalties EIP-2981 base contract\nSee ",(0,l.kt)("a",{parentName:"em",href:"https://eips.ethereum.org/EIPS/eip-2981"},"https://eips.ethereum.org/EIPS/eip-2981"))),(0,l.kt)("h3",{id:"_proxyapprovals-1"},"_proxyApprovals"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"mapping(address => bool) _proxyApprovals\n")),(0,l.kt)("h3",{id:"minter_role-1"},"MINTER_ROLE"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"bytes32 MINTER_ROLE\n")),(0,l.kt)("h3",{id:"royaltyinfo-2"},"RoyaltyInfo"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"struct RoyaltyInfo {\n  address receiver;\n  uint256 royaltyAmount;\n}\n")),(0,l.kt)("h3",{id:"nftmetadata-1"},"NFTMetadata"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"struct NFTMetadata {\n  string nftURI;\n}\n")),(0,l.kt)("h3",{id:"_royalties-1"},"_royalties"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"mapping(uint256 => struct NFTBase.RoyaltyInfo) _royalties\n")),(0,l.kt)("h3",{id:"_metadata-1"},"_metadata"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"mapping(uint256 => struct NFTBase.NFTMetadata) _metadata\n")),(0,l.kt)("h3",{id:"_expiration-1"},"_expiration"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"mapping(address => uint256) _expiration\n")),(0,l.kt)("h3",{id:"proxyapproval-1"},"ProxyApproval"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"event ProxyApproval(address sender, address operator, bool approved)\n")),(0,l.kt)("p",null,"Event for recording proxy approvals."),(0,l.kt)("h3",{id:"setproxyapproval-1"},"setProxyApproval"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function setProxyApproval(address operator, bool approved) public virtual\n")),(0,l.kt)("h3",{id:"_setnftmetadata-1"},"_setNFTMetadata"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function _setNFTMetadata(uint256 tokenId, string tokenURI) internal\n")),(0,l.kt)("h3",{id:"_settokenroyalty-1"},"_setTokenRoyalty"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function _setTokenRoyalty(uint256 tokenId, address receiver, uint256 royaltyAmount) internal\n")),(0,l.kt)("h3",{id:"royaltyinfo-3"},"royaltyInfo"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function royaltyInfo(uint256 tokenId, uint256 value) external view returns (address receiver, uint256 royaltyAmount)\n")),(0,l.kt)("p",null,"@inheritdoc\tIERC2981Upgradeable"),(0,l.kt)("h2",{id:"nftupgradeable-1"},"NFTUpgradeable"),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"Implementation of the basic standard multi-token.\nSee ",(0,l.kt)("a",{parentName:"em",href:"https://eips.ethereum.org/EIPS/eip-1155"},"https://eips.ethereum.org/EIPS/eip-1155"))),(0,l.kt)("h3",{id:"initialize-111"},"initialize"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function initialize(string uri_) public\n")),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"See {_setURI}.")),(0,l.kt)("h3",{id:"isapprovedforall-3"},"isApprovedForAll"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function isApprovedForAll(address account, address operator) public view virtual returns (bool)\n")),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"See {IERC1155-isApprovedForAll}.")),(0,l.kt)("h3",{id:"mint-19"},"mint"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function mint(address to, uint256 id, uint256 amount, bytes data) public\n")),(0,l.kt)("h3",{id:"burn-8"},"burn"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function burn(address to, uint256 id, uint256 amount) public\n")),(0,l.kt)("h3",{id:"addminter-2"},"addMinter"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function addMinter(address account) public\n")),(0,l.kt)("h3",{id:"uri-1"},"uri"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function uri(uint256 tokenId) public view returns (string)\n")),(0,l.kt)("h3",{id:"setnftmetadata-2"},"setNFTMetadata"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function setNFTMetadata(uint256 tokenId, string nftURI) public\n")),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"Record some NFT Metadata")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"tokenId"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"the id of the asset with the royalties associated")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"nftURI"),(0,l.kt)("td",{parentName:"tr",align:null},"string"),(0,l.kt)("td",{parentName:"tr",align:null},"the URI (https, ipfs, etc) to the metadata describing the NFT")))),(0,l.kt)("h3",{id:"settokenroyalty-2"},"setTokenRoyalty"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function setTokenRoyalty(uint256 tokenId, address receiver, uint256 royaltyAmount) public\n")),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"Record the asset royalties")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"tokenId"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"the id of the asset with the royalties associated")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"receiver"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"the receiver of the royalties (the original creator)")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"royaltyAmount"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"percentage (no decimals, between 0 and 100)")))),(0,l.kt)("h3",{id:"supportsinterface-7"},"supportsInterface"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function supportsInterface(bytes4 interfaceId) public view virtual returns (bool)\n")),(0,l.kt)("h2",{id:"nft721subscriptionupgradeable-1"},"NFT721SubscriptionUpgradeable"),(0,l.kt)("h3",{id:"mint-20"},"mint"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function mint(address to, uint256 id, uint256 expirationBlock) public\n")),(0,l.kt)("p",null,"_This mint function allows to define when the NFT expires.\nThe minter should calculate this block number depending on the network velocity"),(0,l.kt)("p",null,"TransferNFT721Condition needs to have the ",(0,l.kt)("inlineCode",{parentName:"p"},"MINTER_ROLE"),"_"),(0,l.kt)("h3",{id:"balanceof-3"},"balanceOf"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function balanceOf(address owner) public view returns (uint256)\n")),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"See {IERC721-balanceOf}.")),(0,l.kt)("h2",{id:"nft721upgradeable-1"},"NFT721Upgradeable"),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"Implementation of the basic standard multi-token.")),(0,l.kt)("h3",{id:"initializewithname"},"initializeWithName"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function initializeWithName(string name, string symbol) public virtual\n")),(0,l.kt)("h3",{id:"initialize-112"},"initialize"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function initialize() public virtual\n")),(0,l.kt)("h3",{id:"isapprovedforall-4"},"isApprovedForAll"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function isApprovedForAll(address account, address operator) public view virtual returns (bool)\n")),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"See {IERC1155-isApprovedForAll}.")),(0,l.kt)("h3",{id:"addminter-3"},"addMinter"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function addMinter(address account) public\n")),(0,l.kt)("h3",{id:"mint-21"},"mint"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function mint(address to, uint256 id) public virtual\n")),(0,l.kt)("h3",{id:"burn-9"},"burn"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function burn(uint256 id) public\n")),(0,l.kt)("h3",{id:"tokenuri-2"},"tokenURI"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function tokenURI(uint256 tokenId) public view virtual returns (string)\n")),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"See {IERC721Metadata-tokenURI}.")),(0,l.kt)("h3",{id:"setnftmetadata-3"},"setNFTMetadata"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function setNFTMetadata(uint256 tokenId, string nftURI) public\n")),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"Record some NFT Metadata")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"tokenId"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"the id of the asset with the royalties associated")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"nftURI"),(0,l.kt)("td",{parentName:"tr",align:null},"string"),(0,l.kt)("td",{parentName:"tr",align:null},"the URI (https, ipfs, etc) to the metadata describing the NFT")))),(0,l.kt)("h3",{id:"settokenroyalty-3"},"setTokenRoyalty"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function setTokenRoyalty(uint256 tokenId, address receiver, uint256 royaltyAmount) public\n")),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"Record the asset royalties")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"tokenId"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"the id of the asset with the royalties associated")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"receiver"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"the receiver of the royalties (the original creator)")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"royaltyAmount"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"percentage (no decimals, between 0 and 100)")))),(0,l.kt)("h3",{id:"supportsinterface-8"},"supportsInterface"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function supportsInterface(bytes4 interfaceId) public view virtual returns (bool)\n")),(0,l.kt)("h2",{id:"poapupgradeable-1"},"POAPUpgradeable"),(0,l.kt)("h3",{id:"_tokenidcounter-1"},"_tokenIdCounter"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"struct CountersUpgradeable.Counter _tokenIdCounter\n")),(0,l.kt)("h3",{id:"_tokenevent-1"},"_tokenEvent"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"mapping(uint256 => uint256) _tokenEvent\n")),(0,l.kt)("h3",{id:"initialize-113"},"initialize"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function initialize() public\n")),(0,l.kt)("h3",{id:"initializewithname-1"},"initializeWithName"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function initializeWithName(string name, string symbol) public virtual\n")),(0,l.kt)("h3",{id:"mint-22"},"mint"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function mint(address to, string uri, uint256 eventId) public\n")),(0,l.kt)("h3",{id:"mint-23"},"mint"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function mint(address to, uint256 id) public\n")),(0,l.kt)("h3",{id:"tokenevent-1"},"tokenEvent"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function tokenEvent(uint256 tokenId) public view returns (uint256)\n")),(0,l.kt)("h3",{id:"_beforetokentransfer-3"},"_beforeTokenTransfer"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function _beforeTokenTransfer(address from, address to, uint256 tokenId) internal\n")),(0,l.kt)("h3",{id:"_burn-1"},"_burn"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function _burn(uint256 tokenId) internal\n")),(0,l.kt)("h3",{id:"tokendetailsofowner-1"},"tokenDetailsOfOwner"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function tokenDetailsOfOwner(address owner) public view returns (uint256[] tokenIds, uint256[] eventIds)\n")),(0,l.kt)("h3",{id:"tokenuri-3"},"tokenURI"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function tokenURI(uint256 tokenId) public view returns (string)\n")),(0,l.kt)("h3",{id:"isapprovedforall-5"},"isApprovedForAll"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function isApprovedForAll(address account, address operator) public view returns (bool)\n")),(0,l.kt)("h3",{id:"supportsinterface-9"},"supportsInterface"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function supportsInterface(bytes4 interfaceId) public view virtual returns (bool)\n")),(0,l.kt)("h2",{id:"testdisputemanager-1"},"TestDisputeManager"),(0,l.kt)("h3",{id:"accept-1"},"accept"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"mapping(bytes32 => bool) accept\n")),(0,l.kt)("h3",{id:"accepted-1"},"accepted"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function accepted(address provider, address buyer, bytes32 orig, bytes32 crypted) public view returns (bool)\n")),(0,l.kt)("h3",{id:"setaccepted-1"},"setAccepted"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function setAccepted(bytes32 orig, bytes32 crypted, address provider, address buyer) public\n")),(0,l.kt)("h2",{id:"plonkverifier-1"},"PlonkVerifier"),(0,l.kt)("h3",{id:"n-1"},"n"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"uint32 n\n")),(0,l.kt)("h3",{id:"npublic-1"},"nPublic"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"uint16 nPublic\n")),(0,l.kt)("h3",{id:"nlagrange-1"},"nLagrange"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"uint16 nLagrange\n")),(0,l.kt)("h3",{id:"qmx-1"},"Qmx"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"uint256 Qmx\n")),(0,l.kt)("h3",{id:"qmy-1"},"Qmy"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"uint256 Qmy\n")),(0,l.kt)("h3",{id:"qlx-1"},"Qlx"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"uint256 Qlx\n")),(0,l.kt)("h3",{id:"qly-1"},"Qly"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"uint256 Qly\n")),(0,l.kt)("h3",{id:"qrx-1"},"Qrx"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"uint256 Qrx\n")),(0,l.kt)("h3",{id:"qry-1"},"Qry"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"uint256 Qry\n")),(0,l.kt)("h3",{id:"qox-1"},"Qox"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"uint256 Qox\n")),(0,l.kt)("h3",{id:"qoy-1"},"Qoy"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"uint256 Qoy\n")),(0,l.kt)("h3",{id:"qcx-1"},"Qcx"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"uint256 Qcx\n")),(0,l.kt)("h3",{id:"qcy-1"},"Qcy"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"uint256 Qcy\n")),(0,l.kt)("h3",{id:"s1x-1"},"S1x"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"uint256 S1x\n")),(0,l.kt)("h3",{id:"s1y-1"},"S1y"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"uint256 S1y\n")),(0,l.kt)("h3",{id:"s2x-1"},"S2x"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"uint256 S2x\n")),(0,l.kt)("h3",{id:"s2y-1"},"S2y"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"uint256 S2y\n")),(0,l.kt)("h3",{id:"s3x-1"},"S3x"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"uint256 S3x\n")),(0,l.kt)("h3",{id:"s3y-1"},"S3y"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"uint256 S3y\n")),(0,l.kt)("h3",{id:"k1-1"},"k1"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"uint256 k1\n")),(0,l.kt)("h3",{id:"k2-1"},"k2"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"uint256 k2\n")),(0,l.kt)("h3",{id:"x2x1-1"},"X2x1"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"uint256 X2x1\n")),(0,l.kt)("h3",{id:"x2x2-1"},"X2x2"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"uint256 X2x2\n")),(0,l.kt)("h3",{id:"x2y1-1"},"X2y1"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"uint256 X2y1\n")),(0,l.kt)("h3",{id:"x2y2-1"},"X2y2"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"uint256 X2y2\n")),(0,l.kt)("h3",{id:"q-1"},"q"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"uint256 q\n")),(0,l.kt)("h3",{id:"qf-1"},"qf"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"uint256 qf\n")),(0,l.kt)("h3",{id:"w1-1"},"w1"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"uint256 w1\n")),(0,l.kt)("h3",{id:"g1x-1"},"G1x"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"uint256 G1x\n")),(0,l.kt)("h3",{id:"g1y-1"},"G1y"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"uint256 G1y\n")),(0,l.kt)("h3",{id:"g2x1-1"},"G2x1"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"uint256 G2x1\n")),(0,l.kt)("h3",{id:"g2x2-1"},"G2x2"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"uint256 G2x2\n")),(0,l.kt)("h3",{id:"g2y1-1"},"G2y1"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"uint256 G2y1\n")),(0,l.kt)("h3",{id:"g2y2-1"},"G2y2"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"uint256 G2y2\n")),(0,l.kt)("h3",{id:"pa-1"},"pA"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"uint16 pA\n")),(0,l.kt)("h3",{id:"pb-1"},"pB"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"uint16 pB\n")),(0,l.kt)("h3",{id:"pc-1"},"pC"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"uint16 pC\n")),(0,l.kt)("h3",{id:"pz-1"},"pZ"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"uint16 pZ\n")),(0,l.kt)("h3",{id:"pt1-1"},"pT1"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"uint16 pT1\n")),(0,l.kt)("h3",{id:"pt2-1"},"pT2"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"uint16 pT2\n")),(0,l.kt)("h3",{id:"pt3-1"},"pT3"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"uint16 pT3\n")),(0,l.kt)("h3",{id:"pwxi-1"},"pWxi"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"uint16 pWxi\n")),(0,l.kt)("h3",{id:"pwxiw-1"},"pWxiw"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"uint16 pWxiw\n")),(0,l.kt)("h3",{id:"peval_a-1"},"pEval_a"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"uint16 pEval_a\n")),(0,l.kt)("h3",{id:"peval_b-1"},"pEval_b"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"uint16 pEval_b\n")),(0,l.kt)("h3",{id:"peval_c-1"},"pEval_c"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"uint16 pEval_c\n")),(0,l.kt)("h3",{id:"peval_s1-1"},"pEval_s1"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"uint16 pEval_s1\n")),(0,l.kt)("h3",{id:"peval_s2-1"},"pEval_s2"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"uint16 pEval_s2\n")),(0,l.kt)("h3",{id:"peval_zw-1"},"pEval_zw"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"uint16 pEval_zw\n")),(0,l.kt)("h3",{id:"peval_r-1"},"pEval_r"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"uint16 pEval_r\n")),(0,l.kt)("h3",{id:"palpha-1"},"pAlpha"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"uint16 pAlpha\n")),(0,l.kt)("h3",{id:"pbeta-1"},"pBeta"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"uint16 pBeta\n")),(0,l.kt)("h3",{id:"pgamma-1"},"pGamma"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"uint16 pGamma\n")),(0,l.kt)("h3",{id:"pxi-1"},"pXi"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"uint16 pXi\n")),(0,l.kt)("h3",{id:"pxin-1"},"pXin"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"uint16 pXin\n")),(0,l.kt)("h3",{id:"pbetaxi-1"},"pBetaXi"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"uint16 pBetaXi\n")),(0,l.kt)("h3",{id:"pv1-1"},"pV1"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"uint16 pV1\n")),(0,l.kt)("h3",{id:"pv2-1"},"pV2"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"uint16 pV2\n")),(0,l.kt)("h3",{id:"pv3-1"},"pV3"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"uint16 pV3\n")),(0,l.kt)("h3",{id:"pv4-1"},"pV4"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"uint16 pV4\n")),(0,l.kt)("h3",{id:"pv5-1"},"pV5"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"uint16 pV5\n")),(0,l.kt)("h3",{id:"pv6-1"},"pV6"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"uint16 pV6\n")),(0,l.kt)("h3",{id:"pu-1"},"pU"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"uint16 pU\n")),(0,l.kt)("h3",{id:"ppl-1"},"pPl"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"uint16 pPl\n")),(0,l.kt)("h3",{id:"peval_t-1"},"pEval_t"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"uint16 pEval_t\n")),(0,l.kt)("h3",{id:"pa1-1"},"pA1"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"uint16 pA1\n")),(0,l.kt)("h3",{id:"pb1-1"},"pB1"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"uint16 pB1\n")),(0,l.kt)("h3",{id:"pzh-1"},"pZh"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"uint16 pZh\n")),(0,l.kt)("h3",{id:"pzhinv-1"},"pZhInv"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"uint16 pZhInv\n")),(0,l.kt)("h3",{id:"peval_l1-1"},"pEval_l1"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"uint16 pEval_l1\n")),(0,l.kt)("h3",{id:"peval_l2-1"},"pEval_l2"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"uint16 pEval_l2\n")),(0,l.kt)("h3",{id:"peval_l3-1"},"pEval_l3"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"uint16 pEval_l3\n")),(0,l.kt)("h3",{id:"peval_l4-1"},"pEval_l4"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"uint16 pEval_l4\n")),(0,l.kt)("h3",{id:"peval_l5-1"},"pEval_l5"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"uint16 pEval_l5\n")),(0,l.kt)("h3",{id:"peval_l6-1"},"pEval_l6"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"uint16 pEval_l6\n")),(0,l.kt)("h3",{id:"peval_l7-1"},"pEval_l7"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"uint16 pEval_l7\n")),(0,l.kt)("h3",{id:"lastmem-1"},"lastMem"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"uint16 lastMem\n")),(0,l.kt)("h3",{id:"verifyproof-3"},"verifyProof"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function verifyProof(bytes proof, uint256[] pubSignals) public view returns (bool)\n")))}u.isMDXComponent=!0}}]);