"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[2582],{3905:(e,t,r)=>{r.d(t,{Zo:()=>p,kt:()=>d});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function s(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var l=n.createContext({}),c=function(e){var t=n.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):s(s({},t),e)),r},p=function(e){var t=c(e.components);return n.createElement(l.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},h=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,l=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),h=c(r),d=a,m=h["".concat(l,".").concat(d)]||h[d]||u[d]||o;return r?n.createElement(m,s(s({ref:t},p),{},{components:r})):n.createElement(m,s({ref:t},p))}));function d(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,s=new Array(o);s[0]=h;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i.mdxType="string"==typeof e?e:a,s[1]=i;for(var c=2;c<o;c++)s[c]=r[c];return n.createElement.apply(null,s)}return n.createElement.apply(null,r)}h.displayName="MDXCreateElement"},4225:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>l,contentTitle:()=>s,default:()=>u,frontMatter:()=>o,metadata:()=>i,toc:()=>c});var n=r(7462),a=(r(7294),r(3905));const o={sidebar_position:10,description:"User Flows"},s="User Flows",i={unversionedId:"protocol/user-flows",id:"protocol/user-flows",title:"User Flows",description:"User Flows",source:"@site/docs/protocol/user-flows.mdx",sourceDirName:"protocol",slug:"/protocol/user-flows",permalink:"/docs/protocol/user-flows",draft:!1,editUrl:"https://github.com/nevermined-io/docs/tree/main/docs/protocol/user-flows.mdx",tags:[],version:"current",sidebarPosition:10,frontMatter:{sidebar_position:10,description:"User Flows"},sidebar:"tutorialSidebar",previous:{title:"Payment Plans",permalink:"/docs/protocol/payment-plans"},next:{title:"AI Agents integration",permalink:"/docs/protocol/agents-integration"}},l={},c=[{value:"High Level Flow",id:"high-level-flow",level:2},{value:"Registration",id:"registration",level:2}],p={toc:c};function u(e){let{components:t,...o}=e;return(0,a.kt)("wrapper",(0,n.Z)({},p,o,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"user-flows"},"User Flows"),(0,a.kt)("h2",{id:"high-level-flow"},"High Level Flow"),(0,a.kt)("p",null,"The Nevermined protocol allows the registration, payment and usage of AI Agents. The following flow describes the interaction between an AI builder managing an AI Agent and a final user:"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"The AI builder registers the AI Agent & Payment Plan via the Nevermined App or the NVM Library"),(0,a.kt)("li",{parentName:"ol"},"A user (or AI Agent) discovers the AI Agent and purchases the Payment Plan attached to it (also via App or Library). When the user makes this payment it receives credits representing the Payment Plan in their wallet"),(0,a.kt)("li",{parentName:"ol"},"The user makes a request to the AI Agent of a new Task. This Task is requested via a HTTP request sent to the AI Agent through the Nevermined Proxy"),(0,a.kt)("li",{parentName:"ol"},"The Nevermined Proxy validates the user request and if everything is correct let\u2019s it pass the request to the Nevermined AI API"),(0,a.kt)("li",{parentName:"ol"},"The AI Agent subscribes for new Tasks. It picks up the Task requested from the user."),(0,a.kt)("li",{parentName:"ol"},"The AI Agent process the Task and Steps and reports back the results of the execution of the Task"),(0,a.kt)("li",{parentName:"ol"},"The user fetches the AI results")),(0,a.kt)("p",null,"If the request sent by the user was processed correctly, Nevermined infrastructure will redeem the credits used to process the Task."),(0,a.kt)("p",null,(0,a.kt)("img",{alt:"AI High Level Flow",src:r(9265).Z,width:"960",height:"540"})),(0,a.kt)("h2",{id:"registration"},"Registration"),(0,a.kt)("p",null,"It allows the registration of assets (agents, models, payment plans, etc) in a Nevermined network. The registration happens directly from the Publisher and involves the following steps:"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"The publisher locally computes the DID using the Metadata and registers it on-chain in the DIDRegistry contract associated with the URL where the metadata will be stored"),(0,a.kt)("li",{parentName:"ol"},"The publisher stores the metadata and any existing Metadata API implementation")),(0,a.kt)("p",null,"Having a DID any user can resolve the metadata by having the DID query the DIDRegistry Smart Contract:"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"The user having the DID can get the full metadata url"),(0,a.kt)("li",{parentName:"ol"},"Having the metadata url the user can fetch the complete metadata from the Metadata API")),(0,a.kt)("p",null,(0,a.kt)("img",{alt:"Sequence Diagram Registration",src:r(6263).Z,width:"960",height:"540"})))}u.isMDXComponent=!0},9265:(e,t,r)=>{r.d(t,{Z:()=>n});const n=r.p+"assets/images/architecture_high_level_flow-94eddb65b034e17c3a6d139a30c670ad.png"},6263:(e,t,r)=>{r.d(t,{Z:()=>n});const n=r.p+"assets/images/sequience_registration-3ac9b4b4f3b4cbaa57a40c7e7adea059.png"}}]);