"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[7166],{3905:(e,t,n)=>{n.d(t,{Zo:()=>l,kt:()=>f});var a=n(67294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function r(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,a,i=function(e,t){if(null==e)return{};var n,a,i={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var d=a.createContext({}),s=function(e){var t=a.useContext(d),n=t;return e&&(n="function"==typeof e?e(t):r(r({},t),e)),n},l=function(e){var t=s(e.components);return a.createElement(d.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},u=a.forwardRef((function(e,t){var n=e.components,i=e.mdxType,o=e.originalType,d=e.parentName,l=c(e,["components","mdxType","originalType","parentName"]),u=s(n),f=i,m=u["".concat(d,".").concat(f)]||u[f]||p[f]||o;return n?a.createElement(m,r(r({ref:t},l),{},{components:n})):a.createElement(m,r({ref:t},l))}));function f(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var o=n.length,r=new Array(o);r[0]=u;var c={};for(var d in t)hasOwnProperty.call(t,d)&&(c[d]=t[d]);c.originalType=e,c.mdxType="string"==typeof e?e:i,r[1]=c;for(var s=2;s<o;s++)r[s]=n[s];return a.createElement.apply(null,r)}return a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},24475:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>d,contentTitle:()=>r,default:()=>p,frontMatter:()=>o,metadata:()=>c,toc:()=>s});var a=n(87462),i=(n(67294),n(3905));const o={sidebar_position:5,description:"Use the CLI to connect to different Nevermined environments"},r="Connecting to Nevermined from the command line",c={unversionedId:"tutorials/connect-cli",id:"tutorials/connect-cli",title:"Connecting to Nevermined from the command line",description:"Use the CLI to connect to different Nevermined environments",source:"@site/docs/tutorials/connect-cli.md",sourceDirName:"tutorials",slug:"/tutorials/connect-cli",permalink:"/docs/tutorials/connect-cli",draft:!1,tags:[],version:"current",sidebarPosition:5,frontMatter:{sidebar_position:5,description:"Use the CLI to connect to different Nevermined environments"},sidebar:"tutorialSidebar",previous:{title:"How to use the Nevermined App?",permalink:"/docs/tutorials/nevermined-app"},next:{title:"Getting tokens from faucets in testnet environments",permalink:"/docs/tutorials/faucets"}},d={},s=[{value:"Getting Started",id:"getting-started",level:2},{value:"Creating a new account",id:"creating-a-new-account",level:3},{value:"Getting Funds",id:"getting-funds",level:3},{value:"Connecting to a Nevermined network",id:"connecting-to-a-nevermined-network",level:2},{value:"Registering an asset tokenized via NFTs",id:"registering-an-asset-tokenized-via-nfts",level:2},{value:"Register the asset on Nevermined",id:"register-the-asset-on-nevermined",level:3},{value:"Minting",id:"minting",level:3},{value:"Discovering the asset created",id:"discovering-the-asset-created",level:2},{value:"Purchase the NFT using a different user",id:"purchase-the-nft-using-a-different-user",level:2}],l={toc:s};function p(e){let{components:t,...n}=e;return(0,i.kt)("wrapper",(0,a.Z)({},l,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"connecting-to-nevermined-from-the-command-line"},"Connecting to Nevermined from the command line"),(0,i.kt)("p",null,"The Nevermined CLI (aka NVM CLI or ",(0,i.kt)("inlineCode",{parentName:"p"},"ncli"),") allows to interact with a Nevermined deployment from the command line interface allowing to do everything is supported from a traditional Nevermined web environment like a Marketplace or similar DApp."),(0,i.kt)("p",null,"The ",(0,i.kt)("inlineCode",{parentName:"p"},"ncli")," allows to connect to a local Nevermined environment (see in the ",(0,i.kt)("a",{parentName:"p",href:"/docs/tutorials/running-locally"},"Nevermined Tools tutorial")," how to do that) or with a remote one."),(0,i.kt)("p",null,"This tutorial will show some of the basics about how to use the ",(0,i.kt)("inlineCode",{parentName:"p"},"ncli")," and get quick information about what's going on in a Nevermined environment."),(0,i.kt)("h2",{id:"getting-started"},"Getting Started"),(0,i.kt)("p",null,"You can find more details in the ",(0,i.kt)("a",{parentName:"p",href:"/docs/cli/getting-started"},(0,i.kt)("inlineCode",{parentName:"a"},"ncli")," documentation page"),", but basically what we need is to install the ",(0,i.kt)("inlineCode",{parentName:"p"},"ncli")," software packaged in ",(0,i.kt)("inlineCode",{parentName:"p"},"NPM")," format. This means you can install it easily in your environment running one of the following commands:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"npm install -g @nevermined-io/cli\n\nor\n\nyarn global add @nevermined-io/cli\n")),(0,i.kt)("p",null,"After doing that you should have available in your system the ",(0,i.kt)("inlineCode",{parentName:"p"},"ncli")," tool."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"$ ncli --version\n$ ncli --help\n")),(0,i.kt)("h3",{id:"creating-a-new-account"},"Creating a new account"),(0,i.kt)("p",null,"If you don't have an account locally or you want to use a new one to use the ",(0,i.kt)("inlineCode",{parentName:"p"},"ncli"),", create it is very simple, you just need to use the ",(0,i.kt)("inlineCode",{parentName:"p"},"ncli"),":"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"ncli accounts new\n\nCreating wallet ...\nWallet address: 0x37434d6673ff106446c9224884D54201e5Ae46A4\nWallet public key: 0x0482d6aac219607b47c0a840784909e19694cf66d35262c0ddbf41d753962388812e5394e083a0c54bce10282b6ec0fd86be7f77d296868184e6fd999c4c1fa7e6\nWallet private key: 0x0acb0253593fcbbd20e0fd82b8ff35c8a6e6c1f32c09d1bc8b41cec9031c0986\nWallet Mnemonic:\n  Phrase: street fever feed resource place adapt venue mobile hill try armed feature\n  Path: m/44'/60'/0'/0/0\n  Locale: en\n\nIf you want to use it in the CLI run:\nexport MNEMONIC=\"street fever feed resource place adapt venue mobile hill try armed feature\"\n")),(0,i.kt)("p",null,"As the command output says, you just need to export the ",(0,i.kt)("inlineCode",{parentName:"p"},"MNEMONIC")," environment variable and start using the ",(0,i.kt)("inlineCode",{parentName:"p"},"ncli"),"."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},'export MNEMONIC="street fever feed resource place adapt venue mobile hill try armed feature"\n')),(0,i.kt)("admonition",{type:"tip"},(0,i.kt)("p",{parentName:"admonition"},"You can find more configuration options in the ",(0,i.kt)("a",{parentName:"p",href:"/docs/cli/advanced_configuration"},(0,i.kt)("inlineCode",{parentName:"a"},"ncli")," advanced configuration")," page.")),(0,i.kt)("h3",{id:"getting-funds"},"Getting Funds"),(0,i.kt)("p",null,"To interact with a blockchain public network you need to own some native tokens in the network where you are connected. You can find some information about how to get funds in a ",(0,i.kt)("inlineCode",{parentName:"p"},"testnet")," in the ",(0,i.kt)("a",{parentName:"p",href:"https://docs.nevermined.io/docs/tutorials/faucets"},"Faucets tutorial"),"."),(0,i.kt)("p",null,"After requesting some ",(0,i.kt)("inlineCode",{parentName:"p"},"USDC")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"MATIC")," on ",(0,i.kt)("inlineCode",{parentName:"p"},"Mumbai")," you can check you have balance using the command:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"$ ncli accounts balance \n===== Account 0x827C6546CA48Ee9a33EFEe3342292E61C6eA6507 - Index: 0 =====\nMATIC Balance: 250000000000000000000000000000000000\nToken Balance: 180000000000000000000 USDC\nEtherscan Url: https://mumbai.polygonscan.com/address/0x827C6546CA48Ee9a33EFEe3342292E61C6eA6507\nNFT Balance: 0\n\n===== Account 0x7064f267187EbD0eDD3e14141f3AF0E5A91047B1 - Index: 1 =====\n\n[...]\n\n")),(0,i.kt)("p",null,"The command will return the balance for the 10 first derivation paths of your MNEMONIC. By default check the first account balance (Index 0) like in the example."),(0,i.kt)("h2",{id:"connecting-to-a-nevermined-network"},"Connecting to a Nevermined network"),(0,i.kt)("p",null,"Once you have your account and that account has some funds, we can start interacting with the public networks."),(0,i.kt)("p",null,"First we are gonna list the available networks:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"ncli network list\n")),(0,i.kt)("p",null,"And later see the status of any of them:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"ncli --network testnet network status\n")),(0,i.kt)("admonition",{type:"info"},(0,i.kt)("p",{parentName:"admonition"},"By default Nevermined ",(0,i.kt)("inlineCode",{parentName:"p"},"ncli")," uses the ",(0,i.kt)("inlineCode",{parentName:"p"},"testnet")," network that is connected to ",(0,i.kt)("inlineCode",{parentName:"p"},"Polygon Mumbai"),". So if you don't pass the ",(0,i.kt)("inlineCode",{parentName:"p"},"--network")," parameter it will use that by default.")),(0,i.kt)("h2",{id:"registering-an-asset-tokenized-via-nfts"},"Registering an asset tokenized via NFTs"),(0,i.kt)("p",null,"Nevermined allows the tokenization of assets via the association of them with a NFT contract based on a ",(0,i.kt)("inlineCode",{parentName:"p"},"ERC-721")," or ",(0,i.kt)("inlineCode",{parentName:"p"},"ERC-1155")," (see more about the ",(0,i.kt)("a",{parentName:"p",href:"https://www.rfox.finance/blogs/erc-721-vs-erc-1155-tokens-a-comparison-guide-of-ethereum-nft-standards"},"differences between the different NFT token standards"),")."),(0,i.kt)("p",null,"You have some information about how to do this using a ",(0,i.kt)("inlineCode",{parentName:"p"},"ERC-721")," in the ",(0,i.kt)("a",{parentName:"p",href:"/docs/cli/using-cli#nfts"},"CLI documentation"),", so for this tutorial we are gonna use NFTs based on ",(0,i.kt)("inlineCode",{parentName:"p"},"ERC-1155")," to have a different example."),(0,i.kt)("p",null,"Let's define first what is our use case:"),(0,i.kt)("admonition",{title:"Use Case",type:"note"},(0,i.kt)("p",{parentName:"admonition"},"As a content creator I want to tokenize a fractal I created. I want to make available ",(0,i.kt)("strong",{parentName:"p"},"10 editions")," of it, and sell them for ",(0,i.kt)("strong",{parentName:"p"},"100 USDC")," each of them. Whoever owning one of these editions will be able to have ",(0,i.kt)("strong",{parentName:"p"},"exclusive access")," to the fractal file.")),(0,i.kt)("h3",{id:"register-the-asset-on-nevermined"},"Register the asset on Nevermined"),(0,i.kt)("p",null,"First let's upload the fractal file to IPFS:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"$ ncli utils upload fractal.1920x1080.jpg \nURL: cid://bafkreiabenhumlyfecdaz546ycvh6lljsf7og7qwu6f6vzhpqq4lcgutn4\nPassword: /S8%sx;]}sK=I+vwZc3/wYgr1Z<<~BFH\n")),(0,i.kt)("p",null,"And now let's register the asset in Nevermined. As you see in the command options we are capping the NFT to 10 editions:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"$ ncli nfts1155 create --name 'Badass fractal' --author 'John Doe' --price 100 --urls cid://bafkreiabenhumlyfecdaz546ycvh6lljsf7og7qwu6f6vzhpqq4lcgutn4 --contentType image/jpeg --cap 10\n\nCreating NFT ...\nLoading token\n\nCreating Asset ...\nRegistering Asset\nServices Added\nGenerating proof\nProof generated\nConditions filled\nEncrypting files\nFiles encrypted\nRegistering Mintable Asset did:nv:e4cd0187b8d8d0db4a03e31fbdda2cf088d28789c93b24bf2f58bc9763bac211\nStoring DDO did:nv:e4cd0187b8d8d0db4a03e31fbdda2cf088d28789c93b24bf2f58bc9763bac211\nDDO stored\nAsset registred\nAsset with DID created: did:nv:e4cd0187b8d8d0db4a03e31fbdda2cf088d28789c93b24bf2f58bc9763bac211\nCreated DID: did:nv:e4cd0187b8d8d0db4a03e31fbdda2cf088d28789c93b24bf2f58bc9763bac211 with NFT associated and endpoint: https://marketplace-api.mumbai.public.nevermined.network/api/v1/metadata/assets/ddo/did:nv:e4cd0187b8d8d0db4a03e31fbdda2cf088d28789c93b24bf2f58bc9763bac211\nNow please mint the token on the NFT Contract!\n\n")),(0,i.kt)("p",null,"The ",(0,i.kt)("inlineCode",{parentName:"p"},"DID")," returned is the unique identifier of the asset created in a Nevermined network. You can fetch all the metadata associated to the asset just asking for that ",(0,i.kt)("inlineCode",{parentName:"p"},"DID"),":"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"$ ncli nfts1155 show did:nv:e4cd0187b8d8d0db4a03e31fbdda2cf088d28789c93b24bf2f58bc9763bac211\n\nLoading information of NFTs attached to the DID: 'did:nv:e4cd0187b8d8d0db4a03e31fbdda2cf088d28789c93b24bf2f58bc9763bac211'\n====== Nevermined ======\n====== did:nv:e4cd0187b8d8d0db4a03e31fbdda2cf088d28789c93b24bf2f58bc9763bac211 ======\nUrl: https://marketplace-api.mumbai.public.nevermined.network/api/v1/metadata/assets/ddo/did:nv:e4cd0187b8d8d0db4a03e31fbdda2cf088d28789c93b24bf2f58bc9763bac211\nName: Badass fractal\nAuthor: John Doe\nLicense: \nFiles: 1\n\n\n====== Internal NFT (ERC-1155) Registry ======\nTotal NFT Supply: 0\nMint Cap: 10\nRoyalties: 0\nAccount 0x827C6546CA48Ee9a33EFEe3342292E61C6eA6507 balance: 0\nPrice (NFT-1155): 180000000000000000000 USDC\n\n")),(0,i.kt)("admonition",{title:"Nevermined doesn't store your data",type:"info"},(0,i.kt)("p",{parentName:"admonition"},"Nevermined never stores your files in any way. In most of the cases these are stored in a marketplace, your own infrastructure or a public network. Nevermined just stores internal ids and metadata to allow the transactions between parties to happen.")),(0,i.kt)("h3",{id:"minting"},"Minting"),(0,i.kt)("p",null,"We didn't mint any edition during the NFT creation (that is possible using the ",(0,i.kt)("inlineCode",{parentName:"p"},"--preMint")," parameter), so let's mint the 10 editions:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"$ ncli nfts1155 mint did:nv:e4cd0187b8d8d0db4a03e31fbdda2cf088d28789c93b24bf2f58bc9763bac211 --amount 10\n\nMinting NFT: 'did:nv:e4cd0187b8d8d0db4a03e31fbdda2cf088d28789c93b24bf2f58bc9763bac211'\nMinting NFT with service Endpoint! https://marketplace-api.mumbai.public.nevermined.network/api/v1/metadata/assets/ddo/did:nv:e4cd0187b8d8d0db4a03e31fbdda2cf088d28789c93b24bf2f58bc9763bac211\nMinted  10' NFTs (ERC-1155) 'did:nv:e4cd0187b8d8d0db4a03e31fbdda2cf088d28789c93b24bf2f58bc9763bac211'!\n\n")),(0,i.kt)("p",null,"If now you run the same ",(0,i.kt)("inlineCode",{parentName:"p"},"show")," command as before you can notice in the balance the asset creator owns the 10 editions just minted:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"$ ncli nfts1155 show did:nv:e4cd0187b8d8d0db4a03e31fbdda2cf088d28789c93b24bf2f58bc9763bac211\n\n\n====== Internal NFT (ERC-1155) Registry ======\nTotal NFT Supply: 10\nMint Cap: 10\nRoyalties: 0\nAccount 0x827C6546CA48Ee9a33EFEe3342292E61C6eA6507 balance: 10\nPrice (NFT-1155): 180000000000000000000 USDC\n\n")),(0,i.kt)("h2",{id:"discovering-the-asset-created"},"Discovering the asset created"),(0,i.kt)("p",null,"So now our tokenized asset is published, let's use a different account to purchase the asset and download the fractal file. In a different terminal let's create a new account as we did before:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},'$ ncli accounts new\nCreating wallet ...\nWallet address: 0x748eac52C4FaAfD64C4cba68178A2F0904804314\nWallet public key: 0x049be7747e669849a0203ac28ba45bdafd6660e663b884ea75c06ef6c81976c943cf264f42708fe2bf92fe1ea3069dbf15fe919bb7d70ca47be776a060da894724\nWallet private key: 0x4781bbae558c9d6c40bf0f1aa57a996aacbc1f9d4eb43059242abee69cc73a87\nWallet Mnemonic:\n  Phrase: elite cry swim vintage twelve choose lamp hazard blossom reject crew captain\n  Path: m/44\'/60\'/0\'/0/0\n  Locale: en\n\nIf you want to use it in the CLI run:\nexport MNEMONIC="elite cry swim vintage twelve choose lamp hazard blossom reject crew captain"\n\n$ export MNexport MNEMONIC="elite cry swim vintage twelve choose lamp hazard blossom reject crew captain"\n')),(0,i.kt)("p",null,"And we fund the account with the public faucets. Please see the ",(0,i.kt)("a",{parentName:"p",href:"https://docs.nevermined.io/docs/tutorials/faucets"},"Faucets tutorial"),"."),(0,i.kt)("p",null,"So as a consumer I can search for fractal assets:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},'$ ncli assets search  "Fractal"\n\nSearch using query: Fractal\nTotal Results: [object Object] - Total Pages: 1\nPage: 1\n---------------------------\ndataset > Name: Badass fractal - Url: https://marketplace-api.mumbai.public.nevermined.network/api/v1/metadata/assets/ddo/did:nv:e4cd0187b8d8d0db4a03e31fbdda2cf088d28789c93b24bf2f58bc9763bac211\n---------------------------\n\n')),(0,i.kt)("p",null,"And see the details of the NFT:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"$ ncli nfts1155 show did:nv:e4cd0187b8d8d0db4a03e31fbdda2cf088d28789c93b24bf2f58bc9763bac211\nCannot load optional contract CurveRoyalties\nLoading information of NFTs attached to the DID: 'did:nv:e4cd0187b8d8d0db4a03e31fbdda2cf088d28789c93b24bf2f58bc9763bac211'\n====== Nevermined ======\n====== did:nv:e4cd0187b8d8d0db4a03e31fbdda2cf088d28789c93b24bf2f58bc9763bac211 ======\nUrl: https://marketplace-api.mumbai.public.nevermined.network/api/v1/metadata/assets/ddo/did:nv:e4cd0187b8d8d0db4a03e31fbdda2cf088d28789c93b24bf2f58bc9763bac211\nName: Badass fractal\nAuthor: John Doe\nLicense: \nFiles: 1\n\n\n====== Internal NFT (ERC-1155) Registry ======\nTotal NFT Supply: 10\nMint Cap: 10\nRoyalties: 10\nAccount 0x748eac52C4FaAfD64C4cba68178A2F0904804314 balance: 0\nPrice (NFT-1155): 180000000000000000000 USDC\n")),(0,i.kt)("h2",{id:"purchase-the-nft-using-a-different-user"},"Purchase the NFT using a different user"),(0,i.kt)("p",null,"So now using the consumer account we created we can purchase the NFT attached to the Fractal asset:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"ncli nfts1155 order did:nv:e4cd0187b8d8d0db4a03e31fbdda2cf088d28789c93b24bf2f58bc9763bac211\n")),(0,i.kt)("p",null,"If everything went okay, now you should be able to download the files attached to the asset and protected by the NFT as access control:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"ncli nfts1155 download did:nv:e4cd0187b8d8d0db4a03e31fbdda2cf088d28789c93b24bf2f58bc9763bac211 --destination /tmp\n")))}p.isMDXComponent=!0}}]);